Unlock the user alpha2 
 --> usermod -U alpha2 

Open file disabling termcap init/reset 
 --> less -X file.txt 

Sleep 50 seconds 
 --> sleep 50 

Switch to qa account 
 --> su qa 

Make request with SSL cipher selection 
 --> curl --ciphers ECDHE-RSA-AES256-GCM-SHA384 https://example.com 

Show specific fields of a connection 
 --> nmcli -f NAME,UUID,TYPE,DEVICE connection show 

Query the A record for github.com and display output with both timestamp and color 
 --> date; host github.com | lolcat 

Only download package lists 
 --> sudo apt update --download-only 

Display memory usage in gigabytes 
 --> free -g 

Run last command starting with pip 
 --> !pip 

Open file with folding enabled 
 --> vim -c 'set foldmethod=indent' file.txt 

Find all files in /srv but skip logs directories 
 --> find /srv -path "*/logs" -prune -o -type f -print 

Traceroute to 8.8.8.8 using only IPv4 addresses 
 --> traceroute -4 8.8.8.8 

Show configuration for the loopback interface 
 --> ifconfig lo 

Mount encrypted drive opened with cryptsetup 
 --> mount /dev/mapper/encrypted /mnt/encrypted 

Display memory usage in gigabytes with detailed stats and total, update every 3 seconds, 3 times 
 --> free -g -l -t -s 3 -c 3 

Create a new screen session named 'myjob' 
 --> screen -S myjob 

Restart nginx server 
 --> service nginx restart 

List all items, including hidden, with type indicators 
 --> ls -aF 

Display current shell for each user 
 --> w | awk '{print $1}' | xargs -I {} getent passwd {} | cut -d: -f7 

Query the ANY record for github.com 
 --> host -t ANY github.com 

Search for 'git' in command history 
 --> history | grep git 

Run Python script with niceness +2 
 --> nice -n 2 python3 script.py 

Run mtr to amazon.com and show output in split format with 60 cycles 
 --> mtr --split -c 60 amazon.com 

Run background process and wait before exit 
 --> long_task & wait 

Query ANY record for google.com with +short output 
 --> dig google.com ANY +short 

Ping 8.8.8.8 and flood ping (root required) 
 --> ping -f 8.8.8.8 

Copy all files in /var/log recursively to /backup/logs 
 --> cp -r /var/log /backup/logs/ 

Login to frontend user 
 --> su frontend 

Copy all files in /var/log/nginx to /backup/nginx 
 --> cp /var/log/nginx/* /backup/nginx/ 

Make a PATCH request with data 
 --> curl -X PATCH -d 'field=newvalue' http://example.com/api/resource/123 

Clear all visible lines from terminal 
 --> clear 

Use fdisk to manage partitions 
 --> fdisk /dev/sda 

Go up one directory level 
 --> cd .. 

Mount bind of /etc to /mnt/etc 
 --> mount --bind /etc /mnt/etc 

Run network scan with niceness +13 
 --> nice -n 13 nmap -A target 

Modify device configuration 
 --> nmcli device modify eth0 ipv4.addresses 192.168.1.100/24 

Make ntfs fs on external drive /dev/sda3 
 --> mkfs.ntfs /dev/sda3 

Run mtr to amazon.com with 300 cycles, interval 10s, and output in split format 
 --> mtr --split -c 300 -i 10 amazon.com 

List all sockets for a specific destination IP 
 --> ss dst 8.8.8.8 

Copy a file 'kern.log' to /var/log 
 --> cp kern.log /var/log/ 

Make a zip of the backup directory 
 --> zip -r backup.zip backup 

Query the A record for example.com and display output in uppercase and color 
 --> host example.com | tr '[:lower:]' '[:upper:]' | lolcat 

Send SIGXCPU to PID 3637 
 --> kill -XCPU 3637 

Disable promiscuous mode on enp0s3 
 --> sudo ifconfig enp0s3 -promisc 

Set permission to 640 for secret.txt 
 --> chmod 640 secret.txt 

Create a file called 'locale-langpack' in your home 
 --> touch ~/locale-langpack 

Find total login terminals 
 --> who | awk '{print $2}' | sort | uniq | wc -l 

Show logs in short-monotonic format 
 --> journalctl -o short-monotonic 

Make user with name newguy and bash shell 
 --> useradd -s /bin/bash newguy 

Reset the access key for sysadmin 
 --> passwd sysadmin 

Verbose auto-remove 
 --> sudo apt autoremove --verbose-versions 

Change name of admins group to super_admins 
 --> groupmod -n super_admins admins 

Show all interfaces with their status (RUNNING) 
 --> ifconfig -a | grep RUNNING 

List users who are using bash 
 --> w | grep bash 

Gzip config.yaml 
 --> gzip config.yaml 

Display disk usage for all files and directories, using block size of 4P 
 --> du -B 4P 

Kill all processes older than 10 minutes named sleep 
 --> killall -o sleep 

Run mtr to amazon.com and set the number of pings per hop to 17 
 --> mtr -c 17 amazon.com 

Create a file called 'test' in /home/bob 
 --> touch /home/bob/test 

Make user11 owner of journal.pdf 
 --> chown user11 journal.pdf 

Send multiple commands to tmux session 
 --> tmux send-keys -t shell 'cd / && ls' C-m 

Kill a screen session named 'test' 
 --> screen -S test -X quit 

Show the kernel version 
 --> uname -v 

Get the last 20 commands from history 
 --> history | tail -n 20 

Change to the /var/log/secure directory 
 --> cd /var/log/secure 

Print full partition info of disk /dev/sde 
 --> parted /dev/sde print 

Lock password for remote_user 
 --> passwd -l remote_user 

Display disk usage for all files and directories, using block size of 256K 
 --> du -B 256K 

Disable password for user oliver 
 --> usermod -p '!' oliver 

Background a C program and wait 
 --> ./a.out & wait 

Open file and record macro 'q' 
 --> vim -c 'normal! qq' 

Compress api_response.json using gzip 
 --> gzip api_response.json 

Extract usernames from who 
 --> who | cut -d ' ' -f1 

Copy all files in the current directory to /tmp and keep everything and keep timestamps 
 --> cp -a --preserve=timestamps * /tmp/ 

Query the CNAME record for www.google.com 
 --> nslookup -query=CNAME www.google.com 

Show all connections for a specific user 
 --> sudo netstat -ap | grep username 

Create a directory called 'media' in /mnt 
 --> mkdir /mnt/media 

Sync files and specify a custom daemon auth users 
 --> rsync -avz --daemon --auth-users=user1,user2 source_dir/ destination_dir/ 

Create a file called 'lastlog' in /var/log 
 --> touch /var/log/lastlog 

Query the A record for github.com and use IPv6 
 --> nslookup -query=AAAA github.com 

Create a directory named 'bin' in the parent directory 
 --> mkdir ../bin 

Sync files and specify a custom daemon socket 
 --> rsync -avz --daemon --socket=/var/run/rsyncd.sock source_dir/ destination_dir/ 

Find out who is logged in 
 --> who 

Display memory usage in megabytes, update every 30 seconds indefinitely 
 --> free -m -s 30 

Start vim with minimal vimrc 
 --> vim -u NORC file.txt 

Create a file called 'config.yaml' in /etc 
 --> touch /etc/config.yaml 

Add a system user daemonuser 
 --> useradd -r daemonuser 

Output the current directory path with a custom message. 
 --> echo "You are in: $(pwd)" 

List the contents of the /sys directory 
 --> ls /sys 

Display the contents of the current directory in a long list format, sorted by size and reversed 
 --> ls -lSr 

Traceroute to github.com with IPv6 source address 
 --> traceroute -S 2001:db8::1 github.com 

Traceroute to google.com using only IPv4 and max TTL 20 
 --> traceroute -4 -m 20 google.com 

Display kernel version and operating system 
 --> uname -vo 

Remove lock on account data_admin 
 --> passwd -u data_admin 

Display memory usage in human-readable format, update every second indefinitely 
 --> free -h -s 1 

Run top and show only processes with PPID 1 
 --> top -b -n 1 | awk '$5 == 1' 

Delete ux_test_user 
 --> userdel ux_test_user 

Change to the Downloads directory in your home folder 
 --> cd ~/Downloads 

Run fdisk on SATA drive 
 --> fdisk /dev/sda 

Assign user17 to own the build folder 
 --> chown user17 build 

Run mtr to facebook.com with 100 cycles, interval 0.5s, and output in wide format 
 --> mtr --wide -c 100 -i 0.5 facebook.com 

Query the A record for example.com and set search domain to . 
 --> nslookup example.com . 

Lock user bob's account 
 --> passwd -l bob 

Run ansible playbook with nohup 
 --> nohup ansible-playbook deploy.yml & 

Query A record for google.com and set +nocmd 
 --> dig google.com +nocmd 

Download a file and mirror a website with append output 
 --> wget --mirror --append-output=log.txt http://example.com/ 

Recursively move the /opt directory to /backup/opt 
 --> mv /opt /backup/opt/ 

Form a group for policy_review 
 --> groupadd policy_review 

Traceroute to github.com without resolving IP addresses to hostnames 
 --> traceroute -n github.com 

Use bzip2 to compress the message.txt file 
 --> bzip2 message.txt 

Query A record for google.com and set +additional 
 --> dig google.com +additional 

Update the password of user bob 
 --> passwd bob 

Grant write access to group for log.txt 
 --> chmod g+w log.txt 

Display disk usage for all files and directories, using block size of 1Z 
 --> du -B 1Z 

Copy all files in /var/log/apt/term.log to /backup/apt-term 
 --> cp /var/log/apt/term.log/* /backup/apt-term/ 

Remove multiple packages 
 --> sudo apt remove git curl vim 

Print UUIDs and filesystem names 
 --> blkid 

Change comment of user vinay to 'Senior Dev' 
 --> usermod -c 'Senior Dev' vinay 

Create node_admins group 
 --> groupadd node_admins 

Ping 8.8.8.8 with verbose output 
 --> ping -v 8.8.8.8 

Query the A record for google.com with port 5353 
 --> nslookup -port=5353 google.com 

Alias to show last 50 commands 
 --> alias h50='history | tail -n 50' 

Run mtr to github.com and use IPv4 only 
 --> mtr -4 github.com 

Display all system information except kernel name and network node hostname 
 --> uname -a 

Run htop and show only the top 5 CPU-consuming processes 
 --> htop | head -n 10 | tail -n 5 

Run mtr to google.com and show output in JSON format 
 --> mtr --json google.com 

Run htop and show only processes using more than 10% CPU 
 --> htop | awk '$9 > 10' 

Traceroute to 8.8.8.8 using UDP port 53 
 --> traceroute -U 8.8.8.8 

Make a primary ext4 partition from 1MB to 1GB on /dev/sdc 
 --> parted /dev/sdc mkpart primary ext4 1MiB 1GiB 

Enable login for sysadmin 
 --> passwd -u sysadmin 

List all sockets and filter for SYN-RECV state 
 --> ss state syn-recv 

Show only processes with TTY 
 --> ps -e -o tty,pid,cmd | grep -v '?' 

Kill all tmux sessions 
 --> tmux kill-server 

Query the A record for github.com and display output with line numbers 
 --> host github.com | nl 

Add user gituser with home set to /srv/git 
 --> useradd -m -d /srv/git gituser 

Simulate remove 
 --> sudo dpkg -r --dry-run package-name 

Show last lines of JSON file 
 --> jq . file.json | tail 

Ping facebook.com with 2 second timeout and 7 times 
 --> ping -W 2 -c 7 facebook.com 

Make a request using proxy 
 --> curl --proxy http://proxy.example.com:8080 http://example.com 

Assign IP 192.168.56.101 to ens33 
 --> sudo ifconfig ens33 192.168.56.101 

Show last lines of grep output 
 --> grep pattern file.txt | tail 

Use su to log in as postgres 
 --> su postgres 

Start a Python REPL in tmux session 
 --> tmux new -s py python3 

Search JSON files for 'token' 
 --> grep 'token' *.json 

Create a session with logging enabled 
 --> tmux new -s logsession 

Delete ci_runner from system 
 --> userdel ci_runner 

Compress the netstat.txt using bzip2 
 --> bzip2 netstat.txt 

Install npm 
 --> sudo apt install npm 

Rename UX_designers to ux_team 
 --> groupmod -n ux_team UX_designers 

Assign MTU 1500 to enp0s3 
 --> sudo ifconfig enp0s3 mtu 1500 

Show disk space usage for all mounted filesystems 
 --> df 

Send SIGUSR1 to multiple PIDs 
 --> kill -USR1 1234 5678 91011 

Delete archiveuser 
 --> userdel archiveuser 

Sync files and specify a custom block size 
 --> rsync -avz --block-size=1024 source_dir/ destination_dir/ 

Open file in less 
 --> less file.txt 

Copy image skipping 1st 2MB 
 --> dd if=image.iso of=/dev/sdX bs=1M skip=2 

Create multiple files and set their timestamps to now 
 --> touch file1 file2 file3 

Make ext4 on /dev/nvme1n1p2 
 --> mkfs.ext4 /dev/nvme1n1p2 

Check open files on interface eth0 
 --> lsof -i@eth0 

Display memory usage in megabytes, detailed low and high memory stats 
 --> free -m -l 

Run mtr to 8.8.8.8 and show output in CSV format 
 --> mtr --csv 8.8.8.8 

What are the contents of /dev, sorted by modification time? 
 --> ls -t /dev 

Unmount ext4 partition from /mnt/ext 
 --> umount /mnt/ext 

Delete user charlie and all associated files 
 --> userdel -r charlie 

Print partitions on /dev/mmcblk0 
 --> parted /dev/mmcblk0 print 

Query the ANY record for yahoo.com 
 --> nslookup -query=ANY yahoo.com 

Query A record for google.com and set +notrace 
 --> dig google.com +notrace 

Screen session for git pull 
 --> screen -S deploy git pull 

Look up all curl commands in history 
 --> history | grep curl 

Download a file using IPv4 only 
 --> wget -4 http://example.com/file.zip 

Apply bzip2 to output.txt 
 --> bzip2 output.txt 

Display memory usage in human-readable format, update every 10 seconds, 5 times 
 --> free -h -s 10 -c 5 

Add a connection with a specific IPv4 DHCP use routes 
 --> nmcli connection add type ethernet con-name "My Ethernet" ifname eth0 ipv4.dhcp-use-routes yes 

Upgrade all packages 
 --> sudo apt upgrade 

Create a file called 'mail.err' in /var/log 
 --> touch /var/log/mail.err 

Clear screen to reduce distraction 
 --> clear 

Change to the directory /etc/apt 
 --> cd /etc/apt 

Show all connections and display output in uppercase 
 --> netstat -an | tr '[:lower:]' '[:upper:]' 

Delete all files in the /etc directory 
 --> rm /etc/* 

Check which users have GUI sessions 
 --> who 

Print multi-line text 
 --> echo -e "Line1\nLine2\nLine3" 

Show disk usage for all filesystems, display only the filesystem, used, available, and usage percentage 
 --> df -h --output=source,used,avail,pcent 

Compress java files into java_source.zip 
 --> zip java_source.zip *.java 

Interactive mode: set query type to CNAME and look up www.github.com 
 --> nslookup
set type=CNAME
www.github.com 

Add a user sam and disable account expiration 
 --> useradd -e '' sam 

Lock internal_user's credentials 
 --> passwd -l internal_user 

Sync files modified after a specific date 
 --> rsync -avz --files-from=<(find source_dir/ -type f -newermt '2023-01-01') source_dir/ destination_dir/ 

Query A record for google.com and set +question 
 --> dig google.com +question 

Show all active units 
 --> systemctl list-units --state=active 

Print full name from two columns 
 --> awk '{print $1 " " $2}' names.txt 

Restrict password access for nick 
 --> passwd -l nick 

Flush shell history 
 --> history -c 

Create a directory called 'backup_2025' in /var/backups 
 --> mkdir /var/backups/backup_2025 

Display disk usage with last modification time in full-iso format 
 --> du --time --time-style=full-iso 

Delete all partitions and print table on /dev/sdg 
 --> parted /dev/sdg mklabel gpt print 

Make terminal output disappear 
 --> clear 

Show all interfaces with their flags 
 --> ifconfig -a | grep flags 

Gzip the report.doc file 
 --> gzip report.doc 

Add a VPN connection (OpenVPN) 
 --> nmcli connection add type vpn con-name MyVPN vpn-type openvpn ifname eth0 vpn.data "connection-type=password,username=myuser" 

Stop master connection 
 --> ssh -O stop user@hostname 

Recursively copy the /opt directory to /backup/opt 
 --> cp -r /opt /backup/opt/ 

Add user dave to the sudo group 
 --> usermod -aG sudo dave 

Zip main.go and config.yaml 
 --> zip go_app.zip main.go config.yaml 

Query A record for google.com and set +nosigchase 
 --> dig google.com +nosigchase 

Start tmux from crontab 
 --> @reboot tmux new -d -s boot '/usr/bin/python3 boot.py' 

Restart the NetworkManager service 
 --> systemctl restart NetworkManager 

Ping github.com and set TTL to 64 
 --> ping -t 64 github.com 

Change employee45's password 
 --> passwd employee45 

Display memory usage in kilobytes with total, update every 10 seconds, 4 times 
 --> free -k -t -s 10 -c 4 

View all unit files 
 --> systemctl list-unit-files 

Print raw who output 
 --> who 

Query the NS record for yahoo.com with verbose output 
 --> host -v -t NS yahoo.com 

Display all system information except kernel name and machine hardware name 
 --> uname -arvpi 

Run database dump with niceness +11 
 --> nice -n 11 pg_dump mydb > dump.sql 

Exclude tara from dev group 
 --> gpasswd -d tara dev 

Sync files and specify a custom daemon dont compress 
 --> rsync -avz --daemon --dont-compress=*.gz,*.zip source_dir/ destination_dir/ 

Change owner to devops on logs.txt 
 --> chown devops logs.txt 

Display the contents of the root directory 
 --> ls / 

Show kernel messages with color never 
 --> dmesg --color=never 

Split tmux window vertically 
 --> Ctrl-b % 

Show all open UNIX sockets 
 --> netstat -xan | grep 'LISTEN' 

Show processes running as root (real & effective ID) in user format 
 --> ps -U root -u root u 

Download all files from a directory on FTP server 
 --> wget -r ftp://example.com/dir/ 

Sync files and create backups with custom suffix 
 --> rsync -avz --backup --suffix=.bak source_dir/ destination_dir/ 

Force kill all by name quietly 
 --> killall -9 -q myapp 

Delete all blank lines from notes.txt 
 --> sed '/^$/d' notes.txt 

Show only the MAC address for eth0 
 --> ifconfig eth0 | grep ether 

Search for string 'connection timed out' in logs 
 --> grep 'connection timed out' logs/* 

List the contents of your current directory after showing its path. 
 --> pwd && ls 

Create user named test2 with comment 'Temporary' 
 --> useradd -c 'Temporary' test2 

Assign nancy to sysadmin group 
 --> gpasswd -a nancy sysadmin 

Become sys_user 
 --> su sys_user 

Traceroute to github.com starting with TTL 5 
 --> traceroute -f 5 github.com 

Disable qa_user's password 
 --> passwd -l qa_user 

Set evaluation team for grading.txt 
 --> chgrp evaluation grading.txt 

Create session in detached mode 
 --> tmux new-session -d -s silent 

Open fdisk on /dev/sdu 
 --> fdisk /dev/sdu 

Query the NAPTR record for google.com 
 --> nslookup -type=NAPTR google.com 

Set ownership of /opt/tools to devuser 
 --> chown devuser /opt/tools 

Query SPF record for google.com 
 --> dig google.com SPF 

Open fdisk for USB drive /dev/sdf 
 --> fdisk /dev/sdf 

Show all open UDP ports 
 --> netstat -uan | grep 'LISTEN' 

Start distributed job via nohup 
 --> nohup mpirun -np 4 ./parallel_job & 

Assign an IP address and netmask to an interface 
 --> sudo ifconfig eth0 192.168.1.100 netmask 255.255.255.0 

Copy all files in the parent directory to the current directory 
 --> cp ../* . 

Use bzip2 to compress graph.png 
 --> bzip2 graph.png 

Print only the header row 
 --> awk 'NR==1' file.csv 

Display memory usage in megabytes 
 --> free -m 

Download a file and set random wait between downloads 
 --> wget --random-wait -r http://example.com/ 

Show NetworkManager running status 
 --> nmcli -t -f RUNNING general 

Show me a detailed, recursive, human-readable list sorted by time, oldest first 
 --> ls -lRhtr 

Query the A record for facebook.com and display output with both timestamp and color 
 --> date; host facebook.com | lolcat 

Traceroute to example.com using a loose source route gateway 
 --> traceroute -g 192.168.1.1 example.com 

Add a connection with a specific IPv4 DHCP use hostname 
 --> nmcli connection add type ethernet con-name "My Ethernet" ifname eth0 ipv4.dhcp-use-hostname yes 

Connect and execute multiple commands 
 --> ssh user@hostname 'cd /tmp && ls && pwd' 

Send SIGBUS to PID 5455 
 --> kill -BUS 5455 

Move 'file1.txt' and 'file2.txt' to /tmp 
 --> mv file1.txt file2.txt /tmp/ 

List all TCP sockets for ssh (port 22) 
 --> ss -at '( dport = :22 or sport = :22 )' 

List all TCP sockets 
 --> ss -t 

Switch to the /home directory 
 --> cd /home 

Sort files by modification time, newest first 
 --> ls -t 

Create a file called 'ref.txt' and set its timestamp to match 'source.txt' 
 --> touch -r source.txt ref.txt 

Make new ntfs file system on /dev/sdf4 
 --> mkfs.ntfs /dev/sdf4 

Stop a failing service 'failtest' 
 --> service failtest stop 

Copy all files in the current directory to /tmp and keep everything and do not overwrite existing files 
 --> cp -an * /tmp/ 

Unlock designer_user 
 --> passwd -u designer_user 

Rename project_alpha to alpha_project 
 --> groupmod -n alpha_project project_alpha 

Add a connection with a specific IPv4 DHCP use DNS 
 --> nmcli connection add type ethernet con-name "My Ethernet" ifname eth0 ipv4.dhcp-use-dns yes 

Alias to add all and commit 
 --> alias gac='git add . && git commit -m' 

Update read_only_users to readonly_group 
 --> groupmod -n readonly_group read_only_users 

Traceroute to example.com using UDPLITE protocol 
 --> traceroute -UL example.com 

Connect using existing master connection 
 --> ssh -o ControlMaster=no user@hostname 

Run mtr to github.com and set maximum TTL to 50 
 --> mtr -m 50 github.com 

Show lines not containing 'debug' in output.txt 
 --> grep -v 'debug' output.txt 

List all sockets for IPv4 
 --> ss -4 

List all TCP sockets in the SYN-SENT state 
 --> ss -t state syn-sent 

Print login shell of users 
 --> who 

Query A record for google.com and set +adflag 
 --> dig google.com +adflag 

Add execute permission to group 
 --> chmod g+x tool 

Sync files and create parent directories 
 --> rsync -avz --mkpath source_dir/ destination_dir/new_subdir/ 

Delete temp_guest user 
 --> userdel temp_guest 

Scan for available WiFi networks 
 --> nmcli device wifi list 

Run atop and update every 2 seconds 
 --> atop -d 2 

Create user testlab with comment 'Lab Account' 
 --> useradd -c 'Lab Account' testlab 

Re-enable login for support_staff 
 --> passwd -u support_staff 

Create a file named 'report.pdf' in the current directory 
 --> touch report.pdf 

Add preprod_team group 
 --> groupadd preprod_team 

Run htop and display load average 
 --> htop --show-load-average 

Open file and enable cursorline 
 --> vim -c 'set cursorline' file.txt 

Query the NS record for google.com 
 --> nslookup -query=NS google.com 

Run top and display only swap summary 
 --> top -b -n 1 | grep 'KiB Swap' 

Ping github.com with 10 second timeout and 21 times 
 --> ping -W 10 -c 21 github.com 

Change to the directory /usr/share/sounds 
 --> cd /usr/share/sounds 

Remove tech_support from groups 
 --> groupdel tech_support 

Kill process by PID file name 
 --> killall --pidfile /var/run/myapp.pid 

Start gunicorn server safely 
 --> nohup gunicorn app:app & 

Show logs for a service with error priority since 15 minutes ago 
 --> journalctl -u critical-service.service --since='15 minutes ago' -p err 

Kill all Chromium processes 
 --> killall chromium 

Show kernel messages from the last boot 
 --> dmesg -b 1 

Allow ssh_admin to use password again 
 --> passwd -u ssh_admin 

Change to the directory /usr/share/icons 
 --> cd /usr/share/icons 

Display tabs as ^I 
 --> cat -T file.txt 

Display memory usage in bytes with detailed stats and total, update every 8 seconds, 8 times 
 --> free -b -l -t -s 8 -c 8 

Display disk usage in kilobytes 
 --> du -k 

Ping yahoo.com 10 times 
 --> ping -c 10 yahoo.com 

Send SIGTERM to scripts invoked by cron 
 --> pkill -f cronjob.sh 

Monitor load average over time 
 --> watch 'uptime' 

Query A record for google.com and set +noquestion 
 --> dig google.com +noquestion 

Start vim with no plugins 
 --> vim -u NONE file.txt 

Traceroute to example.com sending packets with ICMP protocol 
 --> traceroute -P icmp example.com 

Use `type -a pwd` to find all locations of the `pwd` executable. 
 --> type -a pwd 

List the contents of /usr/share, sorted by size, smallest first 
 --> ls -Sr /usr/share 

Remove kiran from tools group 
 --> gpasswd -d kiran tools 

Refresh screen by clearing old text 
 --> clear 

Send SIGXFSZ to PID 3839 
 --> kill -XFSZ 3839 

Open multiple files 
 --> less file1.txt file2.txt 

Test SSH configuration 
 --> ssh -T git@github.com 

Change full name of user raj to 'Raj Kumar' 
 --> usermod -c 'Raj Kumar' raj 

Traceroute to 8.8.8.8 with no hostname resolution and max TTL 25 
 --> traceroute -n -m 25 8.8.8.8 

Show disk usage for filesystems of type xfs 
 --> df -t xfs 

Ping github.com and set deadline to 20 seconds 
 --> ping -w 20 github.com 

Display disk usage for all files and directories, using block size of 512M 
 --> du -B 512M 

List environment variables in the terminal 
 --> env 

Alias to view logs 
 --> alias logs='tail -f /var/log/syslog' 

Compress all_logs.log using bzip2 
 --> bzip2 all_logs.log 

Connect without executing a command (force pseudo-terminal) 
 --> ssh -t user@hostname 

Wait 30 seconds 
 --> sleep 30 

Query the DS record for google.com 
 --> nslookup -type=DS google.com 

Allow intern_test to log in again 
 --> passwd -u intern_test 

Show process name for PID 1154 
 --> ps -p 1154 -o comm= 

Move the entire 'Documents' folder to /mnt/usb 
 --> mv ~/Documents /mnt/usb/ 

Sleep before shutting down 
 --> sleep 60 

Query A record for google.com with edns=1 
 --> dig google.com +edns=1 

Run docker cleanup script every night 
 --> crontab -e # 0 1 * * * /docker_clean.sh 

Start a new screen session 
 --> screen 

Remove all files in /var/tmp 
 --> rm /var/tmp/* 

Assign 644 permissions to file.txt 
 --> chmod 644 file.txt 

Show open files on port 3306 
 --> lsof -i :3306 

Add a connection with a specific IPv6 gateway 
 --> nmcli connection add type ethernet con-name "My Ethernet" ifname eth0 ip6 2001:db8::1/64 gw6 2001:db8::ffff 

Open file and set line numbers 
 --> vim -c 'set number' file.txt 

Query CNAME record for www.google.com and display only answer section 
 --> dig www.google.com CNAME +noall +answer 

List files and their inode numbers, sorted by time 
 --> ls -it 

Check SSH connection to host 
 --> ssh -O check user@hostname 

Add aaron to moderators group 
 --> gpasswd -a aaron moderators 

Create an engineers group 
 --> groupadd engineers 

Traceroute to 8.8.8.8 with destination port 8080 and 2 probes per hop 
 --> traceroute -p 8080 -q 2 8.8.8.8 

Display kernel release and processor type 
 --> uname -rp 

Make research group for findings.csv 
 --> chgrp research findings.csv 

Download a file and disable following robots.txt 
 --> wget --robots=off http://example.com/ 

Ping amazon.com with 5 second timeout and 71 times 
 --> ping -W 5 -c 71 amazon.com 

Compress netstats.txt 
 --> gzip netstats.txt 

Display disk usage for all files and directories, skipping subdirectory sizes in parent 
 --> du -S 

Make a request with referer header 
 --> curl -e 'http://google.com' http://example.com 

Create intern account internship2025 
 --> useradd internship2025 

Show kernel messages as they arrive (follow mode) 
 --> dmesg -w 

Zip a folder named demo recursively 
 --> zip -r demo.zip demo 

Change to the /var/log/auth directory 
 --> cd /var/log/auth 

Match processes younger than 5 seconds 
 --> pkill -n sleep 

Create a directory called 'new_folder' in /etc 
 --> mkdir /etc/new_folder 

Show all interfaces with their status (LOOPBACK) 
 --> ifconfig -a | grep LOOPBACK 

Delete old_user account 
 --> userdel old_user 

Open file and use system clipboard 
 --> vim -c 'set clipboard+=unnamedplus' file.txt 

Make a request with client certificate 
 --> curl --cert client.pem --key client-key.pem https://example.com 

Change niceness of all processes in group wheel 
 --> sudo renice +8 -G wheel 

Give all permissions to all users 
 --> chmod a+rwx universal.sh 

Move all files in /var/log/fontconfig.log to /backup/fontconfig 
 --> mv /var/log/fontconfig.log/* /backup/fontconfig/ 

Add vfx_artists group 
 --> groupadd vfx_artists 

Change owner to alice for app.py 
 --> chown alice app.py 

Ping amazon.com with 1024 byte packets and 33 times 
 --> ping -s 1024 -c 33 amazon.com 

Display all system information except kernel name and kernel release 
 --> uname -avmpio 

Query the A record for google.com with 3 retries 
 --> nslookup -retry=3 google.com 

Rename user alpha1 to alpha_main 
 --> usermod -l alpha_main alpha1 

Move all files in /var/tmp to /backup/tmp 
 --> mv /var/tmp/* /backup/tmp/ 

Watch changes in a log file 
 --> watch tail /var/log/syslog 

Wait for 1800 seconds 
 --> sleep 1800 

Create a file called 'tomorrow.txt' and set its timestamp to tomorrow 
 --> touch -d 'tomorrow' tomorrow.txt 

Delete multiple files 'file1.txt' and 'file2.txt' at the same time 
 --> rm file1.txt file2.txt 

List all open files sorted by PID 
 --> lsof | sort -k2 

Run a node server in tmux 
 --> tmux new -s server 'node app.js' 

Create a file called 'log.txt' and set its timestamp to 6:30 PM today 
 --> touch -t $(date +%Y%m%d)1830 log.txt 

Clear before entering new commands 
 --> clear 

Restart cron after changes to crontab 
 --> sudo systemctl restart cron 

Delete a file called 'index.html' in /var/www/html 
 --> rm /var/www/html/index.html 

Remove all files in /var/log/fontconfig.log 
 --> rm /var/log/fontconfig.log/* 

Show the latest commands used 
 --> history 

Check layout of Linux partitions 
 --> fdisk -l /dev/sda 

Download a file and set user agent to Chrome 
 --> wget --user-agent="Mozilla/5.0 (Windows NT 10.0; Win64; x64) Chrome/58.0.3029.110" http://example.com/file.zip 

Add product_team group 
 --> groupadd product_team 

Switch group name from engineers to eng_team 
 --> groupmod -n eng_team engineers 

Display kernel name and operating system 
 --> uname -so 

Remove all content from terminal 
 --> clear 

Run sleep with timeout and wait 
 --> timeout 5s sleep 10 & wait 

Query the A record for google.com with search domain example.net 
 --> nslookup google.com example.net 

List contents of the current directory, quoting names with spaces 
 --> ls -b 

Connect with extra verbose output 
 --> ssh -vv user@hostname 

Count all remote logins 
 --> who | grep '(' | wc -l 

Modify password of script_user 
 --> passwd script_user 

Show the operating system 
 --> uname -o 

Check activity for user 'guest' 
 --> w guest 

Use gzip on settings.ini 
 --> gzip settings.ini 

Display a detailed list of all files in my home directory, including hidden ones 
 --> ls -la ~ 

See label and type of /dev/sde7 
 --> blkid /dev/sde7 

Get rid of previous script output 
 --> clear 

Run job once a year 
 --> crontab -e # @yearly /yearly_job.sh 

Connect with escape character disabled 
 --> ssh -e none user@hostname 

Show only the IPv6 address for eth0 
 --> ifconfig eth0 | grep inet6 

Remove an empty directory called 'work' in /tmp 
 --> rmdir /tmp/work 

Quit less without waiting output 
 --> less -F file.txt 

Rename 'mail.log' to 'mail.log.old' in /var/log 
 --> mv /var/log/mail.log /var/log/mail.log.old 

Sync files and specify a custom IO buffer size 
 --> rsync -avz --io-timeout=60 source_dir/ destination_dir/ 

Lock guest1's account temporarily 
 --> passwd -l guest1 

Switch group legal to legal_team 
 --> groupmod -n legal_team legal 

Run mtr to yahoo.com and set the number of pings per hop to 23 
 --> mtr -c 23 yahoo.com 

Traceroute to example.com using TCP SYN packets and destination port 443 
 --> traceroute -T -p 443 example.com 

Show the hardware platform 
 --> uname -i 

Ping amazon.com and use IPv4 only 
 --> ping -4 amazon.com 

Ignore case in searches 
 --> less -I file.txt 

Form a group gpu_cluster 
 --> groupadd gpu_cluster 

Create a new msdos partition table on /dev/sda 
 --> parted /dev/sda mklabel msdos 

Download a file using IPv6 only 
 --> wget -6 http://example.com/file.zip 

Display a long listing, but don't show the group information 
 --> ls -o 

Run dotnet build with niceness +3 
 --> nice -n 3 dotnet build 

Remove akshay from testers group 
 --> gpasswd -d akshay testers 

Rename designers group to ui_ux 
 --> groupmod -n ui_ux designers 

Run build.sh in background and wait 
 --> ./build.sh & wait 

Remove nginx using sudo 
 --> sudo apt remove nginx 

Show top 10 commands from the history 
 --> history | head -n 10 

Display memory usage in kilobytes with all options, update every 11 seconds, 11 times 
 --> free -k -o -l -w -t -s 11 -c 11 

Remove legacyroot with home directory 
 --> userdel -r legacyroot 

Get info of /dev/sdf1 
 --> blkid /dev/sdf1 

Copy all files in the current directory to /tmp and keep everything and force overwrite 
 --> cp -af * /tmp/ 

Zip the archive folder into archive.zip 
 --> zip -r archive.zip archive 

Launch fdisk for editing /dev/sdg 
 --> fdisk /dev/sdg 

Create a file called 'yesterday.txt' and set its timestamp to yesterday 
 --> touch -d 'yesterday' yesterday.txt 

Output the current directory path with a custom message. 
 --> echo "You are in: $(pwd)" 

Add api_testers group 
 --> groupadd api_testers 

Check cron version 
 --> cron --version 

Compress the video.mkv file 
 --> gzip video.mkv 

Traceroute to github.com using only IPv4 addresses 
 --> traceroute -4 github.com 

Display UUIDs and labels 
 --> blkid 

Display filesystem type of /dev/sdf2 
 --> blkid /dev/sdf2 

Add group sde_interns 
 --> groupadd sde_interns 

Download a file and specify an HSTS database 
 --> wget --hsts-file=hsts.txt https://example.com/file.zip 

Filter rows where second column equals 0 
 --> awk '$2 == 0' data.txt 

Look for bashrc 
 --> locate bashrc 

Reconnect to screen session 'data' 
 --> screen -r data 

Remove all files in /var/log/dpkg 
 --> rm /var/log/dpkg/* 

Run mtr to facebook.com and set the number of pings per hop to 2 
 --> mtr -c 2 facebook.com 

Change primary group of user priya to admins 
 --> usermod -g admins priya 

Create a file called 'log.txt' and set its timestamp to 7:00 AM today 
 --> touch -t $(date +%Y%m%d)0700 log.txt 

Change login name from apiuser to api_u 
 --> usermod -l api_u apiuser 

Gzip todo.md file 
 --> gzip todo.md 

Format /dev/sdh7 to ext2 
 --> mkfs.ext2 /dev/sdh7 

Start the nginx service 
 --> systemctl start nginx 

Concatenate numbered file range 
 --> cat file{1..5}.txt 

Make a GET request and show progress bar 
 --> curl --progress-bar http://example.com 

Show NetworkManager connectivity state 
 --> nmcli -t -f STATE general 

Filter last lines by awk 
 --> tail file.txt | awk 'NR>5{print}' 

Delete all lines containing 'error' 
 --> sed '/error/d' log.txt 

Display only the names of all interfaces 
 --> ifconfig -l 

Change to the directory /etc/X11 regardless of your current location 
 --> cd /etc/X11 

Change group research to research_team 
 --> groupmod -n research_team research 

Run mtr to example.com with IPv4, 25 cycles, interval 10s, and output in XML format 
 --> mtr -4 --xml -c 25 -i 10 example.com 

Ping facebook.com with 3 second timeout and 127 times 
 --> ping -W 3 -c 127 facebook.com 

Find files in /tmp with user sticky bit set 
 --> find /tmp -perm -u=s 

Create a directory in /opt 
 --> sudo mkdir /opt/myapp 

Delete saved command logs 
 --> history -c 

Stop fail2ban 
 --> systemctl stop fail2ban 

Copy all files in the current directory to /tmp and keep everything and keep context 
 --> cp -a --preserve=context * /tmp/ 

Open file and start in visual mode 
 --> vim -c 'normal! V' file.txt 

Display the contents of my home directory and the root directory in a single command 
 --> ls ~ / 

Change group ownership of report.txt to devs 
 --> chgrp devs report.txt 

Display disk usage for all files and directories, using block size of 128M 
 --> du -B 128M 

Wait for a detached job to complete 
 --> longjob.sh & wait 

Verify USER variable in environment 
 --> env | grep USER 

Set the broadcast address for an interface 
 --> sudo ifconfig eth0 broadcast 192.168.1.255 

View CPU info 
 --> cat /proc/cpuinfo 

Display who is currently using the system 
 --> who 

Make a request and save cookies to file 
 --> curl -c cookies.txt http://example.com 

Create group named testers_beta 
 --> groupadd testers_beta 

Gzip metrics.csv 
 --> gzip metrics.csv 

Zip all configuration files 
 --> zip configfiles.zip *.conf 

Print the filename and the number of lines in it 
 --> awk 'END {print FILENAME, NR}' file.txt 

Run mtr to facebook.com with 100 cycles, interval 0.1s, and output in wide format 
 --> mtr --wide -c 100 -i 0.1 facebook.com 

Format nvme partition /dev/nvme0n1p2 to ext2 
 --> mkfs.ext2 /dev/nvme0n1p2 

Display disk usage for all files and directories, using block size of 16T 
 --> du -B 16T 

Query the A record for example.com 
 --> nslookup example.com 

Replace 'user1' or 'user2' with 'admin' 
 --> sed 's/user[12]/admin/g' file.txt 

Display memory usage in gigabytes, update every 5 seconds, 2 times 
 --> free -g -s 5 -c 2 

Show logs for a specific boot ID 
 --> journalctl --boot=abcd1234 

Enable and start NetworkManager 
 --> systemctl enable --now NetworkManager 

Concatenate two files 
 --> cat file1.txt file2.txt 

Use bzip2 for compressing archive.zip 
 --> bzip2 archive.zip 

Unmount fuse filesystem 
 --> umount /mnt/fuse 

Send SIGSYS to PID 4849 
 --> kill -SYS 4849 

Locate all .log files 
 --> locate '*.log' 

Traceroute to google.com using ICMP echo requests 
 --> traceroute -I google.com 

Display kernel name and processor type 
 --> uname -sp 

Show processes by command name 'bash' 
 --> ps -C bash 

Open file at specific line 
 --> vim +100 file.txt 

Show all interfaces with their dropped packet statistics 
 --> ifconfig -a | grep dropped 

Change to the /var/lock directory 
 --> cd /var/lock 

Change password for tom 
 --> sudo passwd tom 

Display disk usage for all files and directories, using block size of 16P 
 --> du -B 16P 

Connect with password authentication disabled 
 --> ssh -o PasswordAuthentication=no user@hostname 

Open vim with custom encoding 
 --> vim +'set fileencoding=utf-8' file.txt 

Enable ssh service 
 --> sudo systemctl enable ssh 

Change to the /srv/www directory 
 --> cd /srv/www 

Show me the inode number for every file in the root directory 
 --> ls -i / 

Open binary file in hex (via od) 
 --> od -Ax -t x1z file.bin | less 

Login to testing user account 
 --> su testing 

Kill group of processes by group name 
 --> killall -g mygroup 

Wipe out history from screen 
 --> clear 

Compress all log files into logs.zip 
 --> zip logs.zip *.log 

Download a file and mirror a website with no robots 
 --> wget --mirror --no-robots http://example.com/ 

Start long-running grep in background 
 --> nohup grep -r 'pattern' / & 

Modify the credentials for devops_admin 
 --> passwd devops_admin 

Block user dev_ux from logging in 
 --> passwd -l dev_ux 

Set safety group to regulations.txt 
 --> chgrp safety regulations.txt 

Change login password for mobile_user 
 --> passwd mobile_user 

Run interactively with niceness +5 
 --> nice -n 5 top 

Print usernames and IPs 
 --> who | awk '{print $1, $5}' 

Mount a read-only CDROM 
 --> mount -o ro /dev/cdrom /media/cd 

Detach /dev/sdb1 
 --> umount /dev/sdb1 

Change to the /var/log/alternatives.log directory 
 --> cd /var/log/alternatives.log 

Permanently delete zoe 
 --> userdel -r zoe 

Disable promiscuous mode on ens33 
 --> sudo ifconfig ens33 -promisc 

Screen for live disk usage 
 --> screen -S duwatch watch df -h 

Connect with challenge-response authentication 
 --> ssh -o ChallengeResponseAuthentication=yes user@hostname 

List files in /etc with human-readable sizes 
 --> ls -lh /etc 

Run mtr to yahoo.com and show output in raw format with 40 cycles 
 --> mtr --raw -c 40 yahoo.com 

Mount a Btrfs filesystem on /mnt/btrfs 
 --> mount -t btrfs /dev/sde1 /mnt/btrfs 

Compress everything but the node_modules folder 
 --> zip -r app.zip . -x node_modules/* 

Add a connection with a specific DNS priority 
 --> nmcli connection add type ethernet con-name "My Ethernet" ifname eth0 ipv4.dns-priority 100 

Sleep 2 seconds in shell 
 --> sleep 2 

Remove spaces from beginning of lines 
 --> sed 's/^ *//' file.txt 

Edit a connection in interactive mode 
 --> nmcli connection edit "My Connection" 

Sync files from a remote server 
 --> rsync -avz user@remote_host:/source_dir/ destination_dir/ 

Create a directory called 'share' in your home 
 --> mkdir ~/share 

Check what root is currently doing 
 --> w root 

Run Node.js server with niceness +10 
 --> nice -n 10 node server.js 

Remove the directory '2025_reports' inside Documents if it is empty 
 --> rmdir Documents/2025_reports 

Query the AAAA (IPv6) record for example.com 
 --> nslookup -query=AAAA example.com 

Show all interfaces with protocol family icmp6 
 --> ifconfig -a icmp6 

Update GRUB config 
 --> sudo update-grub 

Recursively list all files and folders in my home directory 
 --> ls -R ~ 

Start node app and redirect logs 
 --> nohup node index.js > app.log 2>&1 & 

Show all connections and append output to a file 
 --> netstat -an >> netstat_output.txt 

Paste from tmux buffer 
 --> Ctrl-b ] 

Copy a file called 'file.txt' to the current directory 
 --> cp file.txt . 

Copy all files in the current directory to /tmp and keep everything and keep permissions 
 --> cp -a -p * /tmp/ 

Mount disk with defaults option 
 --> mount -o defaults /dev/sdr1 /mnt 

Display total disk usage for a directory and its contents 
 --> du -c /var 

Query the A record for google.com and set search domain to local 
 --> nslookup google.com local 

Display all system information except kernel name and processor type 
 --> uname -a 

Display memory usage in megabytes with wide output, update every 15 seconds, 5 times 
 --> free -m -w -s 15 -c 5 

Unmount systemd mount point mnt-data.mount 
 --> umount /mnt/data 

Create user bob and specify shell to be /sbin/nologin 
 --> useradd -s /sbin/nologin bob 

Copy a file 'draft.docx' to the parent directory 
 --> cp draft.docx ../ 

Set multiple variables before launching GUI app 
 --> env QT_DEBUG_PLUGINS=1 LANG=en_US.UTF-8 ./gui-app 

Switch to last session 
 --> tmux switch-client -l 

Change to the /usr/local/sbin directory 
 --> cd /usr/local/sbin 

Run the second last command again 
 --> !-2 

Disable allmulti on ens33 
 --> sudo ifconfig ens33 -allmulti 

Extract users using /dev/pts/0 
 --> w | grep pts/0 

Clear the kernel ring buffer 
 --> dmesg -C 

Return to your home directory using the tilde symbol 
 --> cd ~ 

Query the A record for example.com and display output in lowercase and color 
 --> host example.com | tr '[:upper:]' '[:lower:]' | lolcat 

Sync files with a minimum size (min 1KB) 
 --> rsync -avz --min-size=1k source_dir/ destination_dir/ 

Watch a directory for new files 
 --> watch 'ls -lh /path/to/dir' 

Alias to push Git changes 
 --> alias gp='git push' 

Launch function in background and wait 
 --> myfunc & wait 

Query A record for google.com and set +noanswer 
 --> dig google.com +noanswer 

Rename training to training_dept 
 --> groupmod -n training_dept training 

Gzip the file letter.txt 
 --> gzip letter.txt 

Remove read and write access from user on test.txt 
 --> chmod u-rw test.txt 

Set userroot's home directory to /home/rootuser 
 --> usermod -d /home/rootuser -m userroot 

Query A record for google.com and set +authority 
 --> dig google.com +authority 

Delete user ashwin 
 --> userdel ashwin 

Change niceness of telemetry agent 
 --> sudo renice +5 -p $(pgrep telegraf) 

Remove a directory called 'testdir' and its parent directories if they become empty 
 --> rmdir -p testdir 

Find all directories at the top level of / 
 --> find / -maxdepth 1 -type d 

Display memory usage in gigabytes with total, update every 5 seconds, 6 times 
 --> free -g -t -s 5 -c 6 

Check crontab for specific command 
 --> crontab -l | grep 'backup' 

Display kernel name, release, and machine hardware name 
 --> uname -srm 

Show all interfaces with their hardware addresses 
 --> ifconfig -a | grep ether 

Filter all users with bash as shell 
 --> w | grep bash 

Send SIGTERM to all child processes of current shell 
 --> kill -TERM -- -$$ 

Sync files and keep partially transferred files for resuming later 
 --> rsync -avz --partial --progress source_dir/ destination_dir/ 

Extract tar.gz file to /opt 
 --> sudo tar xzf file.tar.gz -C /opt 

Assign broadcast 10.0.2.255 to enp0s3 
 --> sudo ifconfig enp0s3 broadcast 10.0.2.255 

Ping google.com and suppress output 
 --> ping -q google.com 

Run find command with niceness +10 
 --> nice -n 10 find / -type f 

Run emerge update with niceness +5 
 --> sudo nice -n 5 emerge --update world 

Add line numbers with colon 
 --> sed = file.txt | sed 'N;s/\n/: /' 

Lock password access for cto 
 --> passwd -l cto 

Permanently delete user nina and files 
 --> userdel -r nina 

What are the files in / and /home? 
 --> ls / /home 

Print all files in /home 
 --> find /home -type f -print 

Search for package.json files 
 --> locate package.json 

Change to the /var/lib directory 
 --> cd /var/lib 

Keep syncing files in loop 
 --> nohup bash sync_loop.sh & 

Delete bash_team group 
 --> groupdel bash_team 

Show all interfaces with their status (LOOPBACK) 
 --> ifconfig -a | grep LOOPBACK 

Show only remote users 
 --> w | grep '(' 

Create a file called 'man' in your home 
 --> touch ~/man 

Provide a detailed list of all files, sorted by size, with human-readable values 
 --> ls -laSh 

Show WiFi hotspot password 
 --> nmcli device wifi show-password 

Create a file called 'python' in your home 
 --> touch ~/python 

Compress book.epub using gzip 
 --> gzip book.epub 

Create multiple files: 'file1.txt', 'file2.txt', and 'file3.txt' 
 --> touch file1.txt file2.txt file3.txt 

Show files in the current directory with human-readable sizes, sorted by size 
 --> ls -lSh 

Query A record for google.com and set +noignore 
 --> dig google.com +noignore 

Display block details of /dev/sdh9 
 --> blkid /dev/sdh9 

Show me all directories starting with 'p' in the root folder 
 --> ls -d /p*/ 

Alias to reload shell config 
 --> alias reload='source ~/.bashrc' 

Kill by resource limit 
 --> ps aux --sort=-rss | head -n 3 | awk '{print $2}'| xargs kill 

Show all interfaces with their error statistics 
 --> ifconfig -a | grep errors 

List files in the current folder, sorted by version number 
 --> ls -v 

Make alias to kill a process 
 --> alias killp='kill -9' 

Reset the password for student7 
 --> passwd student7 

Execute command every 15 minutes 
 --> crontab -e # */15 * * * * command 

Make a vfat file system on /dev/sdi1 
 --> mkfs.vfat /dev/sdi1 

Enable backend_user again 
 --> passwd -u backend_user 

Print line numbers of lines with word 'error' 
 --> awk '/error/ {print NR}' log.txt 

Create zip from requirements.txt and setup.py 
 --> zip python_package.zip requirements.txt setup.py 

Ping yahoo.com with 2048 byte packets and 4 times 
 --> ping -s 2048 -c 4 yahoo.com 

Make user1 the owner of project folder 
 --> chown user1 project 

Find file with inode 123456 in /home 
 --> find /home -inum 123456 

Upload file via FTP 
 --> curl -T localfile.txt ftp://ftp.example.com/ 

Assign broadcast 10.0.2.255 to enp0s3 
 --> sudo ifconfig enp0s3 broadcast 10.0.2.255 

Display disk usage for all files and directories, excluding files listed in a file 
 --> du -X exclude-list.txt 

Append current session commands to history file 
 --> history -a 

Create new partition using 100% of disk /dev/sdr 
 --> parted /dev/sdr mkpart primary ext4 0% 100% 

Disable all-multicast mode on an interface 
 --> sudo ifconfig eth0 -allmulti 

Change to the /var/log/unattended-upgrades directory 
 --> cd /var/log/unattended-upgrades 

Query the TLSA record for yahoo.com 
 --> nslookup -type=TLSA yahoo.com 

Sync files and don't preserve timestamps 
 --> rsync -avz --no-t source_dir/ destination_dir/ 

Get user login timestamps 
 --> who 

Alias to remove an alias 
 --> unalias list 

Traceroute to 8.8.8.8 starting with TTL 5 
 --> traceroute -f 5 8.8.8.8 

List all UDP sockets using IPv6 
 --> ss -6 -u 

List all UDP sockets with process and timer info 
 --> ss -u -p -o 

Find the maximum value in the third column 
 --> awk 'max < $3 {max=$3} END {print max}' file.txt 

Reload bluetooth service 
 --> service bluetooth reload 

Echo the filename for each file in /tmp 
 --> find /tmp -type f -print | xargs -I {} echo "File: {}" 

Disconnect a device 
 --> nmcli device disconnect eth0 

Find directories in /opt at least 2 levels deep 
 --> find /opt -mindepth 2 -type d 

Query the A record for yahoo.com with a timeout of 10 seconds 
 --> nslookup -timeout=10 yahoo.com 

Reset access for client_service 
 --> passwd client_service 

Get a list of all current environment variables 
 --> env 

Print today’s user count 
 --> echo "Logged in: $(who | wc -l) users" 

Create a directory called 'test' in /home/charlie 
 --> mkdir /home/charlie/test 

Move all files in /var/log/ppp to /backup/ppp 
 --> mv /var/log/ppp/* /backup/ppp/ 

Disable credentials for batch_runner 
 --> passwd -l batch_runner 

Update package lists 
 --> sudo apt update 

Reactivate the locked account demo 
 --> passwd -u demo 

Wait for 6 seconds between loops 
 --> sleep 6 

Filter users by terminal 
 --> who | grep tty 

Run C compiled program using nohup 
 --> nohup ./a.out & 

Move a file to a protected directory 
 --> sudo mv index.html /var/www/html/ 

Query the ANY record for google.com 
 --> nslookup -query=ANY google.com 

Sync files and specify a custom daemon access 
 --> rsync -avz rsync://user@host:port/module/path destination_dir/ 

Create a directory called 'builds' in your home 
 --> mkdir ~/builds 

Find directories in /tmp changed in the last 2 days 
 --> find /tmp -ctime -2 -type d 

Query the A record for yahoo.com using DNS server 8.26.56.26 
 --> host yahoo.com 8.26.56.26 

Vacuum journal logs to keep only 1G of data 
 --> journalctl --vacuum-size=1G 

Delete quinn user account 
 --> userdel quinn 

Use gzip to compress function.java 
 --> gzip function.java 

Continuously display memory usage every 5 seconds 
 --> free -s 5 

Erase terminal screen contents 
 --> clear 

Find files in /var where group has write permission 
 --> find /var -perm /g=w 

Replace multiple spaces with a single space 
 --> sed 's/  */ /g' file.txt 

Run node server with screen 
 --> screen -S node node server.js 

Copy all files in the current directory to /tmp and keep everything and do not overwrite existing files 
 --> cp -a -n * /tmp/ 

Find all pts sessions 
 --> who | grep pts 

Assign broadcast 192.168.56.255 to ens33 
 --> sudo ifconfig ens33 broadcast 192.168.56.255 

Force move all files in the /opt directory to /backup/opt 
 --> mv -f /opt/* /backup/opt/ 

Show top 10 CPU-consuming processes 
 --> ps -eo pid,ppid,cmd,%cpu --sort=-%cpu | head -n 11 

Move 'draft.txt' to /home/alice/Documents 
 --> mv draft.txt /home/alice/Documents/ 

Open file and record session 
 --> vim -S session.vim file.txt 

Kill screen after task 
 --> screen -S deploy -X quit 

Copy a directory 'backup' to /tmp and preserve all attributes 
 --> cp -a backup /tmp/ 

Find files in /data not owned by root 
 --> find /data -not -user root 

Convert spaces to tabs 
 --> cat file.txt | unexpand 

Start background ffmpeg recording 
 --> nohup ffmpeg -i input.mp4 output.avi & 

Copy a directory called 'projects' to /backup recursively 
 --> cp -r projects /backup/ 

Run prettier with niceness +3 
 --> nice -n 3 prettier --write 'src/**/*.{js,jsx,ts,tsx}' 

Check terminal usage and commands being run 
 --> w 

Create java_developers group 
 --> groupadd java_developers 

Create a file called 'db.sqlite3' in the current directory 
 --> touch db.sqlite3 

Ping 1.1.1.1 and print only summary statistics 
 --> ping -q -c 5 1.1.1.1 

Scan host keys on specific port 
 --> ssh-keyscan -p 2222 hostname 

Install htop 
 --> sudo apt install htop 

Show me the contents of the /opt directory, sorted oldest first 
 --> ls -tr /opt 

Show all interfaces with protocol family inet6 
 --> ifconfig -a inet6 

Delete a file called 'testfile' in /srv/www 
 --> rm /srv/www/testfile 

Monitor changes in current directory 
 --> watch 'ls -l' 

View info of /dev/sdg5 
 --> blkid /dev/sdg5 

Print lines if first field matches '^[a-zA-Z]$' 
 --> awk '$1 ~ /^[a-zA-Z]$/' file.txt 

Unblock ux_test user 
 --> passwd -u ux_test 

Ping yahoo.com with 10 second timeout and 101 times 
 --> ping -W 10 -c 101 yahoo.com 

Print the first and third fields separated by a dash 
 --> awk '{print $1 "-" $3}' file.txt 

Create a directory '2025/June/18' with all parents 
 --> mkdir -p 2025/June/18 

List the contents of /usr/bin, sorted by size 
 --> ls -S /usr/bin 

Query A record for facebook.com using DNS server 208.67.222.222 
 --> dig @208.67.222.222 facebook.com 

Add system bot for automation 
 --> useradd -r automationbot 

Query A record for google.com and set +identify 
 --> dig google.com +identify 

Compress cronjobs.txt 
 --> gzip cronjobs.txt 

Copy all files in the /media directory to /backup/media 
 --> cp /media/* /backup/media/ 

Create a directory called 'test' in /home/bob 
 --> mkdir /home/bob/test 

Query the DNSKEY record for example.com 
 --> host -t DNSKEY example.com 

Identify users on this server 
 --> who 

Use bzip2 to compress diagram.svg 
 --> bzip2 diagram.svg 

Use wait inside a function 
 --> myfunc() { command1 & command2 & wait; }; myfunc 

List all .sh scripts in the current directory 
 --> ls *.sh 

Traceroute to google.com with wait time 5 seconds and 4 probes per hop 
 --> traceroute -w 5 -q 4 google.com 

Delete sid from system 
 --> userdel sid 

Allow removal of essential 
 --> sudo apt remove --allow-remove-essential nginx 

Only view login times 
 --> who | awk '{print $3, $4}' 

Stop the cron daemon 
 --> service cron stop 

Ping 1.1.1.1 with 6 second timeout and 13 times 
 --> ping -W 6 -c 13 1.1.1.1 

Remove execute from all users on binfile 
 --> chmod a-x binfile 

Remove all files in the Documents folder 
 --> rm ~/Documents/* 

Switch to archive_user 
 --> su archive_user 

Query the PTR record for 4.2.2.2 
 --> host -t PTR 4.2.2.2 

Show details of partition /dev/sdd2 
 --> blkid /dev/sdd2 

Copy all files in the current directory to /tmp and keep permissions 
 --> cp -p * /tmp/ 

Show all interfaces with their RX and TX packet statistics 
 --> ifconfig -a | grep 'RX packets\|TX packets' 

Run mtr to example.com and use a packet size of 4096 bytes 
 --> mtr -s 4096 example.com 

Duplicate each line 
 --> sed 'p' file.txt 

Ping yahoo.com with 1024 byte packets and 15 times 
 --> ping -s 1024 -c 15 yahoo.com 

Restore login for docker_ops 
 --> passwd -u docker_ops 

Set claire as owner for workspace folder 
 --> chown claire workspace 

Change niceness of Kubernetes pod processes 
 --> sudo renice +5 -p $(kubectl exec mypod -- pgrep myprocess) 

Lock user account ivan 
 --> usermod -L ivan 

Check login sessions 
 --> who 

Make training_batch_1 group 
 --> groupadd training_batch_1 

Check apache2 server status 
 --> service apache2 status 

Display all system information except kernel name and processor type 
 --> uname -a 

Expire account of user trainee on 2025-07-31 
 --> usermod -e 2025-07-31 trainee 

Assign IP 192.168.1.20 and MTU 9000 to eth4 
 --> sudo ifconfig eth4 192.168.1.20 mtu 9000 

Unmount the FAT32 USB from /media/usb32 
 --> umount /media/usb32 

Create a safe move alias 
 --> alias mv='mv -i' 

Create a user raj with UID 4500 
 --> useradd -u 4500 raj 

Remove an empty directory called 'temp' in /tmp 
 --> rmdir /tmp/temp 

Display disk usage for all files and directories, using block size of 256M 
 --> du -B 256M 

Delete partition 3 on /dev/sdg 
 --> parted /dev/sdg rm 3 

Display all system information except kernel name and kernel release 
 --> uname -av 

Wait after kill command 
 --> kill $pid & wait 

Open fdisk for embedded flash storage 
 --> fdisk /dev/mmcblk0 

Delete readonly_user 
 --> userdel readonly_user 

Traceroute to example.com using only IPv6 and max TTL 25 
 --> traceroute -6 -m 25 example.com 

Show kernel messages with warning and error levels 
 --> dmesg --level=warn,err 

Update the name of content_team to creative_team 
 --> groupmod -n creative_team content_team 

Display memory usage in kilobytes with wide output, update every 10 seconds, 4 times 
 --> free -k -w -s 10 -c 4 

Pause 10.5 seconds 
 --> sleep 10.5 

Show all SYN_RECV connections 
 --> netstat | grep SYN_RECV 

Reload all connection files 
 --> nmcli connection reload 

Traceroute to google.com using ICMP echo requests and max TTL 20 
 --> traceroute -I -m 20 google.com 

Move all files in /var/log/unattended-upgrades to /backup/unattended-upgrades 
 --> mv /var/log/unattended-upgrades/* /backup/unattended-upgrades/ 

Kill a tmux session named 'test' 
 --> tmux kill-session -t test 

Create a directory called 'src' in your home 
 --> mkdir ~/src 

Query the NS record for example.com and grep for ns 
 --> host -t NS example.com | grep ns 

Create filesystem vfat for /dev/sda4 
 --> mkfs.vfat /dev/sda4 

Traceroute to yahoo.com with IPv6 source address 
 --> traceroute -S 2001:db8::1 yahoo.com 

Add a new user named arjun 
 --> useradd arjun 

Rescan for available WiFi networks 
 --> nmcli device wifi rescan 

Run mtr to github.com and set the number of pings per hop to 80 
 --> mtr -c 80 github.com 

Run Jenkins CLI with niceness +8 
 --> nice -n 8 java -jar jenkins-cli.jar -s http://localhost:8080 build job 

Show all connections for a specific address family (e.g., unix) 
 --> netstat -f unix 

Sleep for 0.05 seconds 
 --> sleep 0.05 

Sync files and preserve all attributes (ACLs, xattrs, hard links) 
 --> rsync -avzHAX source_dir/ destination_dir/ 

Send Ctrl+C to screen session 
 --> screen -S mysession -X stuff '^C' 

Show all open IPv6 network connections 
 --> lsof -i 6 

Open file and set line numbers 
 --> vim -c 'set number' file.txt 

Add device_ops group 
 --> groupadd device_ops 

Disable promiscuous mode on an interface 
 --> sudo ifconfig eth0 -promisc 

Kill a specific pane 
 --> tmux kill-pane -t 0.1 

Create a nested directory structure 'a/b/c' 
 --> mkdir -p a/b/c 

Display all partitions on /dev/sdd 
 --> parted /dev/sdd print 

Initialize xfs on /dev/sdh6 
 --> mkfs.xfs /dev/sdh6 

Traceroute to yahoo.com sending packets with ICMP protocol 
 --> traceroute -P icmp yahoo.com 

Add a connection with a specific IPv4 DHCP use DNS 
 --> nmcli connection add type ethernet con-name "My Ethernet" ifname eth0 ipv4.dhcp-use-dns yes 

Gzip data1.csv 
 --> gzip data1.csv 

Make exact image of disk 
 --> dd if=/dev/sda of=disk.img bs=512 

Delete buildbot_user 
 --> userdel buildbot_user 

Change to the directory /usr/share/zoneinfo/Europe 
 --> cd /usr/share/zoneinfo/Europe 

Run mtr to github.com with ASN lookup, 150 cycles, interval 5s, and output in report-wide format 
 --> mtr --aslookup --report-wide -c 150 -i 5 github.com 

Display machine hardware name and processor type 
 --> uname -mp 

Disable firewall 
 --> sudo ufw disable 

Run screen session with interactive bash 
 --> screen -S dev bash 

Display all system information except kernel name and network node hostname 
 --> uname -arvmoip 

List command being executed by user1 
 --> w user1 

Display memory usage in megabytes, update every 1 second, 5 times 
 --> free -m -s 1 -c 5 

Move all files in /var/log/pm-powersave.log to /backup/pmpowersave 
 --> mv /var/log/pm-powersave.log/* /backup/pmpowersave/ 

Print total of the third column 
 --> awk '{sum+=$3} END {print sum}' data.txt 

Identify longest idle session 
 --> w | sort -k5 | tail -1 

Create a directory called 'config' in /etc 
 --> mkdir /etc/config 

Show verbose configuration for all interfaces 
 --> ifconfig -v 

Switch to user admin 
 --> su admin 

Download a file and mirror a website with timestamping 
 --> wget --mirror --timestamping http://example.com/ 

Find files in /backup accessed more than 2 hours ago 
 --> find /backup -amin +120 

Compress notesfinal.doc with gzip 
 --> gzip notesfinal.doc 

Create a directory called 'info' in your home 
 --> mkdir ~/info 

Query A record for google.com and set query class CH 
 --> dig google.com CH 

Add a connection with a specific IPv4 DHCP client ID 
 --> nmcli connection add type ethernet con-name "My Ethernet" ifname eth0 ipv4.dhcp-client-id "MyClient" 

Create a file called 'Xorg.failsafe.log' in /var/log 
 --> touch /var/log/Xorg.failsafe.log 

List all TCP sockets in the FIN-WAIT-2 state 
 --> ss -t state fin-wait-2 

Make a request and show timing information 
 --> curl -w '%{time_total}\n' http://example.com 

Display all system information except kernel name and machine hardware name 
 --> uname -a 

Print disk layout for /dev/nvme1n1 
 --> parted /dev/nvme1n1 print 

Copy a file 'output.txt' and overwrite without prompt 
 --> cp -f output.txt /tmp/ 

Append 'World' after each line 
 --> sed 's/$/ World/' file.txt 

Modify login for database_admin 
 --> passwd database_admin 

Show connection secrets 
 --> nmcli --show-secrets connection show "My Connection" 

Display memory usage in human-readable format with detailed stats and wide output, update every 9 seconds, 9 times 
 --> free -h -l -w -s 9 -c 9 

Delete the group named developers 
 --> groupdel developers 

Quiet mode 
 --> pkill -q sshd 

Display disk usage for all files and directories, using block size of 8K 
 --> du -B 8K 

Mount shared folder with username and password 
 --> mount -t cifs //server/docs /mnt/docs -o username=user,password=pass 

Add students2025 group 
 --> groupadd students2025 

Add user amit to audio and video 
 --> usermod -aG audio,video amit 

Ping google.com with 7 second timeout and 75 times 
 --> ping -W 7 -c 75 google.com 

Display memory usage in megabytes with old format and wide output, update every 7 seconds, 7 times 
 --> free -m -o -w -s 7 -c 7 

Search for files named LICENSE 
 --> locate LICENSE 

Set timothy as new owner of book.pdf 
 --> chown timothy book.pdf 

Run top and show only processes in uninterruptible sleep 
 --> top -b -n 1 | grep ' D ' 

Watch for file system mount changes 
 --> watch mount 

Remove graphics_ops 
 --> groupdel graphics_ops 

Add user archie to sysadmins group 
 --> usermod -aG sysadmins archie 

Display all users currently logged in with activity 
 --> w 

Mount ISO with exec option 
 --> mount -o loop,exec image.iso /mnt/iso 

Zip input1.txt and input2.txt into inputs.zip 
 --> zip inputs.zip input1.txt input2.txt 

Fork a subshell process and wait 
 --> (echo hello; sleep 2) & wait 

Assign qa group to testcases.json 
 --> chgrp qa testcases.json 

Query the PTR record for 4.2.2.2 
 --> nslookup -query=PTR 4.2.2.2 

Query the A record for github.com and display output in uppercase and color 
 --> host github.com | tr '[:lower:]' '[:upper:]' | lolcat 

Show all FIN_WAIT2 connections 
 --> netstat | grep FIN_WAIT2 

Remove all files in /var/log/mail.info 
 --> rm /var/log/mail.info/* 

Set moderators group to forum_rules.txt 
 --> chgrp moderators forum_rules.txt 

Exit from screen completely 
 --> exit 

Ping 1.1.1.1 and stop after 10 seconds 
 --> ping -w 10 1.1.1.1 

Ping github.com with 2 second timeout and 45 times 
 --> ping -W 2 -c 45 github.com 

Run mtr to google.com and use a packet size of 1500 bytes 
 --> mtr -s 1500 google.com 

Compress all SVG files 
 --> zip svgs.zip *.svg 

Query the SPF record for github.com 
 --> nslookup -type=SPF github.com 

Check history with timestamps 
 --> HISTTIMEFORMAT="%F %T " history 

Uncomment all lines that start with # 
 --> sed 's/^#//' file.txt 

Create user sandbox with custom directory 
 --> useradd -m -d /opt/sandbox sandbox 

Create a directory called 'fonts' in your home 
 --> mkdir ~/fonts 

Set expiry for intern account to 2025-06-30 
 --> usermod -e 2025-06-30 intern 

Show all connections and filter for foreign address 
 --> netstat -an | grep '192.168.1.100' 

Find all .txt files in 2025 subdirectories of /data using regex 
 --> find /data -regex ".*/2025/.*\.txt" 

Run top and display only processes with a TTY 
 --> top -b -n 1 | grep -v '?' 

Move all files in the current directory to /tmp and keep permissions 
 --> mv --preserve=mode * /tmp/ 

List all enabled services 
 --> systemctl list-unit-files --state=enabled 

Find media files 
 --> locate '*.mp4' 

Allow everyone to read and write data.txt 
 --> chmod a+rw data.txt 

Copy 10 blocks of 1KB from file 
 --> dd if=input.txt of=output.txt bs=1K count=10 

Add a new Ethernet connection 
 --> nmcli connection add type ethernet con-name "My Ethernet" ifname eth0 

Update the timestamp of 'existing.txt' to now 
 --> touch existing.txt 

Check the status of the ufw firewall 
 --> service ufw status 

Make a file system of type exfat on /dev/sdg1 
 --> mkfs.exfat /dev/sdg1 

Switch pane layout to even-horizontal 
 --> Ctrl-b Space 

Display disk usage for all files in /var, excluding .bak files 
 --> du -h --exclude="*.bak" /var 

Print details of /dev/sde 
 --> blkid /dev/sde 

Filter users with idle time greater than 1hr 
 --> w | awk '$5 ~ /[0-9]+:[0-9]+/ {print $0}' 

Print the user activity list 
 --> w 

Traceroute to 8.8.8.8 using interface eth0 
 --> traceroute -i eth0 8.8.8.8 

Add user dan to qa group 
 --> gpasswd -a dan qa 

What are the directories in /usr? List them in long format. 
 --> ls -ld /usr/*/ 

Remove a secondary IP from an interface (alias) 
 --> sudo ifconfig eth0:1 down 

Create a file named 'My File.txt' with spaces in the name 
 --> touch 'My File.txt' 

Check activity for user 'guest' 
 --> w guest 

Assign a secondary IP to an interface (alias) 
 --> sudo ifconfig eth0:1 192.168.1.101 up 

Change image.png's group to designers 
 --> chgrp designers image.png 

Sync files and don't preserve owner 
 --> rsync -avz --no-o source_dir/ destination_dir/ 

Display disk usage for all files and directories, showing null-terminated output 
 --> du -0 

Sequentially kill multiple PIDs 
 --> kill 9091 && kill 10111 

Show logs and jump to the end 
 --> journalctl -e 

Change authentication for rootadmin 
 --> passwd rootadmin 

Run a command with a modified environment 
 --> env VAR=value command 

Compress the binary file binarydata.bin with bzip2 
 --> bzip2 binarydata.bin 

Copy all files in the current directory to /tmp and show progress 
 --> cp -v * /tmp/ 

Copy all files in /var/log/postgresql to /backup/postgresql 
 --> cp /var/log/postgresql/* /backup/postgresql/ 

Run time-consuming job quietly 
 --> nohup ./longjob.sh > /dev/null 2>&1 & 

Lock password authentication for rachel 
 --> passwd -l rachel 

Sync files and specify a custom daemon port 
 --> rsync -avz --daemon --port=8730 source_dir/ destination_dir/ 

Query the A record for yahoo.com and use TCP instead of UDP 
 --> nslookup -vc yahoo.com 

Remove write permission from others on view.png 
 --> chmod o-w view.png 

Set permission 755 for run.sh 
 --> chmod 755 run.sh 

Open fdisk CLI tool for volume 
 --> fdisk /dev/sda 

Traceroute to github.com showing ICMP extensions 
 --> traceroute -e github.com 

Copy all files in the current directory to /tmp and keep everything and prompt before overwrite 
 --> cp -a -i * /tmp/ 

Create a file called 'tomorrow.txt' and set its timestamp to tomorrow 
 --> touch -d 'tomorrow' tomorrow.txt 

Enable promiscuous mode on an interface 
 --> sudo ifconfig eth0 promisc 

Change niceness of pulseaudio 
 --> sudo renice +10 -p $(pgrep pulseaudio) 

Unmount user-mounted folder at /home/user/mount 
 --> umount /home/user/mount 

Change golang_team to go_dev 
 --> groupmod -n go_dev golang_team 

Rename 'user.log' to 'user.log.old' in /var/log 
 --> mv /var/log/user.log /var/log/user.log.old 

Reset access password for guest1 
 --> passwd guest1 

Print all partition tables 
 --> fdisk -l 

Run command with LANG=C 
 --> env LANG=C command 

Copy all files in the current directory to /tmp and keep everything and keep permissions 
 --> cp -ap * /tmp/ 

Connect to a remote server using SSH 
 --> ssh user@hostname 

Interactive mode: set query type to AAAA and look up github.com 
 --> nslookup
set type=AAAA
github.com 

Run atop and show only processes with network usage > 10MB 
 --> atop | awk '$12 > 10240' 

Display memory usage in gigabytes with old format, update every 20 seconds, 6 times 
 --> free -g -o -s 20 -c 6 

Show logs with a specific grep pattern 
 --> journalctl -g 'error' 

Create aligned ext4 partition on /dev/sdj 
 --> parted /dev/sdj mkpart primary ext4 1MiB 1025MiB 

Download a file in the background 
 --> wget -b http://example.com/file.zip 

Get quick snapshot of user tasks 
 --> w 

Unlock data_input user 
 --> passwd -u data_input 

Create test file with pattern 
 --> yes | tr -d '\n' | dd bs=1024 count=100 of=testfile 

Create a file called 'past.txt' and set its timestamp to last month 
 --> touch -d 'last month' past.txt 

Add a connection with a specific IPv4 DHCP wait timeout 
 --> nmcli connection add type ethernet con-name "My Ethernet" ifname eth0 ipv4.dhcp-wait-timeout 30 

Clear terminal for screenshot 
 --> clear 

Copy a file 'lastlog' to /var/log 
 --> cp lastlog /var/log/ 

Add mike2 to release group 
 --> gpasswd -a mike2 release 

List functions in .js files 
 --> grep 'function' *.js 

Ping amazon.com and set deadline to 60 seconds 
 --> ping -w 60 amazon.com 

Add the group qa_team 
 --> groupadd qa_team 

Kill by signal number 2 (SIGINT) 
 --> killall -2 mysqld 

List all sockets with resolved hostnames 
 --> ss -r 

Create a file called 'file.txt' and set its timestamp to 12:00 on June 18, 2025 
 --> touch -t 202506181200 file.txt 

Kill all processes matching regex 'httpd[0-9]+' 
 --> killall -r 'httpd[0-9]+' 

Show all interfaces with their status (POINTTOPOINT) 
 --> ifconfig -a | grep POINTTOPOINT 

Download a file and mirror a website with no check certificate 
 --> wget --mirror --no-check-certificate http://example.com/ 

Copy all files in /var/log/mysql to /backup/mysql 
 --> cp /var/log/mysql/* /backup/mysql/ 

Print line if it contains more than 5 fields 
 --> awk 'NF > 5' file.txt 

Print kernel version 
 --> echo "Kernel: $(uname -r)" 

Restart cups service quietly 
 --> systemctl restart cups 

Start vim and execute command 
 --> vim +':%s/foo/bar/g' +wq file.txt 

Enable allmulti on ens33 
 --> sudo ifconfig ens33 allmulti 

Display disk usage with last modification time in human-readable format 
 --> du --time -h 

Show interfaces that are up 
 --> ifconfig -u 

Use wait in shell script after background process 
 --> #!/bin/bash
sleep 2 &
wait
echo Done 

Open fdisk to manage partitions on new disk 
 --> fdisk /dev/sdb 

Sync files and specify a custom daemon log file 
 --> rsync -avz --daemon --log-file=/var/log/rsyncd.log source_dir/ destination_dir/ 

Print the physical directory path, ignoring symlinks. 
 --> pwd -P 

Set eric as owner of email.eml 
 --> chown eric email.eml 

Find mounted drives 
 --> locate /mnt 

Kill by name matching wildcard ignoring case 
 --> killall -i 'Python*' 

Display memory usage in gigabytes, update every 10 seconds, 3 times 
 --> free -g -s 10 -c 3 

Show the status of a serial line IP interface (e.g., sl1) 
 --> ifconfig sl1 

Set full access for user and group, none for others 
 --> chmod 770 code.py 

Change team_rocket to rocket_team 
 --> groupmod -n rocket_team team_rocket 

List all files ending in .log in the current directory, sorted by size 
 --> ls -S *.log 

Show me the contents of ~/Documents, sorted by modification date, newest at the bottom 
 --> ls -ltr ~/Documents 

What are the contents of the current directory, with numeric IDs and type indicators? 
 --> ls -nF 

Run clippy with niceness +3 
 --> nice -n 3 cargo clippy 

See login name, tty, and idle time for users 
 --> w 

Run Google Cloud CLI with niceness +4 
 --> nice -n 4 gcloud compute instances list 

List all files in /usr/include, sorted by extension 
 --> ls -X /usr/include 

Print block info of USB drive /dev/sdc1 
 --> blkid /dev/sdc1 

Download-only 
 --> sudo apt purge --download-only nginx 

Observe system's temperature 
 --> watch sensors 

Switch to jenkins 
 --> su jenkins 

Reset dave's password 
 --> passwd dave 

Update user credentials for docker_dev 
 --> passwd docker_dev 

Print environment variables 
 --> echo "PATH=$PATH" 

Re-enable password login for roger 
 --> passwd -u roger 

Remove all files in the parent directory 
 --> rm ../* 

Make firmware group for update.bin 
 --> chgrp firmware update.bin 

Update read_only_users to readonly_group 
 --> groupmod -n readonly_group read_only_users 

Follow file like tail -f 
 --> less +F file.txt 

Attach floppy drive to /mnt/floppy 
 --> mount /dev/fd0 /mnt/floppy 

Set the broadcast address for an interface 
 --> sudo ifconfig eth0 broadcast 192.168.1.255 

Remove emailbot 
 --> userdel emailbot 

Delete oldadmin 
 --> userdel oldadmin 

Set user password for frontend_dev 
 --> passwd frontend_dev 

Run top and show only the first 10 processes 
 --> top -b -n 1 | head -n 22 

Add a user reader with home at /opt/reader 
 --> useradd -m -d /opt/reader reader 

Send SIGQUIT to all top processes 
 --> pkill -QUIT top 

Display disk usage for all files and directories, excluding files matching a pattern 
 --> du --exclude="*.log" 

Run flake8 with niceness +3 
 --> nice -n 3 flake8 . 

Send SIGUSR2 to PID 1819 
 --> kill -USR2 1819 

Display memory usage in human-readable format with detailed stats and wide output, update every 9 seconds, 9 times 
 --> free -h -l -w -s 9 -c 9 

Create a file called 'etc' in your home 
 --> touch ~/etc 

List info for /dev/sde5 
 --> blkid /dev/sde5 

Connect with custom escape character 
 --> ssh -e '^B' user@hostname 

Run sleep and echo in background, then wait 
 --> sleep 3 & echo done & wait 

Get a clear shell 
 --> clear 

Change to the /var/log/journal directory 
 --> cd /var/log/journal 

Login to integration user 
 --> su integration 

Rename 'kern.log' to 'kern.log.old' in /var/log 
 --> mv /var/log/kern.log /var/log/kern.log.old 

Assign ownership of images to user mark 
 --> chown mark images 

Change to the /var/log/lastlog directory 
 --> cd /var/log/lastlog 

Use bzip2 for project.docx 
 --> bzip2 project.docx 

Sort the current directory's contents by file extension 
 --> ls -X 

Force delete all files and folders in /var/tmp 
 --> rm -rf /var/tmp/* 

Download a file with a specific user agent 
 --> wget --user-agent="Mozilla/5.0" http://example.com/file.zip 

Clean current shell output 
 --> clear 

Check if smbd is running 
 --> service smbd status 

Display all system information except kernel name and hardware platform 
 --> uname -arvmpo 

Unmount ISO image from /mnt/iso 
 --> umount /mnt/iso 

Query A record for google.com and set +nosigchase 
 --> dig google.com +nosigchase 

Show disk usage for all filesystems, display only the filesystem, type, and mount point 
 --> df -h --output=source,fstype,target 

Check for blocked processes 
 --> watch 'ps -eo stat,command | grep ^D' 

Mount sysfs on /sys 
 --> mount -t sysfs sysfs /sys 

Copy a file 'db.sqlite3' to /srv/db 
 --> cp db.sqlite3 /srv/db/ 

Display disk usage for all files and directories, using block size of 64G 
 --> du -B 64G 

Show me the contents of the current folder, sorted by time, oldest first, with details 
 --> ls -ltr 

Make payroll group for salary_data.csv 
 --> chgrp payroll salary_data.csv 

Change moderation group to comments.txt 
 --> chgrp moderation comments.txt 

Traceroute to yahoo.com using interface eth0 
 --> traceroute -i eth0 yahoo.com 

Make request with happy eyeballs delay 
 --> curl --happy-eyeballs-timeout-ms 200 http://example.com 

Compress notes_backup.txt 
 --> gzip notes_backup.txt 

Run htop and show process tree with user 'bob' 
 --> htop -t -u bob 

Ping facebook.com with 4096 byte packets and 2 times 
 --> ping -s 4096 -c 2 facebook.com 

Create new session and run bash 
 --> tmux new-session -s shell bash 

Enable cron logging 
 --> sudo nano /etc/rsyslog.d/50-default.conf 

Display a detailed list of the files in /tmp, sorted by size with human-readable units 
 --> ls -lSh /tmp 

Unlock the account of user demo 
 --> usermod -U demo 

Copy all files in the current directory to /tmp and keep mode 
 --> cp --preserve=mode * /tmp/ 

Add a script to weekly cron folder 
 --> sudo cp weekly.sh /etc/cron.weekly/ 

Assign an IP address, netmask, and broadcast to an interface 
 --> sudo ifconfig eth0 192.168.1.100 netmask 255.255.255.0 broadcast 192.168.1.255 

Run rsync job in background 
 --> nohup rsync -avz source/ dest/ & 

Become staging account 
 --> su staging 

Delete archive 
 --> userdel archive 

Remove developer1 completely 
 --> userdel -r developer1 

Display disk usage summary for each subdirectory in /srv 
 --> du -h --max-depth=1 /srv 

Mount a Windows network share to /mnt/smb 
 --> mount -t cifs //192.168.1.20/shared /mnt/smb -o username=guest 

Show all interfaces with their IPv6 addresses 
 --> ifconfig -a | grep inet6 

Keep an eye on MySQL process 
 --> watch 'ps aux | grep mysql' 

Send restart command to screen 
 --> screen -S nginx -X stuff 'sudo systemctl restart nginx\n' 

Delete lines that start with # 
 --> sed '/^#/d' config.txt 

Change niceness of container runtime processes 
 --> sudo renice +5 -p $(pgrep containerd) 

Display memory usage in kilobytes, update every 10 seconds, 2 times 
 --> free -k -s 10 -c 2 

Change login name of tom to tom_dev 
 --> usermod -l tom_dev tom 

Use gzip for the diagram.pdf 
 --> gzip diagram.pdf 

Run audio conversion with niceness +14 
 --> nice -n 14 lame in.wav out.mp3 

Connect with multiple identity files 
 --> ssh -i ~/.ssh/key1 -i ~/.ssh/key2 user@hostname 

Add sid to groups docker and wheel 
 --> usermod -aG docker,wheel sid 

Display kernel release, processor type, and hardware platform 
 --> uname -rpi 

Add HR_department group 
 --> groupadd HR_department 

Delete a file called 'clamav.log' in /var/log/clamav 
 --> rm /var/log/clamav/clamav.log 

Replace tab with comma 
 --> sed 's/\t/,/g' file.txt 

Display memory usage in bytes with old format, update every 5 seconds, 3 times 
 --> free -b -o -s 5 -c 3 

Capitalize the word 'hello' 
 --> sed 's/hello/HELLO/g' file.txt 

Create a file called 'test' in /tmp 
 --> touch /tmp/test 

Ping yahoo.com with 10 second timeout and 10 times 
 --> ping -W 10 -c 10 yahoo.com 

Sync files and show overall progress 
 --> rsync -avz --info=progress2 source_dir/ destination_dir/ 

Stop cups printing service 
 --> service cups stop 

Create msdos table on /dev/sda 
 --> parted /dev/sda mklabel msdos 

Disable password login for freelancer_01 
 --> passwd -l freelancer_01 

List UUIDs for all mounted devices 
 --> blkid 

Display disk usage for all files and directories, using SI units 
 --> du --si 

Create a file called 'music' in your home 
 --> touch ~/music 

List all sockets with process, timer, and extended info 
 --> ss -p -o -e 

Create new partition on /dev/sde from 5GiB to 10GiB 
 --> parted /dev/sde mkpart primary ext4 5GiB 10GiB 

Check the status of cron 
 --> service cron status 

Read email via IMAP 
 --> curl -u username:password imap://mail.example.com/INBOX/1 

Remove demo account and home 
 --> userdel -r demo 

Monitor number of SSH connections 
 --> watch 'netstat -tn | grep :22 | wc -l' 

Persist environment diagnostics 
 --> nohup ./env_check.sh & 

Query A record for example.com using DNS server 8.8.8.8 
 --> dig @8.8.8.8 example.com 

Resize pane left 
 --> Ctrl-b :resize-pane -L 10 

Set expiration for guest99 to 2025-09-01 
 --> usermod -e 2025-09-01 guest99 

Create a file called 'aptitude.log' in /var/log/aptitude 
 --> touch /var/log/aptitude/aptitude.log 

Form system_admins group 
 --> groupadd system_admins 

Create a zip file containing config and templates folders 
 --> zip -r config_templates.zip config templates 

Move to a subdirectory called 'projects' inside the current directory 
 --> cd projects 

Sleep for 1000 seconds 
 --> sleep 1000 

Display memory usage in megabytes, update every 15 seconds indefinitely 
 --> free -m -s 15 

Find all files in /opt but skip tmp directories 
 --> find /opt -path "*/tmp" -prune -o -type f -print 

Go to the /usr/bin directory 
 --> cd /usr/bin 

Give full permission to the owner on config.ini 
 --> chmod u+rwx config.ini 

Get login times of users 
 --> who 

See what's in the environment 
 --> env 

Display memory usage in megabytes, detailed low and high memory stats 
 --> free -m -l 

Copy a file 'resume.pdf' to your home directory 
 --> cp resume.pdf ~/ 

Form new group summer_batch 
 --> groupadd summer_batch 

Show any rm commands 
 --> history | grep rm 

List files in my home folder, sorted by size, smallest first 
 --> ls -Sr ~ 

Wipe visible command history 
 --> clear 

Show all interfaces with their flags 
 --> ifconfig -a | grep flags 

Identify all current user logins 
 --> who 

Download a file and specify a certificate directory 
 --> wget --ca-directory=/etc/ssl/certs https://example.com/file.zip 

Run rustfmt with niceness +3 
 --> nice -n 3 rustfmt src/*.rs 

Show logs in reverse order (newest first) 
 --> journalctl -r 

Delete onboarding_batch1 
 --> groupdel onboarding_batch1 

What's in the parent directory? 
 --> ls .. 

Install vs code from .deb file 
 --> sudo dpkg -i code.deb 

Zip the folder archive and ignore symbolic links 
 --> zip -r -y archive.zip archive 

Show interface statistics continuously 
 --> netstat -ic 

Disable and stop postfix 
 --> systemctl disable --now postfix 

Show disk usage for all filesystems in human-readable format 
 --> df -ah 

Set david as new owner for config.ini 
 --> chown david config.ini 

Open file and enable mouse 
 --> vim -c 'set mouse=a' file.txt 

Add 100 to each number in column 2 
 --> awk '{$2 += 100; print}' file.txt 

Rename the group devops to infra_devops 
 --> groupmod -n infra_devops devops 

Show lines with uppercase 'ERROR' 
 --> grep 'ERROR' file.txt 

Delete a file called 'sa.log' in /var/log/sa 
 --> rm /var/log/sa/sa.log 

Create a directory called 'monthly' in /var/log/backup 
 --> mkdir /var/log/backup/monthly 

Show errors on network interfaces 
 --> ifconfig | grep errors 

Display memory usage in human-readable format with total, update every 25 seconds, 7 times 
 --> free -h -t -s 25 -c 7 

Go to the root directory 
 --> cd / 

Traceroute to 8.8.8.8 with max TTL 10 
 --> traceroute -m 10 8.8.8.8 

Assign netmask 255.255.255.0 to ens33 
 --> sudo ifconfig ens33 netmask 255.255.255.0 

Change password for qa_user 
 --> passwd qa_user 

Ping google.com with 1024 byte packets and 6 times 
 --> ping -s 1024 -c 6 google.com 

Show all running processes in long format 
 --> ps -el 

Create a file called 'archive.tar.gz' in /opt 
 --> touch /opt/archive.tar.gz 

Pipe through grep 
 --> cat file.txt | grep pattern 

Pipe output to less 
 --> grep ERROR file.log | less 

Print blkid info for partition /dev/sde8 
 --> blkid /dev/sde8 

Automatically run top in screen 
 --> screen -dmS watchtop top 

Show all TIME_WAIT connections 
 --> netstat | grep TIME_WAIT 

Show all established connections 
 --> netstat | grep ESTABLISHED 

Display memory usage in bytes with total 
 --> free -b -t 

List all sockets for a specific program (e.g., ssh) 
 --> ss -p | grep ssh 

Include thomas in archivers group 
 --> gpasswd -a thomas archivers 

Check UUID and label of /dev/sdb8 
 --> blkid /dev/sdb8 

Remove all files in /var/log/lightdm 
 --> rm /var/log/lightdm/* 

Sort users by terminal 
 --> w | sort -k2 

Show disk usage for all filesystems, display only the filesystem and mount point 
 --> df -h --output=source,target 

Make terminal empty 
 --> clear 

Add dev_user to cloud group 
 --> gpasswd -a dev_user cloud 

Modify the password of user sam 
 --> passwd sam 

Run tail -f in a screen 
 --> screen -S watch tail -f /var/log/messages 

Unmount devtmpfs from /dev 
 --> umount /dev 

Compress the chatlog.log file using bzip2 
 --> bzip2 chatlog.log 

Remove vfx_team 
 --> groupdel vfx_team 

Replace first and last character on each line with '*' 
 --> sed -E 's/^(.).*(.)$/\*/' file.txt 

Create a file called 'test' in the current directory 
 --> touch test 

Allow group to execute test.sh 
 --> chmod g+x test.sh 

Switch to jenkins 
 --> su jenkins 

Ping facebook.com with 2000 byte packets and 3 times 
 --> ping -s 2000 -c 3 facebook.com 

Show me a detailed list sorted by last access time 
 --> ls -ltu 

Get label and UUID of /dev/sdc2 
 --> blkid /dev/sdc2 

Sync files and specify a custom remote shell 
 --> rsync -avz -e 'ssh -o StrictHostKeyChecking=no' source_dir/ user@remote_host:/destination_dir/ 

Launch parted for /dev/vda in non-interactive mode 
 --> parted -s /dev/vda print 

Display disk usage for all files and directories in human-readable format 
 --> du -ah 

Give me a detailed, recursive listing of the current directory 
 --> ls -lR 

Run with lower priority (+19) 
 --> nice -n 19 backup.sh 

Watch for pending updates 
 --> watch 'apt list --upgradable' 

Remove root_access group 
 --> groupdel root_access 

Follow kernel messages in real time 
 --> dmesg -w 

Change niceness of init process 
 --> sudo renice +0 -p 1 

Move all files in /tmp to the current directory 
 --> mv /tmp/* . 

Display disk usage for all files and directories, using block size of 32T 
 --> du -B 32T 

Convert lowercase to uppercase in column 2 
 --> awk '{print toupper($2)}' file.txt 

Print all logged-in user details 
 --> who 

Force delete a directory named 'backup' and everything inside it 
 --> rm -rf backup 

Show full info for /dev/sdg8 
 --> blkid /dev/sdg8 

Include omar in reporting group 
 --> gpasswd -a omar reporting 

Add user alice to the developers group 
 --> gpasswd -a alice developers 

Ping 1.1.1.1 with 2048 byte packets and 35 times 
 --> ping -s 2048 -c 35 1.1.1.1 

Compress screenshot.bmp with bzip2 
 --> bzip2 screenshot.bmp 

Query the TXT record for github.com with verbose output 
 --> host -v -t TXT github.com 

Assign auditors group to compliance_log.txt 
 --> chgrp auditors compliance_log.txt 

Change owner of game.log to gamer 
 --> chown gamer game.log 

Run top and show only processes with user 'www-data' 
 --> top -u www-data 

Make ext3 system on /dev/sdc8 
 --> mkfs.ext3 /dev/sdc8 

Show only processes with no TTY 
 --> ps -e -o tty,pid,cmd | grep '?' 

Download with custom filename pattern 
 --> curl -o 'file_#1.txt' http://example.com/files/{1,2,3}.txt 

Display memory usage in human-readable format, update every 10 seconds indefinitely 
 --> free -h -s 10 

Remove all the previous commands from view 
 --> clear 

Find the location of the hosts file 
 --> locate hosts 

Traceroute to example.com using only IPv4 and max TTL 25 
 --> traceroute -4 -m 25 example.com 

Traceroute to github.com using UDPLITE protocol 
 --> traceroute -UL github.com 

Run mtr to 8.8.8.8 with UDP, 50 cycles, interval 0.5s, and output in CSV format 
 --> mtr --udp --csv -c 50 -i 0.5 8.8.8.8 

Display all system information except kernel name and kernel version 
 --> uname -armoipn 

Find files in /home exactly 50MB in size 
 --> find /home -size 50M 

Show the configuration of interface ens33 
 --> ifconfig ens33 

Open file and set syntax highlighting 
 --> vim -c 'syntax on' file.txt 

Display kernel name, machine hardware name, and operating system 
 --> uname -smo 

Run atop and show only processes with PPID 1 
 --> atop | awk '$5 == 1' 

Delete .log files in /home older than 30 days 
 --> find /home -type f -name "*.log" -mtime +30 -exec rm {} \; 

Detach and logout 
 --> Ctrl-a d && exit 

Kill processes matching regex 
 --> pkill -r 'node.*server' 

Set HR group to org_chart.png 
 --> chgrp HR org_chart.png 

Find files related to MySQL 
 --> locate mysql 

Alias to remove .pyc files 
 --> alias cleanpyc='find . -name "*.pyc" -delete' 

List all TCP sockets with process and timer info 
 --> ss -t -p -o 

Assign ftp group to upload.txt 
 --> chgrp ftp upload.txt 

Change simulation_users to sim_team 
 --> groupmod -n sim_team simulation_users 

Set up ext4 on /dev/sdh2 
 --> mkfs.ext4 /dev/sdh2 

Change repo group to maintainers 
 --> chgrp maintainers repo 

Change file.txt ownership to coder 
 --> chown coder file.txt 

Update comment for dbadmin to 'Postgres DBA' 
 --> usermod -c 'Postgres DBA' dbadmin 

Find files in /tmp owned by alice or bob 
 --> find /tmp \( -user alice -o -user bob \) 

Unmount a noexec mounted directory 
 --> umount /mnt/noexec 

Pause task 22 seconds 
 --> sleep 22 

Display the entire terminal history 
 --> history 

Display who is doing what on the system 
 --> w 

Transform lowercase to uppercase 
 --> cat file.txt | tr 'a-z' 'A-Z' 

Create a file called 'file.txt' and set its timestamp to 12:00 on June 18, 2025 
 --> touch -t 202506181200 file.txt 

Query A record for google.com and show DNSSEC info 
 --> dig google.com +dnssec 

Delete a file called 'test' in the current directory 
 --> rm test 

Query A record for google.com with trace 
 --> dig google.com +trace 

Locate VSCode settings 
 --> locate settings.json 

SCP file transfer 
 --> curl -u username:password scp://scp.example.com/file.txt 

Shortcut 'v' for vim 
 --> alias v='vim' 

Query the ANY record for example.com 
 --> nslookup -query=ANY example.com 

Start parted session with /dev/sdf 
 --> parted /dev/sdf 

Form a group for marketing 
 --> groupadd marketing 

Monitor SSH logins 
 --> who | grep ssh 

Assign automation group to script_automation.sh 
 --> chgrp automation script_automation.sh 

Become reports user 
 --> su reports 

Query the A record for yahoo.com and use IPv6 
 --> nslookup -query=AAAA yahoo.com 

Remove all files in /mnt/usb 
 --> rm /mnt/usb/* 

View w command usage 
 --> w 

Show network device status 
 --> nmcli device status 

Change permissions from 600 to 644 for files in /data 
 --> find /data -type f -perm 600 -exec chmod 644 {} \; 

Block mark from logging in using password 
 --> passwd -l mark 

Copy each file in /data to a .bak file 
 --> find /data -type f -exec cp {} {}.bak \; 

Display the 10 largest directories in /home 
 --> du -h /home | sort -hr | head -10 

Query the SPF record for google.com 
 --> nslookup -type=SPF google.com 

Download a file and timestamping (only download if newer) 
 --> wget -N http://example.com/file.zip 

Skip first 1MB of ISO 
 --> dd if=ubuntu.iso of=ubuntu_trimmed.iso bs=1M skip=1 

Show all interfaces with their collision statistics 
 --> ifconfig -a | grep collisions 

Disable nginx from starting automatically 
 --> systemctl disable nginx 

Kill by elapsed time <60s 
 --> ps -eo pid,etimes,comm | awk '$2<60{print $1}'| xargs kill 

Skip lines containing 'debug' 
 --> awk '!/debug/' log.txt 

Convert commas to tabs 
 --> sed 's/,/\t/g' file.csv 

Find the word 'disk' in dmesg output 
 --> dmesg | grep 'disk' 

Show only the dropped packets for eth0 
 --> ifconfig eth0 | grep dropped 

Show all open files under /var/log 
 --> lsof +D /var/log 

Show command history with numbers 
 --> history 

Show network interfaces with their RX and TX packet statistics 
 --> ifconfig | grep 'RX packets\|TX packets' 

Create 5GB ext4 partition from 1GB on /dev/sdh 
 --> parted /dev/sdh mkpart primary ext4 1GB 6GB 

Write zeros to an entire disk 
 --> dd if=/dev/zero of=/dev/sdX bs=1M 

Traceroute to example.com with destination port 443 and 4 probes per hop 
 --> traceroute -p 443 -q 4 example.com 

Add user reporter1 to the news group 
 --> usermod -aG news reporter1 

Sleep in shell script for 0.09 seconds 
 --> sleep 0.09 

Open multiple files in tabs 
 --> vim -p file1.txt file2.txt 

Query the A record for example.com 
 --> host example.com 

Display memory usage in kilobytes, update every second indefinitely 
 --> free -k -s 1 

Create a directory called 'texmf' in your home 
 --> mkdir ~/texmf 

Reload cron daemon via init 
 --> sudo initctl reload-configuration 

Connect with dynamic forward on specific interface 
 --> ssh -D 127.0.0.1:1080 user@hostname 

Disable login via password for guest_temp2 
 --> passwd -l guest_temp2 

Create sandbox_team group 
 --> groupadd sandbox_team 

Background rsync and wait for it 
 --> rsync -a /src /dst & wait 

Add contract_devs group 
 --> groupadd contract_devs 

Traceroute to example.com with AS lookups enabled 
 --> traceroute -A example.com 

Create a zip archive named archive.zip containing file1.txt 
 --> zip archive.zip file1.txt 

Delete system_admins 
 --> groupdel system_admins 

Show processes with custom format: PID, TID, class, rtprio, ni, pri, psr, pcpu, stat, wchan, comm 
 --> ps -eo pid,tid,class,rtprio,ni,pri,psr,pcpu,stat,wchan:14,comm 

Start mysql database service 
 --> service mysql start 

Create a directory called 'videos' in /media/usb 
 --> mkdir /media/usb/videos 

Remove a nested empty directory structure 'a/b/c' in one command 
 --> rmdir -p a/b/c 

Assign an IPv6 address to an interface 
 --> sudo ifconfig eth0 inet6 add 2001:db8::1/64 

Ping facebook.com and set deadline to 5 seconds 
 --> ping -w 5 facebook.com 

Re-enable login for firewall_mgr 
 --> passwd -u firewall_mgr 

Display kernel name, release, and operating system 
 --> uname -sro 

List all UNIX sockets with process info 
 --> ss -x -p 

Show disk usage for all filesystems in human-readable POSIX format 
 --> df -Ph 

Check who is on GUI session 
 --> who | grep ':0' 

Replace all lowercase letters with uppercase 
 --> sed 'y/abcdefghijklmnopqrstuvwxyz/ABCDEFGHIJKLMNOPQRSTUVWXYZ/' file.txt 

Prevent dave from logging in with password 
 --> passwd -l dave 

Create sprint_5_team group 
 --> groupadd sprint_5_team 

Stop mysql database service 
 --> service mysql stop 

Show all threads for all processes 
 --> ps -eLf 

Display memory usage in human-readable format, update every 5 seconds indefinitely 
 --> free -h -s 5 

Update comment of user anusha to 'Data Science Intern' 
 --> usermod -c 'Data Science Intern' anusha 

Reactivate credentials for it_support 
 --> passwd -u it_support 

Copy all files in /var/log/dmesg to /backup/dmesg 
 --> cp /var/log/dmesg/* /backup/dmesg/ 

Create a file called 'log.txt' and set its timestamp to 7:00 AM today 
 --> touch -t $(date +%Y%m%d)0700 log.txt 

Create a file called 'tomorrow.txt' and set its timestamp to tomorrow 
 --> touch -d 'tomorrow' tomorrow.txt 

Traceroute to yahoo.com setting type of service 16 
 --> traceroute -t 16 yahoo.com 

Show environment settings used by shell 
 --> env 

Create usergroup_example group 
 --> groupadd usergroup_example 

Make file confidential.txt accessible to user and group 
 --> chmod 660 confidential.txt 

Run script with niceness +0 (default) 
 --> nice -n 0 runscript.sh 

Remove all files in /var/log/mail.warn 
 --> rm /var/log/mail.warn/* 

Change to the /var/log/installer directory 
 --> cd /var/log/installer 

Install local .deb 
 --> sudo dpkg -i package.deb 

Create a directory called 'videos' in your home 
 --> mkdir ~/videos 

Remove lock on account web_admin 
 --> passwd -u web_admin 

Continuously display memory usage every 5 seconds 
 --> free -s 5 

Display all system information except kernel name and machine hardware name 
 --> uname -arvpoipn 

Query the NS record for github.com 
 --> nslookup -query=NS github.com 

Run htop and show only user 'alice' processes 
 --> htop -u alice 

Schedule bash script every 3rd of the month 
 --> crontab -e # 0 0 3 * * /script.sh 

Copy all files in the /srv directory to /backup/srv 
 --> cp /srv/* /backup/srv/ 

Find all sockets in /opt 
 --> find /opt -type s 

Delete ux_team 
 --> groupdel ux_team 

Start a detached tmux session running top 
 --> tmux new -d -s top 'top' 

Temporarily disable script_user password 
 --> passwd -l script_user 

List all listening and non-listening sockets 
 --> ss -a 

Create a file called 'locale' in your home 
 --> touch ~/locale 

Query the A record for facebook.com and display output in lowercase and color 
 --> host facebook.com | tr '[:upper:]' '[:lower:]' | lolcat 

Access the webadmin account 
 --> su webadmin 

Temporarily lock web_admin 
 --> passwd -l web_admin 

Find files larger than 10MB in /opt 
 --> find /opt -type f -size +10M 

Find directories in /home at the top level only 
 --> find /home -maxdepth 1 -type d 

Show only interfaces with IPv6 addresses 
 --> ifconfig | grep inet6 

Exclude devin from sandbox group 
 --> gpasswd -d devin sandbox 

Kill by signal name SIGUSR1 
 --> killall -USR1 mydaemon 

Comment out all lines 
 --> sed 's/^/#/' file.txt 

Write history to .bash_history 
 --> history -w 

Reinstall package 
 --> sudo apt install --reinstall nginx 

Find directories in /data larger than 2GB 
 --> find /data -size +2G -type d 

Locate VLC media player files 
 --> locate vlc 

Find files in /data at least 3 levels deep 
 --> find /data -mindepth 3 -type f 

Make ext2 file system on /dev/sdf5 
 --> mkfs.ext2 /dev/sdf5 

Display memory usage in kilobytes, update every 4 seconds indefinitely 
 --> free -k -s 4 

Make internal_review group 
 --> groupadd internal_review 

Zip up the homework files 
 --> zip homework.zip homework/*.txt 

Show logs for the last hour 
 --> journalctl --since '1 hour ago' 

Enable promiscuous mode on an interface 
 --> sudo ifconfig eth0 promisc 

FTP active mode 
 --> curl --ftp-port - ftp://ftp.example.com/file.txt 

Modify a connection's MAC address 
 --> nmcli connection modify "My Connection" ethernet.cloned-mac-address 00:11:22:33:44:55 

Create a directory called 'include' in your home 
 --> mkdir ~/include 

Modify user1's password 
 --> passwd user1 

Create a directory called 'doc-base' in your home 
 --> mkdir ~/doc-base 

Prevent staging_user from password login 
 --> passwd -l staging_user 

Query A record for google.com and set +all 
 --> dig google.com +all 

Remove config only 
 --> sudo dpkg --purge package-name 

Screen for editing files 
 --> screen -S edit vim main.py 

Display all system information except kernel version and processor type 
 --> uname -asrmoipn 

Display firewall status 
 --> sudo ufw status 

Kill all instances of gnome-terminal 
 --> killall gnome-terminal 

Unmount folder used for recovery 
 --> umount /mnt/recovery 

Set user password for frontend_dev 
 --> passwd frontend_dev 

Check what commands were used earlier 
 --> history 

Remove the infra_devops group 
 --> groupdel infra_devops 

Set frank as owner of results.json 
 --> chown frank results.json 

Change to the directory /usr/local/include 
 --> cd /usr/local/include 

Make 'gcm' run git commit 
 --> alias gcm='git commit -m' 

Compress logs_2023.log using bzip2 
 --> bzip2 logs_2023.log 

Disable ARP on enp0s3 
 --> sudo ifconfig enp0s3 -arp 

Unmount the USB drive mounted at /media/usb 
 --> umount /media/usb 

Monitor logs with tail inside tmux 
 --> tmux new -s logs 'tail -f /var/log/syslog' 

Traceroute to yahoo.com showing ICMP extensions 
 --> traceroute -e yahoo.com 

Make a user nora with UID 3000 and GID 4000 
 --> useradd -u 3000 -g 4000 nora 

Run a docker container with custom ENV 
 --> docker run -e VAR=value alpine env 

Display disk usage for all files and directories, using block size of 2M 
 --> du -B 2M 

Ping 8.8.8.8 with record route option (root required) 
 --> ping -R 8.8.8.8 

Print date in script 
 --> echo "Today is $(date)" 

Show stat information for all files in /tmp 
 --> find /tmp -type f -exec stat {} \; 

Change to the /var/log/samba directory 
 --> cd /var/log/samba 

Ping google.com using IPv6 
 --> ping6 google.com 

Run command on first day of every month 
 --> crontab -e # 0 0 1 * * command 

Create a directory called 'mime' in your home 
 --> mkdir ~/mime 

Flush old outputs from terminal 
 --> clear 

Run mtr to yahoo.com and set the number of pings per hop to 70 
 --> mtr -c 70 yahoo.com 

View active user sessions with load average 
 --> w 

Use gzip on audio.flac 
 --> gzip audio.flac 

Run docker-compose with nohup 
 --> nohup docker-compose up & 

Mount overlayfs over /mnt/overlay 
 --> mount -t overlay overlay -o lowerdir=/lower,upperdir=/upper,workdir=/work /mnt/overlay 

Reactivate credentials for it_support 
 --> passwd -u it_support 

Access disk partition interface for /dev/sdl 
 --> fdisk /dev/sdl 

Add a connection with a specific IPv4 DHCP hostname 
 --> nmcli connection add type ethernet con-name "My Ethernet" ifname eth0 ipv4.dhcp-hostname myhost 

Traceroute to 8.8.8.8 sending 5 probes per hop 
 --> traceroute -q 5 8.8.8.8 

Create a directory called 'zoneinfo' in your home 
 --> mkdir ~/zoneinfo 

List all connections 
 --> nmcli connection show 

Sum values in the second column 
 --> awk '{sum += $2} END {print sum}' data.txt 

Make zip file configs.zip with config.yaml and settings.ini 
 --> zip configs.zip config.yaml settings.ini 

Display memory usage with total, update every 3 seconds, 7 times 
 --> free -t -s 3 -c 7 

Show all interfaces with protocol family inet 
 --> ifconfig -a inet 

Alias to open .bashrc 
 --> alias bashrc='nano ~/.bashrc' 

Re-execute the last command 
 --> !! 

Display memory usage in kilobytes, update every 30 seconds indefinitely 
 --> free -k -s 30 

Show all CLOSE_WAIT connections 
 --> netstat | grep CLOSE_WAIT 

Wait for command that outputs PID 
 --> command & pid=$!; wait $pid 

Alias to deactivate venv 
 --> alias vdeact='deactivate' 

Connect with trusted X11 forwarding 
 --> ssh -Y user@hostname 

Add support group 
 --> groupadd support 

Change to a directory called 'projects' in your home 
 --> cd ~/projects 

Start the ufw firewall 
 --> service ufw start 

Assign IP 172.16.0.1 and netmask 255.255.0.0 to eth3 
 --> sudo ifconfig eth3 172.16.0.1 netmask 255.255.0.0 

Save list of all files in /data to files.txt 
 --> find /data -type f -print | tee files.txt 

Query the A record for github.com and display the command used 
 --> echo 'host github.com'; host github.com 

Re-execute the most recent docker command 
 --> !docker 

Delay next command for 0.8 seconds 
 --> sleep 0.8 

Copy all files in /var/log/auth to /backup/auth 
 --> cp /var/log/auth/* /backup/auth/ 

Remove specific key from SSH agent 
 --> ssh-add -d ~/.ssh/private_key 

Recursively move the /mnt directory to /backup/mnt 
 --> mv /mnt /backup/mnt/ 

Kill screen by name 
 --> screen -X -S training quit 

Query the A record for google.com 
 --> nslookup google.com 

Query the SOA record for example.com 
 --> host -t SOA example.com 

Show all TCP connections with numeric addresses 
 --> netstat -tn 

Give everyone read and execute permission on start.sh 
 --> chmod a+rx start.sh 

Display memory usage in megabytes with total, update every 15 seconds, 5 times 
 --> free -m -t -s 15 -c 5 

Connect and run in background 
 --> ssh -f user@hostname 'command' 

Run go build with niceness +3 
 --> nice -n 3 go build ./... 

Create a directory called 'Asia' in your home 
 --> mkdir ~/Asia 

Initialize GPT on /dev/sdt and create 10GB ext4 
 --> parted /dev/sdt mklabel gpt mkpart primary ext4 1MiB 10GiB 

Change user shell to zsh for ritu 
 --> usermod -s /bin/zsh ritu 

Display all available system information 
 --> uname -a 

Create a directory called 'temp' in /tmp 
 --> mkdir /tmp/temp 

List previously used compilation commands 
 --> history | grep gcc 

Run Python app with nohup 
 --> nohup python3 app.py & 

Delete the infra_team group 
 --> groupdel infra_team 

Rename interns2024 to interns 
 --> groupmod -n interns interns2024 

List all users using screen 
 --> w | grep screen 

Traceroute to google.com with AS lookups enabled 
 --> traceroute -A google.com 

Show disk usage excluding devtmpfs filesystems 
 --> df -x devtmpfs 

Purge multiple packages 
 --> sudo apt purge git curl vim 

Traceroute to github.com sending 5 probes per hop 
 --> traceroute -q 5 github.com 

Display disk usage in human-readable format, excluding .tmp files 
 --> du -ah --exclude="*.tmp" 

Create a file called 'archives' in your home 
 --> touch ~/archives 

Restore login for temporary_user 
 --> passwd -u temporary_user 

Show all processes with custom columns: PID, USER, %CPU, %MEM, COMMAND 
 --> ps -eo pid,user,%cpu,%mem,command 

Add lucas to frontend group 
 --> gpasswd -a lucas frontend 

Deny all permissions on backup.img 
 --> chmod 000 backup.img 

Ignore SIGTERM in PID 7071 
 --> trap '' TERM; kill 7071 

Load a specific connection file 
 --> nmcli connection load /etc/NetworkManager/system-connections/my-connection.nmconnection 

Show all interfaces with protocol family tcp 
 --> ifconfig -a tcp 

Display kernel version, hardware platform, and operating system 
 --> uname -vio 

Make logs folder belong to syslog user 
 --> chown syslog logs 

Make support_nightshift group 
 --> groupadd support_nightshift 

Show only the collisions for eth0 
 --> ifconfig eth0 | grep collisions 

Check disk usage with ncdu 
 --> sudo ncdu / 

Query the A record for example.com and display output with both timestamp and color 
 --> date; host example.com | lolcat 

Search for core dumps 
 --> locate core 

Move all files in the current directory to /tmp and force overwrite 
 --> mv -f * /tmp/ 

Kill all mplayer instances 
 --> killall mplayer 

Query the DS record for example.com 
 --> nslookup -type=DS example.com 

Sync files and filter using multiple rules 
 --> rsync -avz --filter='- *.log' --filter='+ *.txt' --filter='- *' source_dir/ destination_dir/ 

Sleep before killing a process 
 --> sleep 4 

Connect with maximum keep-alive count 
 --> ssh -o ServerAliveCountMax=3 user@hostname 

Copy all files in the current directory to /tmp and keep everything and keep context 
 --> cp -a --preserve=context * /tmp/ 

Create cron job to log time every minute 
 --> crontab -e # * * * * * date >> /tmp/time.log 

Change user credential for admin1 
 --> passwd admin1 

Login to frontend user 
 --> su frontend 

Upload file via PUT 
 --> curl -X PUT --data-binary @file.txt http://example.com/upload 

Ping yahoo.com with 6 second timeout and 113 times 
 --> ping -W 6 -c 113 yahoo.com 

Show disk usage for filesystems of type nfs 
 --> df -t nfs 

Delete ghost user 
 --> userdel ghost 

Become netadmin 
 --> su netadmin 

Switch user_ops group name to account_ops 
 --> groupmod -n account_ops user_ops 

Match by GID range 
 --> pkill -G 100-200 myapp 

Query the A record for facebook.com using DNS server 208.67.222.222 
 --> host facebook.com 208.67.222.222 

Set login password for internal_user 
 --> passwd internal_user 

Query A record for google.com and set +cmd 
 --> dig google.com +cmd 

Change onboarding_team to onboarding_unit 
 --> groupmod -n onboarding_unit onboarding_team 

Show all connections for a specific protocol (e.g., IP) 
 --> netstat -p IP 

Assign IP 192.168.1.20 and MTU 9000 to eth4 
 --> sudo ifconfig eth4 192.168.1.20 mtu 9000 

Add simon to proxy group 
 --> gpasswd -a simon proxy 

Show the status of a serial line IP interface (e.g., sl1) 
 --> ifconfig sl1 

Start a new partition table with msdos on /dev/sdp 
 --> parted /dev/sdp mklabel msdos 

Block login using password for user ben 
 --> passwd -l ben 

Query the A record for github.com using DNS server 4.2.2.2 
 --> nslookup github.com 4.2.2.2 

Create a file called 'no_create.txt' only if it exists, do not create new 
 --> touch -c no_create.txt 

Reattach to named screen 
 --> screen -r monitor 

Run fdisk on the boot drive 
 --> fdisk /dev/sda 

Extract URL links from a file 
 --> grep -E 'http[s]?://\S+' file.txt 

Compress concatenated output 
 --> cat file1 file2 | gzip > combined.gz 

Enable password access for alice_dev 
 --> passwd -u alice_dev 

Run a script and wait until it finishes 
 --> ./myscript.sh & wait 

Show last lines of code file 
 --> tail -n 30 script.sh 

Install Node.js 
 --> sudo apt install nodejs 

View active user sessions with load average 
 --> w 

Become user vivek 
 --> su vivek 

Sleep for 0.2 seconds 
 --> sleep 0.2 

Send SIGUSR1 to PID 1617 
 --> kill -USR1 1617 

Add row number to each line 
 --> awk '{print NR ": " $0}' file.txt 

List keys in SSH agent 
 --> ssh-add -l 

Assign group staff to user john 
 --> usermod -g staff john 

Move all files in the current directory to /tmp and keep all attributes 
 --> mv --preserve=all * /tmp/ 

Query the NAPTR record for google.com 
 --> host -t NAPTR google.com 

Change to the /var/log/syslog directory 
 --> cd /var/log/syslog 

Create user projectbot for automated deployment 
 --> useradd projectbot 

Update the group name from marketing to digital_marketing 
 --> groupmod -n digital_marketing marketing 

Change niceness of all processes by user alice to +10 
 --> sudo renice +10 -u alice 

Display disk usage for all files and directories, including hidden ones, in megabytes 
 --> du -am 

Print who is connected remotely 
 --> who | grep '(' 

Create user api_user for REST services 
 --> useradd api_user 

Make request with SNI hostname 
 --> curl --resolve example.com:443:1.2.3.4 https://example.com 

Ping google.com with 5 second timeout and 51 times 
 --> ping -W 5 -c 51 google.com 

Use parted to set lvm flag on second partition 
 --> parted /dev/sdf set 2 lvm on 

Query A record for google.com with retry 2 
 --> dig google.com +retry=2 

Create a compressed archive of utilities folder 
 --> zip -r utilities.zip utilities 

Unmount manually mounted drive 
 --> umount /mnt/manual 

Query the PTR record for 8.8.8.8 with verbose output 
 --> host -v -t PTR 8.8.8.8 

Create a new ext4 fs on USB at /dev/sdc2 
 --> mkfs.ext4 /dev/sdc2 

Display all mounted devices 
 --> fdisk -l 

Run mtr to yahoo.com and use a packet size of 8192 bytes 
 --> mtr -s 8192 yahoo.com 

Check SELinux enforcing mode 
 --> watch getenforce 

Append output to file 
 --> echo "World" >> file.txt 

Overwrite drive multiple times 
 --> for i in {1..3}; do dd if=/dev/urandom of=/dev/sdX bs=1M; done 

Query A record for google.com and set +ignore 
 --> dig google.com +ignore 

Show broadcast addresses of interfaces 
 --> ifconfig | grep broadcast 

Show logs for a specific user (UID 1000) 
 --> journalctl _UID=1000 

Use su to become backup user 
 --> su backup 

Display open files with IPv6 only 
 --> lsof -i 6 

Unlock database_user 
 --> passwd -u database_user 

Traceroute to google.com bypassing routing tables 
 --> traceroute -r google.com 

Copy all files in the current directory to /tmp and keep everything and keep xattr 
 --> cp -a --preserve=xattr * /tmp/ 

Connect using a specific private key 
 --> ssh -i ~/.ssh/private_key user@hostname 

Restart the apache2 service 
 --> service apache2 restart 

Allow-unauthenticated 
 --> sudo apt purge --allow-unauthenticated nginx 

Remove password lock for observer_1 
 --> passwd -u observer_1 

Assign MTU 1500 to enp0s3 
 --> sudo ifconfig enp0s3 mtu 1500 

Display all system information except kernel version 
 --> uname -asrmoipn 

Ping 1.1.1.1 and set deadline to 30 seconds 
 --> ping -w 30 1.1.1.1 

Allow user qa_lead to log in again 
 --> passwd -u qa_lead 

Run htop and show only processes with nice value 0 
 --> htop | awk '$18 == 0' 

Traceroute to google.com using TCP SYN packets 
 --> traceroute -T google.com 

List all users using screen 
 --> w | grep screen 

Show disk usage in bytes 
 --> df -B1 

Use bzip2 to compress the metadata.xml 
 --> bzip2 metadata.xml 

Create a directory called 'backgrounds' in your home 
 --> mkdir ~/backgrounds 

Display disk usage for all files and directories, using block size of 16M 
 --> du -B 16M 

Run htop and display process tree and sort by memory 
 --> htop -t --sort-key=MEM% 

Copy all files in the current directory to /tmp and keep all attributes 
 --> cp --preserve=all * /tmp/ 

Compress the tests folder with zip 
 --> zip -r tests.zip tests 

Show all running processes in standard format 
 --> ps -e 

Open file with numbers left-justified 
 --> LESS='-N -L' less file.txt 

Match by group name 
 --> pkill -G admin myapp 

Run htop and show only sleeping processes 
 --> htop | grep ' S ' 

Check if TERM is set 
 --> env | grep TERM 

Change password of developer1 
 --> passwd developer1 

Remove all files in /var/log/journal 
 --> rm /var/log/journal/* 

Set permission to 777 for access.txt 
 --> chmod 777 access.txt 

Remove tools_internal 
 --> groupdel tools_internal 

Create a file called 'yesterday.txt' and set its timestamp to yesterday 
 --> touch -d 'yesterday' yesterday.txt 

Change to the directory /etc/pam.d 
 --> cd /etc/pam.d 

Search entire home directory for 'ssh' 
 --> grep -r 'ssh' ~ 

Show a concise summary of all interfaces 
 --> ifconfig -s 

Sync files and specify a custom rsync path on the remote machine 
 --> rsync -avz --rsync-path='sudo rsync' source_dir/ user@remote_host:/destination_dir/ 

List files containing '127.0.0.1' 
 --> grep -l '127.0.0.1' * 

Backup database weekly 
 --> crontab -e # 0 3 * * 0 /db_backup.sh 

Create a directory called 'test' in the current directory and set permissions to 700 
 --> mkdir test && chmod 700 test 

Show logs since 2025-06-19 12:00 
 --> journalctl --since "2025-06-19 12:00" 

Delete preet from system 
 --> userdel preet 

Run a command that takes 1 hour 
 --> nohup bash -c 'sleep 3600' & 

Create a file called 'no_create.txt' only if it exists, do not create new 
 --> touch -c no_create.txt 

Display all system information except kernel name and operating system 
 --> uname -ar 

Check cron job run success 
 --> grep 'CRON' /var/log/syslog | grep 'CMD' 

Create a file called 'past.txt' and set its timestamp to last month 
 --> touch -d 'last month' past.txt 

Query the TLSA record for google.com 
 --> nslookup -type=TLSA google.com 

Set up exfat system on /dev/sdi3 
 --> mkfs.exfat /dev/sdi3 

Run Ruby script with nohup 
 --> nohup ruby script.rb & 

Initialize exfat on /dev/sde4 
 --> mkfs.exfat /dev/sde4 

Start Django server in background 
 --> nohup python manage.py runserver & 

Create a directory called 'workspace' in your home 
 --> mkdir ~/workspace 

Print all directories in /var separated by null character 
 --> find /var -type d -print0 

List all partitions of /dev/sds using parted 
 --> parted /dev/sds print 

Display all system information except kernel name and processor type 
 --> uname -arvm 

Run htop in batch mode and save output to file 
 --> htop -b > htop_output.txt 

Change to the /var/run directory 
 --> cd /var/run 

Run atop and show only kernel threads 
 --> atop -k 

Run mtr to amazon.com with 300 cycles, interval 0.25s, and output in split format 
 --> mtr --split -c 300 -i 0.25 amazon.com 

Download a file and specify a client certificate 
 --> wget --certificate=client.pem https://example.com/file.zip 

Delete a file called 'secure' in /var/log 
 --> rm /var/log/secure 

Login as user arya 
 --> su arya 

Find files in /home accessed more than 30 days ago 
 --> find /home -atime +30 

Make request with custom socket timeout 
 --> curl --max-time 30 --connect-timeout 10 http://example.com 

Enable ARP on enp0s3 
 --> sudo ifconfig enp0s3 arp 

Open file and set smartindent 
 --> vim -c 'set smartindent' file.txt 

Open file and record macro 'q' 
 --> vim -c 'normal! qq' 

Create a file called 'past.txt' and set its timestamp to last month 
 --> touch -d 'last month' past.txt 

Enable account login for guest2 
 --> passwd -u guest2 

Schedule a job to run every minute 
 --> crontab -e # * * * * * command 

Unmount a virtual machine image 
 --> umount /mnt/vm 

Ignore viminfo file 
 --> vim -i NONE file.txt 

Display memory usage with old format (no -/+ buffers/cache line) 
 --> free -o 

Rename 'wtmp' to 'wtmp.old' in /var/log 
 --> mv /var/log/wtmp /var/log/wtmp.old 

Connect with VPN tunnel 
 --> ssh -o Tunnel=yes user@hostname 

Use gzip to compress data.csv 
 --> gzip data.csv 

Query A record for google.com and set +noanswer 
 --> dig google.com +noanswer 

Split image into 100MB chunks 
 --> dd if=big.img bs=100M count=1 | split -b 100M - part_ 

Locate jupyter notebooks 
 --> locate '*.ipynb' 

Find invalid lines with no colon in passwd 
 --> grep -v ':' /etc/passwd 

Change group name from testers to qa_team 
 --> groupmod -n qa_team testers 

Run Go app in screen session 
 --> screen -S goapp ./app 

Create a file called 'builds' in your home 
 --> touch ~/builds 

Remove amit from docker-users group 
 --> gpasswd -d amit docker-users 

Open with case-insensitive patterns 
 --> less -I file.txt 

Assign IP 10.0.2.15 to enp0s3 
 --> sudo ifconfig enp0s3 10.0.2.15 

Sleep for 2.8 seconds 
 --> sleep 2.8 

Add onboarding_team group 
 --> groupadd onboarding_team 

Mount /dev/sdf1 to /mnt with noatime option 
 --> mount -o noatime /dev/sdf1 /mnt 

Disable login for client_service 
 --> passwd -l client_service 

Run ping and sleep in background, then wait 
 --> ping -c 3 google.com & sleep 5 & wait 

Assign finance team user to report_final.pdf 
 --> chown finance report_final.pdf 

Create a directory named 'archive' in /opt 
 --> mkdir /opt/archive 

Run mtr to google.com in interactive mode 
 --> mtr google.com 

Force all options 
 --> sudo dpkg -i --force-all package.deb 

Print every even numbered line 
 --> awk 'NR % 2 == 0' file.txt 

Append a line after line 3 
 --> sed '3a\Appended line' file.txt 

Make a GET request and include response headers 
 --> curl -i http://example.com 

Delete a file in /etc 
 --> sudo rm /etc/sample.conf 

Display contents of a file 
 --> cat file.txt 

Check if admin is logged in 
 --> who | grep admin 

Show disk usage for all filesystems, display only the filesystem, type, and total size 
 --> df -h --output=source,fstype,size 

Disable ARP on enp0s3 
 --> sudo ifconfig enp0s3 -arp 

Lock inactiveuser 
 --> usermod -L inactiveuser 

Print backslash 
 --> echo -e "Path: C:\\Windows" 

Go up two directory levels 
 --> cd ../.. 

Watch IO stats 
 --> watch iostat 

Query A record for google.com and set +nocomments 
 --> dig google.com +nocomments 

Show me a detailed list of files starting with 'a', 'b', or 'c' 
 --> ls -l [abc]* 

Switch to user sam with login shell 
 --> su - sam 

Make setup.sh executable only by group 
 --> chmod 010 setup.sh 

Find directories in /tmp created today 
 --> find /tmp -ctime 0 -type d 

Show disk usage for all files in /var 
 --> find /var -type f -exec du -h {} \; 

Run a script in background without hangup 
 --> nohup ./myscript.sh & 

Delete account emily and clean up home directory 
 --> userdel -r emily 

Recursively copy the /usr/local directory to /backup/usr-local 
 --> cp -r /usr/local /backup/usr-local/ 

Run fdisk on drive vdh 
 --> fdisk /dev/vdh 

Run atop in monochrome mode 
 --> atop -m 

Assign user28 as the owner of project1 
 --> chown user28 project1 

Search for images in Pictures 
 --> locate /Pictures/*.png 

Find all files named index.html 
 --> locate index.html 

Run mtr to facebook.com and show output in wide format with 70 cycles 
 --> mtr --wide -c 70 facebook.com 

Show all processes sorted by memory usage 
 --> ps -eo pid,ppid,cmd,%cpu,%mem --sort=-%mem 

List all fs labels using blkid 
 --> blkid 

Create a file called 'src' in your home 
 --> touch ~/src 

Query the DNSKEY record for yahoo.com 
 --> nslookup -type=DNSKEY yahoo.com 

Clear all environment vars and start shell 
 --> env -i /bin/sh 

Remove project_guest and delete home 
 --> userdel -r project_guest 

Keep running network monitor script 
 --> nohup ./net_monitor.sh & 

Display partition layout of disk /dev/sde 
 --> fdisk -l /dev/sde 

Delete a connection 
 --> nmcli connection delete "My Connection" 

Kill all processes in the current login session 
 --> killall -u $(whoami) 

Copy all files in /var/log/exim4 to /backup/exim4 
 --> cp /var/log/exim4/* /backup/exim4/ 

Become the vpnadmin 
 --> su vpnadmin 

Start the NetworkManager service 
 --> service NetworkManager start 

Completely delete user frank 
 --> userdel -r frank 

Show NetworkManager logging configuration 
 --> nmcli general logging 

Traceroute to github.com using TCP SYN packets and destination port 22 
 --> traceroute -T -p 22 github.com 

Extract domain from email field 
 --> awk -F'@' '{print $2}' emails.txt 

Run PostgreSQL server in background 
 --> nohup postgres & 

Create a file called 'user.log' in /var/log 
 --> touch /var/log/user.log 

Pause script for 45 seconds 
 --> sleep 45 

Sync files and specify a custom outgoing port 
 --> rsync -avz --port=8730 source_dir/ destination_dir/ 

Print the value of the $PWD environment variable. 
 --> echo $PWD 

Display disk usage of the current directory 
 --> du 

Find files in /tmp larger than 1MB or smaller than 1KB 
 --> find /tmp \( -size +1M -o -size -1k \) 

Create a session that logs to file 
 --> screen -L -S logfile 

Reactivate login for integration_test 
 --> passwd -u integration_test 

Find a file named main.cpp 
 --> locate main.cpp 

Assign tom as the owner of image.png 
 --> chown tom image.png 

Restore access for backup_admin 
 --> passwd -u backup_admin 

Assign interns group to summer_tasks.md 
 --> chgrp interns summer_tasks.md 

Add preet to the testing group 
 --> usermod -aG testing preet 

Create interns2025 group 
 --> groupadd interns2025 

Add observers group 
 --> groupadd observers 

Rename legacy_users to legacy_team 
 --> groupmod -n legacy_team legacy_users 

Query A record for google.com 
 --> dig google.com 

List block devices 
 --> blkid 

Change to the /var/log/wtmp directory 
 --> cd /var/log/wtmp 

Modify a connection's DNS servers 
 --> nmcli connection modify "My Connection" ipv4.dns "8.8.8.8 1.1.1.1" 

Show disk usage for all filesystems, display only the filesystem and used inodes 
 --> df -h --output=source,iused 

Locate GPG keys 
 --> locate *.gpg 

Query NAPTR record for google.com 
 --> dig google.com NAPTR 

Sync files and show checksum information 
 --> rsync -avzc source_dir/ destination_dir/ 

Merge history from disk with memory 
 --> history -n 

Print only the base name of each file in /home 
 --> find /home -type f -exec basename {} \; 

Show logs from the previous boot 
 --> journalctl -b -1 

Show the kernel release 
 --> uname -r 

Query the NS record for yahoo.com 
 --> host -t NS yahoo.com 

Query A record for github.com 
 --> dig github.com 

Move all files in the /etc directory to /backup/etc 
 --> mv /etc/* /backup/etc/ 

Add user steve to audio and video groups 
 --> usermod -aG audio,video steve 

Create a blank 200MB image 
 --> dd if=/dev/zero of=blank.img bs=1M count=200 

Move a file 'config' to /etc and show progress 
 --> mv -v config /etc/ 

Make a request and write output to stdout 
 --> curl http://example.com -o - 

Download a file and enable following robots.txt 
 --> wget --robots=on http://example.com/ 

Create a directory called 'music' in your home 
 --> mkdir ~/music 

Recursively list everything, but only show directories 
 --> find . -type d | ls -R 

Query the ANY record for yahoo.com 
 --> host -t ANY yahoo.com 

Give project manager ownership of roadmap.pdf 
 --> chown manager roadmap.pdf 

Track internet connectivity 
 --> watch -n 5 curl -Is https://google.com | head -1 

Display layout of mmc device 
 --> fdisk -l /dev/mmcblk0 

Wipe out all console text 
 --> clear 

Extract MBR to file 
 --> dd if=/dev/sda of=mbr.bin bs=446 count=1 

Copy all files in /var/log/ppp to /backup/ppp 
 --> cp /var/log/ppp/* /backup/ppp/ 

Ignore viminfo file 
 --> vim -i NONE file.txt 

List all local processes connected to X server 
 --> ss -x src /tmp/.X11-unix/* 

Become netadmin 
 --> su netadmin 

Install unzip tool 
 --> sudo apt install unzip 

Activate a network interface (e.g., eth0) 
 --> sudo ifconfig eth0 up 

Sleep 0.01 seconds 
 --> sleep 0.01 

Use full command match 
 --> pkill -f 'python script.py' 

Display memory usage in megabytes with detailed stats, update every 15 seconds, 5 times 
 --> free -m -l -s 15 -c 5 

List all UNIX domain sockets 
 --> ss -x 

View man page via less 
 --> man ls 

Show only listening UNIX domain sockets 
 --> netstat -lx 

Change to the /usr/src directory 
 --> cd /usr/src 

Wait for 20 minutes 
 --> sleep 1200 

Display all system information except kernel name and kernel version 
 --> uname -armpio 

Open file and set listchars 
 --> vim -c 'set listchars=tab:>-,trail:-' file.txt 

List running processes 
 --> sudo ps aux 

Change niceness of dbus daemon 
 --> sudo renice +8 -p $(pgrep dbus-daemon) 

List all panes in current window 
 --> Ctrl-b q 

Display a detailed list of files, sorted by change time (ctime), oldest first 
 --> ls -lctr 

Change to the directory /usr/share/themes 
 --> cd /usr/share/themes 

Remove all data from partition 
 --> dd if=/dev/zero of=/dev/sdX1 bs=512 

Change ownership of blog.html to webuser 
 --> chown webuser blog.html 

Show all SYN_SENT connections 
 --> netstat | grep SYN_SENT 

Enable ARP on ens33 
 --> sudo ifconfig ens33 arp 

Lock guest_temp from logging in 
 --> passwd -l guest_temp 

Start Redis server in screen 
 --> screen -S redis redis-server 

Show all connections for a specific protocol (e.g., tcp) 
 --> netstat -p tcp 

Display kernel release, machine hardware name, and hardware platform 
 --> uname -rmi 

Make request with custom SSL version 
 --> curl --tlsv1.2 https://example.com 

Re-enable login for user helpline 
 --> passwd -u helpline 

Locate firewall settings file 
 --> locate firewalld.conf 

Create a directory called 'temp' in /home/erin 
 --> mkdir /home/erin/temp 

Create backend_team group 
 --> groupadd backend_team 

Add root_team group 
 --> groupadd root_team 

Print file path 
 --> echo "File is located at $PWD/file.txt" 

Delete training_class group 
 --> groupdel training_class 

Unmount the read-only mounted /mnt/ro 
 --> umount /mnt/ro 

Delete all files and subdirectories in the 'build' directory 
 --> rm -rf build/* 

Display all memory information in kibibytes (default) 
 --> free 

Clean the terminal screen 
 --> clear 

Start screen session for logs 
 --> screen -S logs tail -f /var/log/syslog 

Remove editor_users 
 --> groupdel editor_users 

Rename 'access.log' to 'access.old' in /var/log 
 --> mv /var/log/access.log /var/log/access.old 

Remove stag_user completely 
 --> userdel -r stag_user 

Make alias to ping google 
 --> alias pingg='ping 8.8.8.8' 

Update snap packages 
 --> sudo snap refresh 

Restrict test_dev access via password 
 --> passwd -l test_dev 

Look for previously used python3 scripts 
 --> history | grep python3 

Rename node_admins to node_ops 
 --> groupmod -n node_ops node_admins 

Display memory usage in human-readable format 
 --> free -h 

Delete mentorship_team group 
 --> groupdel mentorship_team 

Unlock login for cloud_user 
 --> passwd -u cloud_user 

Find all files in /home up to 2 levels deep 
 --> find /home -maxdepth 2 -type f 

Create a file called 'log.txt' and set its timestamp to 11:59 PM today 
 --> touch -t $(date +%Y%m%d)2359 log.txt 

Alias to unzip archive 
 --> alias unzipf='unzip -o' 

Show all interfaces with protocol family inet6 
 --> ifconfig -a inet6 

Modify a connection's MTU 
 --> nmcli connection modify "My Connection" ethernet.mtu 9000 

Query the NAPTR record for example.com 
 --> host -t NAPTR example.com 

Make a request with CA certificate 
 --> curl --cacert ca-cert.pem https://example.com 

Move all files in the /mnt directory to /backup/mnt 
 --> mv /mnt/* /backup/mnt/ 

Find old email archives 
 --> locate '*.mbox' 

Show UDP connections and continuously update every second 
 --> netstat -cu 

Connect with local forward for multiple ports 
 --> ssh -L 8080:localhost:80 -L 8443:localhost:443 user@hostname 

Find all shell scripts with lowercase names in /tmp using regex 
 --> find /tmp -regex ".*/[a-z]+\.sh" 

Alias for sudo 
 --> alias please='sudo' 

Allow read for group and others 
 --> chmod go+r note.txt 

Disable ARP on ens33 
 --> sudo ifconfig ens33 -arp 

Display disk usage summary for each subdirectory in /home 
 --> du -h --max-depth=1 /home 

Unmount folder with lazy mode 
 --> umount -l /mnt/folder 

Reset screen after long output 
 --> clear 

Make a request with timeout 
 --> curl --max-time 30 http://example.com 

Show disk usage for all filesystems, display only the filesystem, type, and mount point 
 --> df -h --output=source,fstype,target 

Generate SSH key pair without passphrase 
 --> ssh-keygen -t rsa -N '' 

Run Django server inside screen 
 --> screen -S django python manage.py runserver 

Display memory usage in megabytes, update every 6 seconds indefinitely 
 --> free -m -s 6 

Run background bash block and wait 
 --> { echo 1; sleep 2; } & wait 

Remove mount at /mnt/shared 
 --> umount /mnt/shared 

Run mtr to facebook.com and set the number of pings per hop to 100 
 --> mtr -c 100 facebook.com 

Create a user with username harry and no user group 
 --> useradd -N harry 

Look for HTTP status codes in log 
 --> grep -E 'HTTP/1.1" [4-5][0-9]{2}' access.log 

Display memory usage in megabytes, no buffers/cache line 
 --> free -m -o 

Set login key for beta_user 
 --> passwd beta_user 

Show only the TX packets for eth0 
 --> ifconfig eth0 | grep 'TX packets' 

Add a connection with a specific IPv4 DHCP use MTU 
 --> nmcli connection add type ethernet con-name "My Ethernet" ifname eth0 ipv4.dhcp-use-mtu yes 

List all sockets with process IDs 
 --> ss -p 

Add marketing_interns group 
 --> groupadd marketing_interns 

Add a connection with a specific IPv4 DHCP hostname flags 
 --> nmcli connection add type ethernet con-name "My Ethernet" ifname eth0 ipv4.dhcp-hostname-flags "fqdn" 

Use bzip2 for notesfinal.txt 
 --> bzip2 notesfinal.txt 

Establish reverse SSH tunnel 
 --> ssh -R 2222:localhost:22 user@remotehost 

Open file in quiet mode 
 --> less -q file.txt 

Clone partition with dd 
 --> dd if=/dev/sda1 of=/dev/sdb1 bs=4M 

Make request ignoring HSTS 
 --> curl --ignore-hsts https://example.com 

Change directory permission to 755 
 --> chmod 755 mydir 

Display all system information except kernel name and processor type 
 --> uname -ar 

See filesystem on /dev/sdf5 
 --> blkid /dev/sdf5 

Show inode usage in human-readable format 
 --> df -ih 

Show me the three newest files in the current directory 
 --> ls -t | head -n 3 

Show all threads in BSD format 
 --> ps axms 

Remove demo_user and home directory 
 --> userdel -r demo_user 

Pause for 4.2 seconds 
 --> sleep 4.2 

Create documentation team group 
 --> groupadd documentation 

Create ext3 on /dev/nvme0n1p3 
 --> mkfs.ext3 /dev/nvme0n1p3 

Query the SRV record for _xmpp-server._tcp.yahoo.com 
 --> host -t SRV _xmpp-server._tcp.yahoo.com 

Create a file called 'log.txt' and set its timestamp to 11:59 PM today 
 --> touch -t $(date +%Y%m%d)2359 log.txt 

Query the TXT record for github.com 
 --> host -t TXT github.com 

Create user alpha_team in group alpha 
 --> useradd -g alpha alpha_team 

Create ext4 file system on /dev/sde3 
 --> mkfs.ext4 /dev/sde3 

Download a file and specify the DNS server 
 --> wget --dns-servers=8.8.8.8 http://example.com/file.zip 

Start screen for database shell 
 --> screen -S mysql mysql -u root -p 

Mount ISO using fuseiso 
 --> fuseiso image.iso /mnt/iso 

Locate all .ini files 
 --> locate '*.ini' 

Alias to show memory usage 
 --> alias mem='free -h' 

Show all connections for a specific protocol (e.g., unix) 
 --> netstat -p unix 

Create alias to show disk usage 
 --> alias disk='df -h' 

Give all permissions to user, execute only to group 
 --> chmod 710 service 

Exclude jordan from qa group 
 --> gpasswd -d jordan qa 

Send SIGALRM to all cron processes 
 --> pkill -ALRM cron 

Change marketing group to sales_chart.jpg 
 --> chgrp marketing sales_chart.jpg 

Create a screen that auto logs output 
 --> screen -L -S outputlog 

List partition info of /dev/sdf6 
 --> blkid /dev/sdf6 

Clean command line space 
 --> clear 

Alias to launch Jupyter Notebook 
 --> alias jn='jupyter notebook' 

Display memory usage in bytes, update every 5 seconds, 5 times 
 --> free -b -s 5 -c 5 

Download a file and mirror a website with quiet 
 --> wget --mirror --quiet http://example.com/ 

Show only the IPs from access.log 
 --> grep -oE '\b[0-9]+(\.[0-9]+){3}\b' access.log 

Search all .txt files for 'summary' 
 --> grep 'summary' *.txt 

Remove marketing_ops 
 --> groupdel marketing_ops 

Query the SRV record for _xmpp-server._tcp.gmail.com 
 --> host -t SRV _xmpp-server._tcp.gmail.com 

Create cron job for logging CPU stats 
 --> crontab -e # */5 * * * * top -bn1 >> /tmp/cpu.log 

Start less at BOF 
 --> less +g file.txt 

Ping google.com with default settings 
 --> ping google.com 

Find all CSV files with 3 uppercase letters and 2 digits in /home using regex 
 --> find /home -regex ".*/[A-Z]{3}[0-9]{2}\.csv" 

Hide all output before prompt 
 --> clear 

Create ext4 on /dev/nvme0n1p1 
 --> mkfs.ext4 /dev/nvme0n1p1 

Create a file called 'ref.txt' and set its timestamp to match 'source.txt' 
 --> touch -r source.txt ref.txt 

Add a connection with a specific IPv4 DHCP hostname priority 
 --> nmcli connection add type ethernet con-name "My Ethernet" ifname eth0 ipv4.dhcp-hostname-priority 100 

List current users and their activities 
 --> w 

Delete deprecated_user account 
 --> userdel deprecated_user 

Copy 1 block and skip 5 
 --> dd if=file.bin of=output.bin bs=1 count=1 skip=5 

Create a 10MB random file 
 --> dd if=/dev/urandom of=random.bin bs=1M count=10 

Launch parted utility for SSD /dev/nvme0n1 
 --> parted /dev/nvme0n1 

Show all interfaces with their MTU values 
 --> ifconfig -a | grep mtu 

Remove all files in /var/log/dmesg 
 --> rm /var/log/dmesg/* 

Run mtr to yahoo.com and use a packet size of 1400 bytes 
 --> mtr -s 1400 yahoo.com 

Sync files and only update if destination is older 
 --> rsync -avzu source_dir/ destination_dir/ 

Show systemctl version 
 --> systemctl --version 

Ping amazon.com with 7 second timeout and 35 times 
 --> ping -W 7 -c 35 amazon.com 

Run mtr to example.com and set the number of pings per hop to 14 
 --> mtr -c 14 example.com 

Switch to service account 'service01' 
 --> su service01 

Unmount ISO after installation 
 --> umount /mnt/iso 

Display memory usage in kilobytes with wide output and detailed stats, update every 6 seconds, 6 times 
 --> free -k -w -l -s 6 -c 6 

Remove an empty directory called 'videos' in /media/usb 
 --> rmdir /media/usb/videos 

Remove execute from user and group 
 --> chmod ug-x exec.sh 

Run mtr to 8.8.8.8 with UDP, 200 cycles, and output in CSV format 
 --> mtr --udp --csv -c 200 8.8.8.8 

Run mtr to google.com and set the number of pings per hop to 19 
 --> mtr -c 19 google.com 

Delete network_admins 
 --> groupdel network_admins 

Add a connection with a specific IPv6 address 
 --> nmcli connection add type ethernet con-name "My Ethernet" ifname eth0 ip6 2001:db8::1/64 

Display memory usage in bytes with old format, update every 2 seconds, 4 times 
 --> free -b -o -s 2 -c 4 

Keep only the first line 
 --> sed -n '1p' file.txt 

Delete ubuntu account 
 --> userdel ubuntu 

Ping yahoo.com and set packet size to 1400 bytes 
 --> ping -s 1400 yahoo.com 

Display kernel release and machine hardware name 
 --> uname -rm 

Start SFTP with compression 
 --> sftp -C user@hostname 

Check how /dev/sdm is partitioned 
 --> fdisk -l /dev/sdm 

Display machine hardware name, processor type, and operating system 
 --> uname -mpo 

Display disk usage for all directories in /etc, excluding *.conf files 
 --> du -h --exclude="*.conf" /etc 

Run htop and show only processes with PID greater than 1000 
 --> htop | awk '$1 > 1000' 

Mount systemd automount unit 
 --> systemctl start mnt-data.mount 

Display memory usage in kilobytes with detailed stats, update every 3 seconds, 3 times 
 --> free -k -l -s 3 -c 3 

Restart the apache2 service 
 --> systemctl restart apache2 

Show user login dates 
 --> who 

Query the SRV record for _xmpp-server._tcp.gmail.com 
 --> nslookup -query=SRV _xmpp-server._tcp.gmail.com 

Make a request and load cookies from file 
 --> curl -b cookies.txt http://example.com 

Send SIGABRT to PID 5253 
 --> kill -ABRT 5253 

Unmount SSHFS from /mnt/remote 
 --> umount /mnt/remote 

List all files with their full details and numeric IDs 
 --> ls -ln 

Track RAM usage with top 10 
 --> watch 'ps -eo pid,ppid,cmd,%mem,%cpu --sort=-%mem | head' 

Print all lines where field 1 contains only digits 
 --> awk '$1 ~ /^[0-9]+$/' file.txt 

Show env without running a command 
 --> env 

Send SIGUSR1 to all java processes 
 --> pkill -USR1 java 

Make multiple requests in parallel 
 --> curl -Z http://example.com/file1 http://example.com/file2 

Disable MySQL at boot 
 --> sudo systemctl disable mysql 

Create archive.zip from main.c and input.txt 
 --> zip archive.zip main.c input.txt 

Rename internal_tools to tools_internal 
 --> groupmod -n tools_internal internal_tools 

Find the location of the passwd file 
 --> locate passwd 

Force unmount the directory /mnt/iso 
 --> umount -f /mnt/iso 

Query the DNSKEY record for google.com 
 --> host -t DNSKEY google.com 

List all files in the current folder with a .txt extension 
 --> ls *.txt 

Show all processes as a tree 
 --> ps -ejH 

Display who is currently connected 
 --> who 

Unmount USB in read-only mode 
 --> umount /mnt/ro 

Display memory usage in human-readable format with old format, update every 7 seconds, 7 times 
 --> free -h -o -s 7 -c 7 

Show all disks with partition info 
 --> fdisk -l 

Change to the /var/log/fsck directory 
 --> cd /var/log/fsck 

Query the A record for yahoo.com with port 53 
 --> nslookup -port=53 yahoo.com 

Navigate to the previous directory 
 --> cd - 

Display disk usage for all files and directories, displaying inode usage 
 --> du --inodes 

Delete a file called 'gpu-manager.log' in /var/log 
 --> rm /var/log/gpu-manager.log 

What are the hidden files in the root directory? 
 --> ls -d /.* 

Enable password access for alice_dev 
 --> passwd -u alice_dev 

Create a directory called 'perl5' in your home 
 --> mkdir ~/perl5 

Grant read/write to user and group 
 --> chmod ug+rw sample 

Alias to show current time 
 --> alias now='date +"%T"' 

Check what users are doing right now 
 --> w 

Change niceness of syslog daemon 
 --> sudo renice +8 -p $(pgrep rsyslogd) 

Copy all files in the current directory to /tmp and keep everything and keep ownership 
 --> cp -a --preserve=ownership * /tmp/ 

Change employee45's password 
 --> passwd employee45 

Change group of archive.tar.gz to archive 
 --> chgrp archive archive.tar.gz 

Rename the team root_team to root_access 
 --> groupmod -n root_access root_team 

Identify longest idle session 
 --> w | sort -k5 | tail -1 

Change ops to operations 
 --> groupmod -n operations ops 

Show all interfaces with their status (ALLMULTI) 
 --> ifconfig -a | grep ALLMULTI 

Inspect MBR of /dev/sda 
 --> fdisk -l /dev/sda 

Remove all files in /var/log/exim4 
 --> rm /var/log/exim4/* 

Assign netmask 255.255.255.0 to enp0s3 
 --> sudo ifconfig enp0s3 netmask 255.255.255.0 

Assign user6 ownership of backup.tar.gz 
 --> chown user6 backup.tar.gz 

Query the A record for github.com 
 --> host github.com 

Zip .gitignore and LICENSE 
 --> zip git_license.zip .gitignore LICENSE 

Rename user karen to karen_smith 
 --> usermod -l karen_smith karen 

Delete group ui_team 
 --> groupdel ui_team 

Install in custom root 
 --> sudo dpkg -i --root=/mnt package.deb 

Ping amazon.com with 8192 byte packets and 21 times 
 --> ping -s 8192 -c 21 amazon.com 

Delete a file called 'user.log' in /var/log 
 --> rm /var/log/user.log 

Show all active network connections 
 --> netstat 

Create symbolic link as root 
 --> sudo ln -s /var/www /home/user/web 

Unmount USB key 
 --> umount /media/usbkey 

Change niceness of processes in a session 
 --> sudo renice +7 -s 1234 

Print lines matching multiple words 
 --> grep -E 'error|warning' server.log 

Change to the directory /usr/share/kde5 
 --> cd /usr/share/kde5 

Start with a clean shell window 
 --> clear 

Connect with remote forward for multiple ports 
 --> ssh -R 8080:localhost:80 -R 8443:localhost:443 user@hostname 

Gzip the folder listing.txt 
 --> gzip listing.txt 

Enter command mode in tmux 
 --> Ctrl-b : 

Copy a file called 'test' in the current directory to /tmp 
 --> cp test /tmp/ 

Open multiple files in vertical splits 
 --> vim -O file1.txt file2.txt 

Unblock engineer_23 
 --> passwd -u engineer_23 

Format disk partition /dev/sdj7 using ntfs 
 --> mkfs.ntfs /dev/sdj7 

Match exact name 
 --> pkill -x bash 

Connect with gateway ports enabled 
 --> ssh -g user@hostname 

Screen for monitoring cron logs 
 --> screen -S cronlogs tail -f /var/log/cron.log 

Compress the logs folder recursively 
 --> zip -r logs.zip logs 

Show LANG value 
 --> env | grep LANG 

Switch to operator with login shell 
 --> su - operator 

Revoke execute permission from all on update.sh 
 --> chmod a-x update.sh 

Show all processes with more than 10% CPU usage 
 --> ps -eo pid,ppid,cmd,%cpu --sort=-%cpu | awk '$4 > 10' 

Only see command column from w 
 --> w | awk '{print $8}' 

Run kafka producer with nohup 
 --> nohup kafka-console-producer.sh --topic test & 

Unlock temporary_account 
 --> passwd -u temporary_account 

Make a request over HTTPS ignoring certificate errors 
 --> curl -k https://example.com 

Start screen and log everything 
 --> screen -L -S full_log 

Make FTP request 
 --> curl ftp://ftp.example.com/file.txt 

Create a WiFi hotspot with custom SSID and password 
 --> nmcli device wifi hotspot ssid MyHotspot password "mypassword" 

Calculate product of values in column 1 
 --> awk '{p *= $1} END {print p}' file.txt 

Add voice_test group 
 --> groupadd voice_test 

Make a directory named 'photos' in the Pictures folder 
 --> mkdir ~/Pictures/photos 

Check if cron service is running 
 --> systemctl status cron 

Print the previous working directory. 
 --> echo $OLDPWD 

Delete an empty directory called 'jobs' in /var/spool/cron 
 --> rmdir /var/spool/cron/jobs 

Copy only 1GB from disk 
 --> dd if=/dev/sda of=partial.img bs=1M count=1024 

Create a compressed version of backup.tar 
 --> gzip backup.tar 

Force delete a directory called 'temp' in /tmp 
 --> rm -rf /tmp/temp 

Rename analytics group as data_team 
 --> groupmod -n data_team analytics 

Create a directory called 'Africa' in your home 
 --> mkdir ~/Africa 

Display disk usage for all files and directories, using block size of 128T 
 --> du -B 128T 

Get blkid details of /dev/sdd8 
 --> blkid /dev/sdd8 

Traceroute to example.com showing ICMP extensions 
 --> traceroute -e example.com 

Sync files and don't preserve group 
 --> rsync -avz --no-g source_dir/ destination_dir/ 

Rename group qa to qa_engineers 
 --> groupmod -n qa_engineers qa 

Display inode stats 
 --> watch 'df -i' 

Mount the USB drive located at /dev/sdb1 to the /media/usb directory 
 --> mount /dev/sdb1 /media/usb 

Make a directory called 'work' in /tmp 
 --> mkdir /tmp/work 

Show last 1KB 
 --> tail -c 1K file.txt 

Mount SSHFS with specific port 
 --> sshfs -p 2222 user@hostname:/remote/path /local/mountpoint 

Rename current tmux session to 'main' 
 --> tmux rename-session -t 0 main 

Create alias for system update 
 --> alias sysup='sudo apt update && sudo apt upgrade -y' 

Get all IPv6 addresses from log 
 --> grep -E '([0-9a-fA-F]{1,4}:){7}[0-9a-fA-F]{1,4}' logfile.txt 

Shutdown the system 
 --> sudo shutdown now 

Find all .txt or .md files in /home 
 --> find /home \( -name "*.txt" -o -name "*.md" \) 

Bring down interface enp0s3 
 --> sudo ifconfig enp0s3 down 

Remove a file named 'My File.txt' with spaces in the name 
 --> rm 'My File.txt' 

Run fdisk on /dev/mmcblk0 
 --> fdisk /dev/mmcblk0 

Create a cron timer for systemd 
 --> sudo nano /etc/systemd/system/myjob.timer 

Create a directory called 'locale' in your home 
 --> mkdir ~/locale 

Run Maven build with niceness +6 
 --> nice -n 6 mvn clean install 

Run mtr to yahoo.com and set maximum TTL to 128 
 --> mtr -m 128 yahoo.com 

Find all broken symbolic links in /var 
 --> find /var -xtype l 

Lock credentials for test_user2 
 --> passwd -l test_user2 

Clear visible command history 
 --> clear 

Ping 1.1.1.1 with 10 second timeout and 121 times 
 --> ping -W 10 -c 121 1.1.1.1 

Show all connections and filter for a specific state 
 --> netstat -an | grep 'CLOSE_WAIT' 

Make a hidden directory called '.config' in your home 
 --> mkdir ~/.config 

Locate network interfaces file 
 --> locate interfaces 

Rename analytics group as data_team 
 --> groupmod -n data_team analytics 

Start SFTP session 
 --> sftp user@hostname 

Run mtr to yahoo.com with IPv6, 75 cycles, interval 5s, and output in raw format 
 --> mtr -6 --raw -c 75 -i 5 yahoo.com 

Disable bluetooth service 
 --> sudo systemctl disable bluetooth 

Show top 10 memory-consuming processes 
 --> ps -eo pid,ppid,cmd,%mem --sort=-%mem | head -n 11 

Restrict frontend2 from using password 
 --> passwd -l frontend2 

Ping facebook.com with 16384 byte packets and 41 times 
 --> ping -s 16384 -c 41 facebook.com 

Add a comma after every number 
 --> sed 's/[0-9]\+/&,/g' file.txt 

Display info of /dev/sdg6 
 --> blkid /dev/sdg6 

Detach the device from /mnt 
 --> umount /mnt 

Delete java_backends 
 --> groupdel java_backends 

Use bzip2 to compress textfile.txt 
 --> bzip2 textfile.txt 

Query A record for google.com and set +noquestion 
 --> dig google.com +noquestion 

Add user sandbox to all test groups 
 --> usermod -aG test1,test2,test3 sandbox 

Create testers_interns group 
 --> groupadd testers_interns 

List all users on tty2 
 --> who | grep tty2 

Make testers the group of regression.sh 
 --> chgrp testers regression.sh 

Move all files in /var/log/auth to /backup/auth 
 --> mv /var/log/auth/* /backup/auth/ 

Run tmux session start script 
 --> nohup ./start_tmux.sh & 

Display memory usage in gigabytes with old format and detailed stats, update every 8 seconds, 8 times 
 --> free -g -o -l -s 8 -c 8 

Display memory usage in gigabytes with wide output, update every 20 seconds, 6 times 
 --> free -g -w -s 20 -c 6 

Query the TXT record for example.com 
 --> nslookup -query=TXT example.com 

Copy all files in the current directory to /tmp and do not overwrite existing files 
 --> cp -n * /tmp/ 

Query the NS record for yahoo.com and display only nameservers 
 --> host -t NS yahoo.com | awk '{print $4}' 

Modify a connection's gateway 
 --> nmcli connection modify "My Connection" ipv4.gateway 192.168.1.1 

Only view usernames from who 
 --> who | awk '{print $1}' 

Display a detailed, recursive list sorted by time 
 --> ls -lRt 

Run backup job with redirected output 
 --> nohup ./backup.sh > backup.log 2>&1 & 

Sync files with archive mode and verbose output 
 --> rsync -av source_dir/ destination_dir/ 

Display all system information except kernel name and network node hostname 
 --> uname -arvmp 

Connect with specific log level 
 --> ssh -o LogLevel=DEBUG user@hostname 

Backup a USB stick 
 --> dd if=/dev/sdb of=usb_backup.img bs=4M 

Change to the directory /usr/share/vim 
 --> cd /usr/share/vim 

Move all files and subdirectories from 'build' to 'release' 
 --> mv build/* release/ 

Fork subshell and wait 
 --> (ls; sleep 1) & wait 

Remove all previous text from shell 
 --> clear 

Query the A record for google.com and display output in lowercase and color 
 --> host google.com | tr '[:upper:]' '[:lower:]' | lolcat 

Enable apache2 service to run at startup 
 --> systemctl enable apache2 

Alias to navigate to Documents 
 --> alias docs='cd ~/Documents' 

Make a request using IPv4 only 
 --> curl -4 http://example.com 

Bring up interface ens33 
 --> sudo ifconfig ens33 up 

Print lines where the second field is 'admin' 
 --> awk '$2 == "admin"' users.txt 

Add a connection with a specific IPv4 DHCP hostname 
 --> nmcli connection add type ethernet con-name "My Ethernet" ifname eth0 ipv4.dhcp-hostname "myhost" 

Check the version of the pwd binary on your system. 
 --> /bin/pwd --version 

Create a file called 'file.txt' and set its timestamp to 23:59 on Dec 31, 2024 
 --> touch -t 202412312359 file.txt 

Display disk usage for all files and directories, counting hard links 
 --> du -l 

Change to the /var/log/exim4 directory 
 --> cd /var/log/exim4 

Run top and display only the memory summary 
 --> top -b -n 1 | grep 'KiB Mem' 

Revoke all permissions from others on private.doc 
 --> chmod o= private.doc 

Rename 'index.html' to 'index_backup.html' in /var/www/html 
 --> mv /var/www/html/index.html /var/www/html/index_backup.html 

Sleep for long-running delay 
 --> sleep 10000 

Quick format by zeroing start 
 --> dd if=/dev/zero of=/dev/sdX bs=1M count=100 

List all open non-listening sockets with established connections 
 --> ss 

Set the home directory of bob to /srv/bobhome 
 --> usermod -d /srv/bobhome bob 

Query the CAA record for yahoo.com 
 --> nslookup -type=CAA yahoo.com 

Switch to operator account 
 --> su operator 

Search for files in Desktop folder 
 --> locate Desktop 

Assign tommy to own nginx.conf 
 --> chown tommy nginx.conf 

Reload systemd manager configuration 
 --> systemctl daemon-reexec 

Run top and show only processes in stopped state 
 --> top -b -n 1 | grep ' T ' 

Remove all permissions from config.yml 
 --> chmod 000 config.yml 

Open file with specific environment 
 --> LESSCHARSET=utf-8 less file.txt 

Clear the display buffer 
 --> clear 

Change owner of files in /tmp owned by alice to bob 
 --> find /tmp -type f -user alice -exec chown bob {} \; 

Remove user amitabh from infra group 
 --> gpasswd -d amitabh infra 

Create a file called 'test' in the parent directory 
 --> touch ../test 

Change niceness of web server processes 
 --> sudo renice +5 -p $(pgrep nginx) 

Connect through multiple jump hosts 
 --> ssh -J jumphost1,jumphost2 user@targethost 

Traceroute to example.com with wait time 3 seconds and 2 probes per hop 
 --> traceroute -w 3 -q 2 example.com 

Query the TXT record for github.com 
 --> nslookup -query=TXT github.com 

Check if ssh is running 
 --> service ssh status 

Move all .conf files from /etc to /backup/etc 
 --> mv /etc/*.conf /backup/etc/ 

Find anything related to chrome 
 --> locate chrome 

Find files in /var not owned by group wheel 
 --> find /var -not -group wheel 

Wait for two background sleep commands 
 --> sleep 2 & sleep 4 & wait 

Open parted for disk /dev/sdb 
 --> parted /dev/sdb 

Change to the /tmp/logs directory 
 --> cd /tmp/logs 

Monitor free memory with watch 
 --> watch free -m 

Move a directory 'src' and all its contents to /opt 
 --> mv src /opt/ 

Get list of current sessions 
 --> who 

Show security info for all processes 
 --> ps -eo euser,ruser,suser,fuser,f,comm,label 

Add access_control group 
 --> groupadd access_control 

Use noninteractive frontend 
 --> DEBIAN_FRONTEND=noninteractive sudo apt update 

Set IT group on antivirus.log 
 --> chgrp IT antivirus.log 

Sync files to a remote server 
 --> rsync -avz source_dir/ user@remote_host:/destination_dir/ 

Copy all files in the current directory to /tmp and keep everything and show progress 
 --> cp -a -v * /tmp/ 

Insert '[INFO]' at start of each line 
 --> sed 's/^/[INFO] /' log.txt 

Change to the /var/log/wtmp directory 
 --> cd /var/log/wtmp 

Delete the user john 
 --> userdel john 

Show kernel messages without timestamps 
 --> dmesg -t 

Query the NS record for github.com 
 --> host -t NS github.com 

Display disk usage for all files and directories, using block size of 8T 
 --> du -B 8T 

Add ci_testers group 
 --> groupadd ci_testers 

Start nginx server now 
 --> service nginx start 

Show only listening sockets with numeric addresses 
 --> netstat -ln 

Gzip the notes.md file 
 --> gzip notes.md 

Query the TLSA record for example.com 
 --> nslookup -type=TLSA example.com 

Count lines containing 'admin' in users.csv 
 --> grep -c 'admin' users.csv 

Change niceness of all processes in cgroup /user.slice 
 --> for pid in $(cat /sys/fs/cgroup/user.slice/*.tasks); do sudo renice +5 $pid; done 

Download a file and continue if interrupted 
 --> wget -c http://example.com/file.zip 

Create user for cronjobs with no password 
 --> useradd -M -s /usr/sbin/nologin cronuser 

Show multicast group memberships 
 --> ifconfig | grep MULTICAST 

Show processes by TTY pts/1 
 --> ps -t pts/1 

Surround each word 'user' with quotes 
 --> sed 's/user/"user"/g' file.txt 

Run two scripts and wait until both are done 
 --> ./script1.sh & ./script2.sh & wait 

Print lines where the first column is not empty 
 --> awk '$1 != ""' file.txt 

Query the CNAME record for www.example.com 
 --> nslookup -query=CNAME www.example.com 

Lazy unmount a directory 
 --> umount -l /mnt/tmp 

Gzip the logfile.log 
 --> gzip logfile.log 

List all TTY sessions 
 --> who | grep tty 

Query the A record for google.com and display debug information 
 --> nslookup -debug google.com 

Clean up terminal clutter 
 --> clear 

Delete walter user from system 
 --> userdel walter 

Find all files in /tmp but skip old directories 
 --> find /tmp -path "*/old" -prune -o -type f -print 

Use bzip2 on README.md 
 --> bzip2 README.md 

Run mtr to example.com and set the number of pings per hop to 22 
 --> mtr -c 22 example.com 

Display all system information except kernel name and processor type 
 --> uname -arvmi 

Query the A record for google.com using DNS server 1.1.1.1 
 --> host google.com 1.1.1.1 

Create screen for background process 
 --> screen -S downloader wget largefile.zip 

Show only sockets that are listening for incoming connections 
 --> netstat -l 

Reactivate automation_bot account 
 --> passwd -u automation_bot 

Display memory usage in human-readable format with total, update every 25 seconds, 7 times 
 --> free -h -t -s 25 -c 7 

Show all connections and filter for local address 
 --> netstat -an | grep '127.0.0.1' 

Resize pane right 
 --> Ctrl-b :resize-pane -R 10 

Calculate md5sum for all files in /var 
 --> find /var -type f -exec md5sum {} \; 

Remove old_intern and all related data 
 --> userdel -r old_intern 

Show all interfaces with protocol family udp 
 --> ifconfig -a udp 

Display the contents of the parent directory, sorted by time, newest last 
 --> ls -tr .. 

Only allow execute to user 
 --> chmod 100 test.sh 

Display all system information except kernel name and hardware platform 
 --> uname -a 

Add a shell script to run hourly 
 --> sudo cp myscript.sh /etc/cron.hourly/ 

Set read-only permission for all users on notice.txt 
 --> chmod 444 notice.txt 

Show disk usage excluding tmpfs filesystems 
 --> df -x tmpfs 

Display disk usage in 512-byte blocks 
 --> du -b 

Open file with folding enabled 
 --> vim -c 'set foldmethod=indent' file.txt 

Display disk usage for all directories in /opt, excluding backup directories 
 --> du -h --exclude="*/backup" /opt 

List all sockets and filter for UNCONN state 
 --> ss state unconn 

Query the DS record for yahoo.com 
 --> nslookup -type=DS yahoo.com 

Blank the screen before next output 
 --> clear 

Ping amazon.com with 9 second timeout and 119 times 
 --> ping -W 9 -c 119 amazon.com 

Print label and UUID of /dev/sde1 
 --> blkid /dev/sde1 

Ping github.com with 8 second timeout and 57 times 
 --> ping -W 8 -c 57 github.com 

Run test automation in background 
 --> nohup ./run_tests.sh & 

Go up two directory levels 
 --> cd ../.. 

Display all system information except kernel name and operating system 
 --> uname -a 

Re-enable access for account manager1 
 --> passwd -u manager1 

Change developers group to script.sh 
 --> chgrp developers script.sh 

Run mtr to amazon.com and set the number of pings per hop to 90 
 --> mtr -c 90 amazon.com 

Use bzip2 to compress video.mp4 
 --> bzip2 video.mp4 

Temporarily disable backend_dev 
 --> passwd -l backend_dev 

Kill all child processes named worker 
 --> killall --children worker 

Download a file and mirror a website with backup 
 --> wget --mirror --backup-converted http://example.com/ 

Sync files and preserve ACLs 
 --> rsync -avzA source_dir/ destination_dir/ 

Pause for 1.25 minutes 
 --> sleep 75 

Create a directory called 'lib' in /usr/local 
 --> mkdir /usr/local/lib 

Delete user docker_guest and remove files 
 --> userdel -r docker_guest 

Assign user21 to documents.zip 
 --> chown user21 documents.zip 

Check if variable DEBUG is set during execution 
 --> env DEBUG=true echo $DEBUG 

Find IP addresses in log file 
 --> grep -E '[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+' access.log 

Move to the pane on the right 
 --> Ctrl-b → 

Hide all previous outputs in terminal 
 --> clear 

Restore disk from image file 
 --> dd if=backup.img of=/dev/sdX bs=4M 

Show all processes with more than 100MB memory usage 
 --> ps -eo pid,ppid,cmd,%mem --sort=-%mem | awk '$4 > 10' 

Show open files related to device /dev/sda1 
 --> lsof /dev/sda1 

Make request with form data and filename 
 --> curl -F 'file=@data.txt;filename=newname.txt' http://example.com/upload 

Modify access password of user rachel 
 --> passwd rachel 

Display memory usage in megabytes with wide output, update every 4 seconds, 2 times 
 --> free -m -w -s 4 -c 2 

Include diana in graphics group 
 --> gpasswd -a diana graphics 

Copy all files in /var/log/unattended-upgrades to /backup/unattended-upgrades 
 --> cp /var/log/unattended-upgrades/* /backup/unattended-upgrades/ 

List all services 
 --> sudo systemctl list-units --type=service 

Initialize a FAT file system on /dev/sda2 
 --> mkfs.vfat /dev/sda2 

Display memory usage in bytes with old format, update every 2 seconds, 4 times 
 --> free -b -o -s 2 -c 4 

Change to the /tmp directory and print the current directory path 
 --> cd /tmp && pwd 

List all TCP sockets with SELinux security contexts 
 --> ss -t -a -Z 

Assign IP 192.168.0.10 and netmask 255.255.255.128 to eth1 
 --> sudo ifconfig eth1 192.168.0.10 netmask 255.255.255.128 

Change owner of result.csv to sam 
 --> chown sam result.csv 

Run atop and show only processes with high disk usage 
 --> atop | grep DSK 

Show w command output without header 
 --> w -h 

Set control as owner of router.cfg 
 --> chown control router.cfg 

Extract IPs from login list 
 --> who | awk '{print $5}' 

Create a file called 'sounds' in your home 
 --> touch ~/sounds 

Add tim to monitoring group 
 --> gpasswd -a tim monitoring 

Display disk usage in blocks of 1M 
 --> du -B 1M 

Run top and show only processes in S (sleeping) state 
 --> top | grep ' S ' 

Set a device to managed mode 
 --> nmcli device set eth0 managed yes 

Inspect the disk structure of /dev/vdg 
 --> fdisk -l /dev/vdg 

Find all readme files in /opt using case-insensitive regex 
 --> find /opt -iregex ".*/readme.*" 

Show logs in pretty JSON format 
 --> journalctl -o json-pretty 

Restart NetworkManager 
 --> service NetworkManager restart 

Disable promiscuous mode on an interface 
 --> sudo ifconfig eth0 -promisc 

Block login credentials for consultant 
 --> passwd -l consultant 

Delete user integration_test from the system 
 --> userdel integration_test 

Rename 'index.html' to 'index.bak' in /var/www/html 
 --> mv /var/www/html/index.html /var/www/html/index.bak 

Start tail on log file in background 
 --> nohup tail -f /var/log/syslog & 

Rename interns2024 to interns 
 --> groupmod -n interns interns2024 

Run htop and hide userland threads 
 --> htop --no-userland-threads 

Show kernel messages with unescaped output 
 --> dmesg --noescape 

Form python_dev group 
 --> groupadd python_dev 

Format /dev/sdg5 as ext3 
 --> mkfs.ext3 /dev/sdg5 

Upload file via POST multipart 
 --> curl -F 'file=@document.pdf' http://example.com/upload 

Observe CPU frequency scaling 
 --> watch 'cat /proc/cpuinfo | grep MHz' 

Add current user to docker group 
 --> sudo usermod -aG docker $USER 

Connect with exit on forward failure 
 --> ssh -o ExitOnForwardFailure=yes user@hostname 

Display cron execution logs 
 --> watch 'grep CRON /var/log/syslog' 

Include user1 in accounts group 
 --> gpasswd -a user1 accounts 

Run atop and show only processes with PID 1234 
 --> atop -p 1234 

Show disk usage for all filesystems, sorted by usage percentage 
 --> df -h | sort -k 5 -h 

Display memory usage in kilobytes with detailed stats, update every 10 seconds, 4 times 
 --> free -k -l -s 10 -c 4 

Create a directory called 'temp' in /home/alice 
 --> mkdir /home/alice/temp 

Add a connection with a specific IPv4 DHCP send hostname 
 --> nmcli connection add type ethernet con-name "My Ethernet" ifname eth0 ipv4.dhcp-send-hostname yes 

Remove localbot 
 --> userdel localbot 

List all available network interfaces 
 --> ifconfig -a 

Lock frontend_dev's password 
 --> passwd -l frontend_dev 

Query the A record for github.com and display output with timestamp 
 --> date; host github.com 

Traceroute to example.com setting type of service 16 
 --> traceroute -t 16 example.com 

Compress the android.apk using bzip2 
 --> bzip2 android.apk 

Change to a directory called 'work' in your home 
 --> cd ~/work 

Set bob as the owner for /var/log/syslog 
 --> chown bob /var/log/syslog 

Display all system information except kernel name and operating system 
 --> uname -a 

Schedule ping to run every hour 
 --> crontab -e # 0 * * * * ping -c 4 google.com 

Copy all files in /var/log/fsck to /backup/fsck 
 --> cp /var/log/fsck/* /backup/fsck/ 

Find 'ssh' in service logs 
 --> grep 'ssh' /var/log/messages 

Alias to edit .zshrc 
 --> alias zshrc='nano ~/.zshrc' 

Show UDP connections with PID and program name 
 --> sudo netstat -up 

Show logs in short format 
 --> journalctl -o short 

Run Go app in background 
 --> nohup ./go_app & 

Add rishi to support_engineers group 
 --> gpasswd -a rishi support_engineers 

Wait for all background processes in loop 
 --> for i in {1..3}; do sleep $i & done; wait 

Remove deepak from backend group 
 --> gpasswd -d deepak backend 

Find the hosts file in /etc 
 --> find /etc -name "hosts" 

Open file and set smartindent 
 --> vim -c 'set smartindent' file.txt 

Show all interfaces with their dropped packet statistics 
 --> ifconfig -a | grep dropped 

Get UUID from /dev/sdi5 
 --> blkid /dev/sdi5 

Wait for a short duration 
 --> sleep 2 

List all TCP sockets for port 80 
 --> ss -nt sport = :80 

Compress the changelog file 
 --> gzip changelog 

Assign outreach team to invites.doc 
 --> chgrp outreach invites.doc 

Set database user to own mysql.cnf 
 --> chown dbuser mysql.cnf 

Print only lines 3 to 7 of data.txt 
 --> sed -n '3,7p' data.txt 

Edit sudoers file safely 
 --> sudo visudo 

Find a file with the name resume.docx 
 --> locate resume.docx 

Run backup with niceness +17 quietly 
 --> nice -n 17 -q ./backup.sh 

Set full permissions for user and none for others 
 --> chmod 700 secure.sh 

Change to the /var/log/messages directory 
 --> cd /var/log/messages 

Display pip installation history 
 --> history | grep 'pip install' 

Display disk usage summary for each subdirectory in /sbin 
 --> du -h --max-depth=1 /sbin 

Open file and enable ruler 
 --> vim -c 'set ruler' file.txt 

Download a file and mirror a website with output file, document, directory, quiet, and debug 
 --> wget --mirror --output-file=log.txt --output-document=output.html --directory-prefix=/tmp --quiet --debug http://example.com/ 

Create NTFS file system on /dev/sdb7 
 --> mkfs.ntfs /dev/sdb7 

Traceroute to github.com 
 --> traceroute github.com 

Send input to specific pane 
 --> tmux send-keys -t 0.1 'uptime' C-m 

Query A record for google.com and set +nottl 
 --> dig google.com +nottl 

Assign logs group to access.log 
 --> chgrp logs access.log 

Remove output from screen 
 --> clear 

Print the previous working directory. 
 --> echo $OLDPWD 

Delete all files in /var/log older than 7 days 
 --> find /var/log -type f -mtime +7 -exec rm {} \; 

Connect with specific host key algorithms 
 --> ssh -o HostKeyAlgorithms=ssh-rsa user@hostname 

Show logs since yesterday 
 --> journalctl --since yesterday 

Download a file and print server response 
 --> wget -S http://example.com/file.zip 

Give only read access to everyone on readme.md 
 --> chmod a=r readme.md 

Display memory usage in bytes, update every 2 seconds indefinitely 
 --> free -b -s 2 

Add newuser to ftp and ssh groups 
 --> usermod -aG ftp,ssh newuser 

View MAC address 
 --> cat /sys/class/net/eth0/address 

Create a file called 'log.txt' and set its timestamp to 7:00 AM today 
 --> touch -t $(date +%Y%m%d)0700 log.txt 

Check blkid for partition /dev/sdh8 
 --> blkid /dev/sdh8 

Track SSH login attempts 
 --> watch 'grep sshd /var/log/auth.log' 

Rename support to tech_support 
 --> groupmod -n tech_support support 

Edit a cron job file directly 
 --> sudo nano /var/spool/cron/crontabs/username 

List all TCP sockets in the CLOSED state 
 --> ss -t state closed 

Display all system information except kernel name and processor type 
 --> uname -arvmoipn 

Add devops user to deploy group 
 --> gpasswd -a devops deploy 

Enable bluetooth service 
 --> systemctl enable bluetooth 

Sleep for 2.2 minutes 
 --> sleep 132 

Show logs for multiple units (e.g., nginx and mysql) 
 --> journalctl -u nginx -u mysql 

Add sales as a new group 
 --> groupadd sales 

Check terminal activity 
 --> who 

Show logs for a specific message ID 
 --> journalctl MESSAGE_ID=fc2e22bc6ee647b6b90729ab34a250b1 

Run a python script with sudo 
 --> sudo python3 script.py 

Find idle users 
 --> w | awk '$5 ~ /[0-9]+/ {print $1, $5}' 

Create a zip archive for deployment.sh and config.env 
 --> zip deploy.zip deployment.sh config.env 

Open file and set tabstop=4 
 --> vim -c 'set tabstop=4' file.txt 

Check status of a failing service 'failtest' 
 --> service failtest status 

Filter all chmod commands 
 --> history | grep chmod 

Make script executable for cron job 
 --> chmod +x script.sh 

Generate 16 random bytes 
 --> cat /dev/urandom | head -c 16 

Change to the directory /usr/share/man 
 --> cd /usr/share/man 

Kill by name with limited privilege escalation 
 --> sudo killall mydaemon 

Query A record for google.com with search domain example.com 
 --> dig google.com +search +domain=example.com 

Become support_user 
 --> su support_user 

Create a directory called 'icons' in your home 
 --> mkdir ~/icons 

Run atop and display only network activity 
 --> atop -N 

Go up one directory level 
 --> cd .. 

Display memory usage in human-readable format with wide output, update every 25 seconds, 7 times 
 --> free -h -w -s 25 -c 7 

Count lines in all files in /opt 
 --> find /opt -type f -print | xargs wc -l 

Mount vfat USB drive with umask 
 --> mount -t vfat -o umask=000 /dev/sdy1 /mnt 

Follow Apache access logs 
 --> tail -f /var/log/apache2/access.log 

Find 'sudo' command usage in history 
 --> grep 'sudo' ~/.bash_history 

Remove beta_tester 
 --> userdel beta_tester 

Delete mike from the test group 
 --> gpasswd -d mike test 

Use su to switch to analytics 
 --> su analytics 

Run mtr to 8.8.8.8 and set the number of pings per hop to 5 
 --> mtr -c 5 8.8.8.8 

Launch fdisk CLI for /dev/sdo 
 --> fdisk /dev/sdo 

Upload multiple files 
 --> curl -F 'file1=@file1.txt' -F 'file2=@file2.txt' http://example.com/upload 

Change alpha_users to early_users 
 --> groupmod -n early_users alpha_users 

Switch to infra team account 
 --> su infra 

Traceroute to 8.8.8.8 using ICMP echo requests and max TTL 30 
 --> traceroute -I -m 30 8.8.8.8 

Display machine hardware name and operating system 
 --> uname -mo 

Reactivate automation_bot account 
 --> passwd -u automation_bot 

List all sockets for source IP range 10.0.0.0/8 
 --> ss src 10.0.0.0/8 

Move 'report.pdf' to the Documents folder 
 --> mv report.pdf ~/Documents/ 

List the contents of the current directory, using color to distinguish file types 
 --> ls --color=auto 

Copy all files in /var/log/wtmp to /backup/wtmp 
 --> cp /var/log/wtmp/* /backup/wtmp/ 

Assign user tony to releases group 
 --> gpasswd -a tony releases 

Download using HTTP POST 
 --> wget --post-data='name=value' http://example.com/form 

List just the directories inside /usr/local 
 --> ls -d /usr/local/*/ 

Run mtr to github.com and set interval to 0.75 seconds 
 --> mtr -i 0.75 github.com 

Make fat32 partition covering entire disk /dev/sdf 
 --> parted /dev/sdf mkpart primary fat32 0% 100% 

Display memory usage in bytes, detailed low and high memory stats 
 --> free -b -l 

Mount remote NFS with version 3 
 --> mount -t nfs -o nfsvers=3 192.168.1.100:/data /mnt/nfs 

Print total characters in file.txt 
 --> awk '{c += length($0)} END {print c}' file.txt 

Query the TLSA record for github.com 
 --> nslookup -type=TLSA github.com 

Get type of /dev/sdf7 
 --> blkid /dev/sdf7 

Make kate the owner of thesis.tex 
 --> chown kate thesis.tex 

Start less at EOF 
 --> less +G file.txt 

Change comment of user nina to 'Senior Analyst' 
 --> usermod -c 'Senior Analyst' nina 

Find all files in /home but skip .svn directories 
 --> find /home -path "*/.svn" -prune -o -type f -print 

Display memory usage with wide output (separate buffers and cache) 
 --> free -w 

Make user logger with group loggroup 
 --> useradd -g loggroup logger 

Compress tracklist.txt using gzip 
 --> gzip tracklist.txt 

Move all files in /var/log/audit to /backup/audit 
 --> mv /var/log/audit/* /backup/audit/ 

Create multiple directories at once: 'a', 'b', and 'c' 
 --> mkdir a b c 

Run log parsing with screen 
 --> screen -S parser python parse_logs.py 

Set sara as owner for personal.doc 
 --> chown sara personal.doc 

Open file in vim 
 --> vim file.txt 

Show only interfaces with IPv4 addresses 
 --> ifconfig | grep inet 

Set environment and run as different user 
 --> sudo -u user env VAR=value command 

Compress the script.sh file 
 --> gzip script.sh 

Find files in /home not in .cache directories 
 --> find /home -not -path "*/.cache/*" 

Display logged messages 
 --> watch 'tail -n 20 /var/log/messages' 

View interface speed 
 --> cat /sys/class/net/eth0/speed 

Display memory usage in gigabytes, update every 10 seconds indefinitely 
 --> free -g -s 10 

Rename 'clamav.log' to 'clamav.log.old' in /var/log/clamav 
 --> mv /var/log/clamav/clamav.log /var/log/clamav/clamav.log.old 

Show processes with custom output: PID, PPID, user, cmd 
 --> ps -eo pid,ppid,user,cmd 

Show UDP connections only 
 --> lsof -i udp 

Run mtr to 8.8.8.8 in interactive mode 
 --> mtr 8.8.8.8 

Get clean console for testing 
 --> clear 

Assign an IPv6 address to an interface 
 --> sudo ifconfig eth0 inet6 add 2001:db8::1/64 

Monitor system with screen and htop 
 --> screen -S sysmon htop 

Query A record for google.com and set port 1053 
 --> dig google.com -p 1053 

Find files in /home not ending with .bak 
 --> find /home -not -name "*.bak" 

Query A record for google.com and set +besteffort 
 --> dig google.com +besteffort 

Switch to the /usr/local directory 
 --> cd /usr/local 

Count lines via wc 
 --> cat file.txt | wc -l 

Show all connections for a specific address family (e.g., inet6) 
 --> netstat -f inet6 

Alias to get external IP 
 --> alias myip='curl ifconfig.me' 

Run the previous command starting with 'git' 
 --> !git 

Query the MX record for google.com 
 --> nslookup -query=MX google.com 

Query A record for yahoo.com using DNS server 9.9.9.9 
 --> dig @9.9.9.9 yahoo.com 

Query the A record for google.com and use short output 
 --> host google.com | awk '/has address/ {print $4}' 

Alias python to python3 
 --> alias python='python3' 

Display disk usage in human-readable format for files larger than 500M 
 --> du -h --threshold=500M 

Change niceness of gvfs daemon 
 --> sudo renice +8 -p $(pgrep gvfsd) 

Set up a cron job from file 
 --> crontab < cronjobs.txt 

Query A record for google.com and set +noadditional 
 --> dig google.com +noadditional 

Unmount encrypted volume mount 
 --> umount /mnt/enc 

Display only the total disk usage for /var 
 --> du -sh /var 

Include user rohit in ai_team group 
 --> gpasswd -a rohit ai_team 

Change to the /var/opt directory 
 --> cd /var/opt 

Create a directory called 'test' in /home/frank 
 --> mkdir /home/frank/test 

Run mtr to example.com and set interval to 10 seconds 
 --> mtr -i 10 example.com 

Ping yahoo.com and set a custom source IP 
 --> ping -I 10.0.0.2 yahoo.com 

Query the A record for yahoo.com 
 --> host yahoo.com 

Display memory usage in megabytes, update every 1 second, 10 times 
 --> free -m -s 1 -c 10 

List all sockets and filter for FIN-WAIT-1 state 
 --> ss state fin-wait-1 

Change community group to members.csv 
 --> chgrp community members.csv 

Look for 'Failed login' in auth.log 
 --> grep 'Failed login' /var/log/auth.log 

Make a GET request and follow redirects 
 --> curl -L http://example.com 

Find files in /tmp not newer than /tmp/marker 
 --> find /tmp -not -newer /tmp/marker 

Display memory usage in bytes 
 --> free -b 

Open file and start diff mode between two files 
 --> vim -d file1.txt file2.txt 

Show all interfaces with protocol family inet 
 --> ifconfig -a inet 

Display disk usage in blocks of 4K 
 --> du -B 4K 

Download a file and print headers only 
 --> wget --server-response --spider http://example.com/file.zip 

Delete buildserver 
 --> userdel buildserver 

Connect with quiet mode 
 --> ssh -q user@hostname 

Install openssh-server 
 --> sudo apt install openssh-server 

Remove read/write access from others 
 --> chmod o-rw shared.doc 

Connect with maximum verbose output 
 --> ssh -vvv user@hostname 

Change to the parent directory, then to 'bin' 
 --> cd ../bin 

Run atop and show only the top 5 memory-consuming processes 
 --> atop | grep MEM | head -n 5 

Display memory usage in megabytes with wide output, update every 15 seconds, 5 times 
 --> free -m -w -s 15 -c 5 

Print empty environment 
 --> env -i 

Re-enable login for new_admin 
 --> passwd -u new_admin 

Use mount to list all mounted filesystems 
 --> mount 

Export custom variable and print env 
 --> env MYVAR=hello env 

Start fdisk on disk /dev/sdc 
 --> fdisk /dev/sdc 

Delete ftp_user and its files 
 --> userdel -r ftp_user 

Background a job and show exit code after wait 
 --> myjob & wait; echo $? 

Send Ctrl+D to session 
 --> screen -S shell -X stuff '^D' 

Add a bridge connection 
 --> nmcli connection add type bridge con-name MyBridge ifname br0 

Query the DS record for example.com 
 --> host -t DS example.com 

Unmount a device 
 --> sudo umount /mnt 

Show only filenames with 'kernel' in content 
 --> grep -l 'kernel' *.log 

Find files used by port 53 
 --> lsof -i :53 

Connect and verify host key fingerprint 
 --> ssh -o FingerprintHash=sha256 user@hostname 

Set HOME to /tmp while running ls 
 --> env HOME=/tmp ls 

Find zero-byte files in /tmp 
 --> find /tmp -size 0 

Query the SRV record for _sip._tcp.google.com 
 --> host -t SRV _sip._tcp.google.com 

Pipe last lines to more 
 --> tail file.txt | more 

Display memory usage in kilobytes, update every 15 seconds indefinitely 
 --> free -k -s 15 

Kill by CPU usage 
 --> ps aux | sort -rk 3 | head -n 5 | awk '{print $2}'| xargs kill 

Create a directory called 'temp' in /home/charlie 
 --> mkdir /home/charlie/temp 

Rename 'cron' to 'cron.old' in /var/log 
 --> mv /var/log/cron /var/log/cron.old 

Unlock access for frontend_dev 
 --> passwd -u frontend_dev 

Lock access for tempuser 
 --> usermod -L tempuser 

Change to a directory using a relative path, going up one level and into 'bin' 
 --> cd ../bin 

Move all files in /var/log/dpkg to /backup/dpkg 
 --> mv /var/log/dpkg/* /backup/dpkg/ 

Add a team connection 
 --> nmcli connection add type team con-name MyTeam ifname team0 config '{"runner": {"name": "activebackup"}}' 

Show last 5 lines of all files in /opt 
 --> find /opt -type f -exec tail -n 5 {} \; 

Show disk usage for all filesystems, display only the filesystem and total inodes 
 --> df -h --output=source,itotal 

Display memory usage in human-readable format with wide output and total, update every 4 seconds, 4 times 
 --> free -h -w -t -s 4 -c 4 

Run mtr to 8.8.8.8 with 50 cycles in report mode 
 --> mtr -r -c 50 8.8.8.8 

Rename training_team to team_training 
 --> groupmod -n team_training training_team 

Run CPU hog with minimal impact 
 --> nice -n 19 sha256sum * 

Display user login terminals and commands 
 --> w | awk '{print $2, $8}' 

Allow everyone to execute install.sh 
 --> chmod a+x install.sh 

Move all files in the current directory to /tmp and keep ownership 
 --> mv --preserve=ownership * /tmp/ 

Show all processes and grep for 'python' 
 --> ps aux | grep python 

Remove yuki account 
 --> userdel yuki 

Show partition table of /dev/sda 
 --> parted /dev/sda print 

Dry run auto-remove 
 --> sudo apt autoremove --dry-run 

Remove group read access from file.csv 
 --> chmod g-r file.csv 

Pause for 111 seconds 
 --> sleep 111 

Run mtr to 8.8.8.8 and set maximum TTL to 64 
 --> mtr -m 64 8.8.8.8 

Copy file and remove carriage returns 
 --> dd if=input.txt of=output.txt conv=notrunc,unblock 

Sync files and specify a custom daemon motd file 
 --> rsync -avz --daemon --motd-file=/etc/rsyncd.motd source_dir/ destination_dir/ 

Remove devintern from scratch group 
 --> gpasswd -d devintern scratch 

Add a new Ethernet connection with static IP 
 --> nmcli connection add type ethernet con-name "Static Ethernet" ifname eth0 ip4 192.168.1.100/24 gw4 192.168.1.1 

Reload the postfix service 
 --> service postfix reload 

Format output as CSV 
 --> awk '{print $1","$2","$3}' data.txt 

Run mtr to 8.8.8.8 with UDP, 50 cycles, interval 0.75s, and output in CSV format 
 --> mtr --udp --csv -c 50 -i 0.75 8.8.8.8 

Show detailed file info, sorted by size in reverse (smallest first) 
 --> ls -lSr 

Show logs in verbose format 
 --> journalctl -o verbose 

Remove a file called 'notes.txt' in your home directory 
 --> rm ~/notes.txt 

Change to the directory /home/user/Documents using an absolute path 
 --> cd /home/user/Documents 

Find cron executable path 
 --> which cron 

Download a file and show progress bar 
 --> wget --show-progress http://example.com/file.zip 

Launch parted in interactive mode for /dev/sde 
 --> parted /dev/sde 

Sync files and specify a custom daemon secrets file 
 --> rsync -avz --daemon --secrets-file=/etc/rsyncd.secrets source_dir/ destination_dir/ 

Create a directory called 'test' in /home/harry 
 --> mkdir /home/harry/test 

Stop the mysql service 
 --> systemctl stop mysql 

Reinstall cron 
 --> sudo apt-get install --reinstall cron 

Temporarily disable password for system_analyst 
 --> passwd -l system_analyst 

Search for startup scripts 
 --> locate rc.local 

List filesystems on partitions 
 --> blkid 

Traceroute to yahoo.com 
 --> traceroute yahoo.com 

Keep watching firewall rules 
 --> watch sudo iptables -L 

Run AWS CLI with niceness +4 
 --> nice -n 4 aws s3 sync . s3://bucket 

Disable a user from using cron 
 --> echo 'username' >> /etc/cron.deny 

Sync files using an exclude file 
 --> rsync -avz --exclude-from=exclude.txt source_dir/ destination_dir/ 

Find files in /var larger than 1MB 
 --> find /var -type f -a -size +1M 

Block tempaccount from using password 
 --> passwd -l tempaccount 

Create a no-login system user named uploader 
 --> useradd -r -s /usr/sbin/nologin uploader 

Create msdos label and add 5GB partition on /dev/sdv 
 --> parted /dev/sdv mklabel msdos mkpart primary ext4 1MiB 5GiB 

Show last 10 lines 
 --> tail file.txt 

Copy all files in the current directory to /tmp and keep xattr 
 --> cp --preserve=xattr * /tmp/ 

Display memory usage in bytes with detailed stats and total, update every 8 seconds, 8 times 
 --> free -b -l -t -s 8 -c 8 

Switch to the next window in tmux 
 --> Ctrl-b n 

Kill all tmux sessions 
 --> killall tmux 

Start Python script with log 
 --> nohup python script.py > out.log 2>&1 & 

Assign deployment group to k8s.yaml 
 --> chgrp deployment k8s.yaml 

Remove vm_user from the system 
 --> userdel vm_user 

Connect through SOCKS proxy 
 --> ssh -o ProxyCommand='nc -X 5 -x proxy:1080 %h %p' user@hostname 

Show all interfaces with their multicast group memberships 
 --> ifconfig -a | grep MULTICAST 

Show a concise summary of all interfaces 
 --> ifconfig -s 

Start interactive bash in screen 
 --> screen -S shell bash 

Display memory usage in mebibytes with SI units 
 --> free --mebi --si 

Set up credentials for designer3 
 --> passwd designer3 

Copy a file 'user.log' to /var/log 
 --> cp user.log /var/log/ 

Query the PTR record for 1.1.1.1 
 --> host -t PTR 1.1.1.1 

Run top and display only processes from PID 1234 
 --> top -p 1234 

Run TensorFlow training in screen 
 --> screen -S tf python train.py 

Move all files in the current directory to /tmp and do not overwrite existing files 
 --> mv -n * /tmp/ 

Print current PID 
 --> echo $$ 

List all files except for '.' and '..' 
 --> ls -A 

Check what users are doing right now 
 --> w 

Display all system information except kernel name and kernel version 
 --> uname -armpi 

Create a file called 'file.txt' and set its timestamp to 00:00 on Jan 1, 2025 
 --> touch -t 202501010000 file.txt 

Check for keyword 'sudo' in sudoers 
 --> grep 'sudo' /etc/sudoers 

Kill processes by command basename 
 --> pkill -x tmux 

Forcefully unmount /mnt/data 
 --> umount -f /mnt/data 

Delete expired_user completely 
 --> userdel -r expired_user 

Create swap file 
 --> sudo fallocate -l 1G /swapfile 

Run mtr to amazon.com and set the number of pings per hop to 25 
 --> mtr -c 25 amazon.com 

Display all system information except kernel name and processor type 
 --> uname -a 

Ping github.com with 8192 byte packets and 1 time 
 --> ping -s 8192 -c 1 github.com 

Show version information for netstat 
 --> netstat -V 

Delete johnny user 
 --> userdel johnny 

Display all system information except kernel name and network node hostname 
 --> uname -a 

Follow file with process ID display 
 --> tail -f --pid=1234 file.log 

Login to testuser account with su 
 --> su testuser 

Remove an IPv6 address from an interface 
 --> sudo ifconfig eth0 inet6 del 2001:db8::1/64 

Send SIGTTIN to PID 3031 
 --> kill -TTIN 3031 

Copy a file 'news.log' to /var/log/news 
 --> cp news.log /var/log/news/ 

Traceroute to google.com with destination port 80 and 3 probes per hop 
 --> traceroute -p 80 -q 3 google.com 

Login to root shell 
 --> su - 

Display disk usage summary for each subdirectory in /tmp 
 --> du -h --max-depth=1 /tmp 

Display memory usage in kilobytes, detailed low and high memory stats 
 --> free -k -l 

Remove all files in /var/spool/cron 
 --> rm /var/spool/cron/* 

Set permissions to 755 for script.py 
 --> chmod 755 script.py 

Delete an empty directory called 'build' in the current directory 
 --> rmdir build 

Open file and record session 
 --> vim -S session.vim file.txt 

List users who are using bash 
 --> w | grep bash 

Run cron job with custom PATH 
 --> crontab -e # PATH=/custom/bin:$PATH 

Display memory usage in gigabytes with old format and detailed stats, update every 8 seconds, 8 times 
 --> free -g -o -l -s 8 -c 8 

Make security group for encryption.key 
 --> chgrp security encryption.key 

Query the ANY record for github.com 
 --> nslookup -query=ANY github.com 

Display total memory (RAM + swap) in human-readable format 
 --> free -h -t 

Reconfigure timezone 
 --> sudo dpkg-reconfigure tzdata 

Run rsync with niceness +3 
 --> nice -n 3 rsync -av src/ dest/ 

Add finance group 
 --> groupadd finance 

Create a directory called 'temp' in /home/dave 
 --> mkdir /home/dave/temp 

Delete a file called 'logfile' in /var/log 
 --> rm /var/log/logfile 

Ping google.com with 64 byte packets and 25 times 
 --> ping -s 64 -c 25 google.com 

Remove ai_lab group 
 --> groupdel ai_lab 

Query the A record for facebook.com using DNS server 208.67.220.220 
 --> host facebook.com 208.67.220.220 

Add a connection with a specific IPv4 DHCP hostname source 
 --> nmcli connection add type ethernet con-name "My Ethernet" ifname eth0 ipv4.dhcp-hostname-source connection-id 

Install .deb file 
 --> sudo apt install ./package.deb 

Delete an empty directory called 'logs' in /var/tmp 
 --> rmdir /var/tmp/logs 

Show TCP connections only 
 --> lsof -i tcp 

Ping github.com with interval of 0.2 seconds 
 --> ping -i 0.2 github.com 

Use gzip for the binary file program.bin 
 --> gzip program.bin 

Query A record for google.com with edns=0 
 --> dig google.com +edns=0 

Wipe everything shown on terminal 
 --> clear 

Add user harry to ftp group 
 --> gpasswd -a harry ftp 

Copy all files in /var/tmp to /backup/tmp 
 --> cp /var/tmp/* /backup/tmp/ 

Remove trailing slashes 
 --> sed 's/\/$//' paths.txt 

Reattach latest screen if only one 
 --> screen -r 

Stop the apache2 service 
 --> service apache2 stop 

Add cloud_admins group 
 --> groupadd cloud_admins 

Delete database_admin and home folder 
 --> userdel -r database_admin 

Get only SHELL environment var 
 --> env | grep SHELL 

Recursively list the contents of the parent directory 
 --> ls -R .. 

Change to the /var/log/aptitude directory 
 --> cd /var/log/aptitude 

Query the PTR record for 208.67.222.222 
 --> host -t PTR 208.67.222.222 

Create a file called 'access.log' in /var/log 
 --> touch /var/log/access.log 

Switch to operator with login shell 
 --> su - operator 

Query the AAAA (IPv6) record for github.com 
 --> nslookup -query=AAAA github.com 

List all logins from host 10.0.0.2 
 --> who | grep 10.0.0.2 

Display detailed layout of /dev/sdl 
 --> parted /dev/sdl print 

Kill named process with verbose output 
 --> killall -v myserver 

Connect with specific MAC algorithm 
 --> ssh -m hmac-sha2-256 user@hostname 

Traceroute to yahoo.com using only IPv4 and max TTL 35 
 --> traceroute -4 -m 35 yahoo.com 

Remove execute permission from owner of file.sh 
 --> chmod u-x file.sh 

Create a one-minute cron job 
 --> echo '* * * * * /script.sh' | crontab - 

Display memory usage with total, update every 5 seconds indefinitely 
 --> free -t -s 5 

Run mtr to 8.8.8.8 with UDP, 50 cycles, interval 5s, and output in CSV format 
 --> mtr --udp --csv -c 50 -i 5 8.8.8.8 

Move all files in the /srv directory to /backup/srv 
 --> mv /srv/* /backup/srv/ 

Sync files and specify a custom daemon password file 
 --> rsync -avz --password-file=/path/to/password.txt rsync://user@host/module/path destination_dir/ 

Wait 0.75 seconds 
 --> sleep 0.75 

Display a detailed, human-readable list of files in the root directory 
 --> ls -lh / 

Display memory usage in tebibytes 
 --> free --tebi 

Change primary group of smith to developers 
 --> usermod -g developers smith 

Wait after background file deletion 
 --> rm -rf temp/ & wait 

View current partitions on /dev/sdi 
 --> fdisk -l /dev/sdi 

Show all processes and pipe to less for scrolling 
 --> ps aux | less 

Kill all instances of mousepad 
 --> killall mousepad 

Change niceness of monitoring agent 
 --> sudo renice +5 -p $(pgrep prometheus) 

Run top and show only processes using more than 10% CPU 
 --> top -b -n 1 | awk '$9 > 10' 

Traceroute to yahoo.com showing version info 
 --> traceroute -V yahoo.com 

Change to the /usr/local/bin directory 
 --> cd /usr/local/bin 

Query the A record for google.com and display output in color 
 --> host google.com | lolcat 

Follow file in real time 
 --> tail -f file.log 

Show last 20 journal entries 
 --> journalctl -n 20 

Show the target of all symbolic links in /data 
 --> find /data -type l -exec readlink {} \; 

Show last lines of XML file 
 --> xmllint --format file.xml | tail 

Show SELinux context for all processes 
 --> ps axZ 

Disable cron from starting on boot 
 --> sudo systemctl disable cron 

Move all files in the current directory to /tmp and keep everything 
 --> mv --preserve=all * /tmp/ 

Make a team called bughunters 
 --> groupadd bughunters 

Sync files excluding multiple patterns 
 --> rsync -avz --exclude='*.log' --exclude='*.tmp' source_dir/ destination_dir/ 

Kill all processes owned by user alice 
 --> killall -u alice firefox 

Remove all files in /var/log/postgresql 
 --> rm /var/log/postgresql/* 

Check terminal usage and commands being run 
 --> w 

Mount ext2 partition to /mnt/ext2 
 --> mount -t ext2 /dev/sdo1 /mnt/ext2 

Change simulation_users to sim_team 
 --> groupmod -n sim_team simulation_users 

Remove gautham user 
 --> userdel gautham 

Show all interfaces with protocol family tcp 
 --> ifconfig -a tcp 

Move all files in the current directory to /tmp and keep timestamps 
 --> mv --preserve=timestamps * /tmp/ 

Display disk usage for all files and directories, using block size of 1Y 
 --> du -B 1Y 

Delete sid from devops group 
 --> gpasswd -d sid devops 

Find files in /tmp at the top level only 
 --> find /tmp -maxdepth 1 -type f 

Query the A record for github.com and append output to file 
 --> host github.com >> github_dns.txt 

Make helen the owner of audio.wav 
 --> chown helen audio.wav 

Disable password-based access for harry 
 --> passwd -l harry 

Switch to devops user 
 --> su devops 

Run pacman update with niceness +5 
 --> sudo nice -n 5 pacman -Syu 

Run with higher priority (-5) 
 --> sudo nice -n -5 build.sh 

Show disk usage for all filesystems, display only the filesystem, type, and usage percentage 
 --> df -h --output=source,fstype,pcent 

Rename 'syslog' to 'syslog.1' in /var/log 
 --> mv /var/log/syslog /var/log/syslog.1 

Compress source.cpp using bzip2 
 --> bzip2 source.cpp 

Add execute permission for the owner to run.py 
 --> chmod u+x run.py 

Show all connections and filter for a specific port range 
 --> netstat -an | grep ':6000-7000' 

Make a request and limit download speed 
 --> curl --limit-rate 100k http://example.com/largefile.zip 

Stop the bluetooth service 
 --> service bluetooth stop 

Remove an empty directory called 'daily' in /var/log/backup 
 --> rmdir /var/log/backup/daily 

Query the A record for yahoo.com and set search domain to . 
 --> nslookup yahoo.com . 

Move all files in the current directory to /tmp and prompt before overwrite 
 --> mv -i * /tmp/ 

Add user rootbot to monitoring and logs groups 
 --> usermod -aG monitoring,logs rootbot 

Transfer file using SCP preserving attributes 
 --> scp -p file.txt user@hostname:/remote/path/ 

Launch fdisk terminal for USB drive 
 --> fdisk /dev/sdb 

Make ext3 filesystem on /dev/sdb1 
 --> mkfs.ext3 /dev/sdb1 

Start vim with GUI disabled 
 --> vim -X file.txt 

Print the user activity list 
 --> w 

Create a WiFi hotspot on a specific interface 
 --> nmcli device wifi hotspot ifname wlan0 ssid MyHotspot password "mypassword" 

Compress vm_state.dmp using bzip2 
 --> bzip2 vm_state.dmp 

Switch to dockeradmin 
 --> su dockeradmin 

Stop the avahi-daemon 
 --> service avahi-daemon stop 

Kill cron service 
 --> sudo pkill cron 

Copy all files in the current directory to /tmp and keep everything and keep mode 
 --> cp -a --preserve=mode * /tmp/ 

Ping github.com with 1500 byte packets and 7 times 
 --> ping -s 1500 -c 7 github.com 

List only interfaces that are down 
 --> ifconfig -d 

Remove user tom from the admin group 
 --> gpasswd -d tom admin 

Clean old shell logs 
 --> clear 

Run atop and read from a log file 
 --> atop -r atop.log 

Make 'gs' a shortcut for git status 
 --> alias gs='git status' 

Query the A record for google.com 
 --> host google.com 

Rename 'Xorg.failsafe.log' to 'Xorg.failsafe.log.old' in /var/log 
 --> mv /var/log/Xorg.failsafe.log /var/log/Xorg.failsafe.log.old 

Compress all non-gzipped files in /var 
 --> find /var -type f -not -name "*.gz" -exec gzip {} \; 

Print the 2nd and 4th columns 
 --> awk '{print $2, $4}' file.txt 

Mask the telnet.socket 
 --> systemctl mask telnet.socket 

Assign read permission to everyone on changelog.md 
 --> chmod a+r changelog.md 

Remove a file called 'error.log' inside /var/log 
 --> rm /var/log/error.log 

Show logs for a specific process (PID 1234) 
 --> journalctl _PID=1234 

Run data sync with niceness +4 
 --> nice -n 4 rsync -az src dest 

Create a directory called 'projects' in your home 
 --> mkdir ~/projects 

Rename app_reviewers to reviewers_app 
 --> groupmod -n reviewers_app app_reviewers 

Start vim in read-only mode 
 --> vim -R file.txt 

Mount tmpfs of size 1G on /mnt/tmp 
 --> mount -t tmpfs -o size=1G tmpfs /mnt/tmp 

Persist background tar compression 
 --> nohup tar czf backup.tar.gz /data & 

Create a directory called 'temp' in /home/frank 
 --> mkdir /home/frank/temp 

Delete an empty directory called 'old_logs' in your home directory 
 --> rmdir ~/old_logs 

Print only lines that don't start with '#' 
 --> awk '!/^#/' config.txt 

Query the A record for github.com with search domain github.net 
 --> nslookup github.com github.net 

Add user blogwriter with comment 'Writes blog content' 
 --> useradd -c 'Writes blog content' blogwriter 

Show disk usage of journal logs 
 --> journalctl --disk-usage 

Traceroute to google.com using UDP port 53 
 --> traceroute -U google.com 

Reattach screen with partial name 
 --> screen -r myjob 

Change to the directory /usr/share/gnome 
 --> cd /usr/share/gnome 

Display all system information except kernel name and kernel version 
 --> uname -a 

Move all files in /var/log/postgresql to /backup/postgresql 
 --> mv /var/log/postgresql/* /backup/postgresql/ 

Delete backup_archiver 
 --> userdel backup_archiver 

Zip test results and analysis 
 --> zip results.zip test_results.txt analysis.txt 

Copy all files in /mnt/usb to /media/backup 
 --> cp /mnt/usb/* /media/backup/ 

Query the MX record for github.com 
 --> host -t MX github.com 

Find Firefox user data 
 --> locate firefox 

Traceroute to 8.8.8.8 with max TTL 40 and 2 probes per hop 
 --> traceroute -m 40 -q 2 8.8.8.8 

Send SIGSTOP to PID 2627 
 --> kill -STOP 2627 

Use gzip to compress the log_report.log 
 --> gzip log_report.log 

Run mtr to 8.8.8.8 and set maximum TTL to 80 
 --> mtr -m 80 8.8.8.8 

Display memory usage in kilobytes with old format, update every 10 seconds, 4 times 
 --> free -k -o -s 10 -c 4 

Change to the /usr/lib64 directory 
 --> cd /usr/lib64 

Add user testuser with GID 2000 
 --> useradd -g 2000 testuser 

Move to the Desktop directory 
 --> cd Desktop 

Block service_account from login 
 --> passwd -l service_account 

Query A record for google.com and set port 53 
 --> dig google.com -p 53 

Zip the bash files into scripts.zip 
 --> zip scripts.zip *.sh 

Escape all double quotes 
 --> sed 's/"/\"/g' file.txt 

Connect with tunnel device 
 --> ssh -w 0:0 user@hostname 

Install Python dev headers 
 --> sudo apt install python3-dev 

Delete user alice and remove her home directory 
 --> userdel -r alice 

Temporarily lock devops_admin's password 
 --> passwd -l devops_admin 

Display memory usage in human-readable format with all options, update every 14 seconds, 14 times 
 --> free -h -o -l -w -t -s 14 -c 14 

Block webuser from password access 
 --> passwd -l webuser 

Clone a git repo with sudo 
 --> sudo git clone https://github.com/example/repo.git 

Display all system information except kernel name and hardware platform 
 --> uname -arv 

Restart the snapd service 
 --> systemctl restart snapd 

Query A record for google.com and show all sections 
 --> dig google.com +multiline 

Query A record for google.com and set +multiline 
 --> dig google.com +multiline 

Reload the cron daemon 
 --> sudo systemctl reload cron 

Remove backend_team 
 --> groupdel backend_team 

Locate music files 
 --> locate '*.mp3' 

Start with a fresh terminal 
 --> clear 

Locate /var/log files 
 --> locate /var/log 

Show interfaces that are down 
 --> ifconfig -d 

Create a file called 'games' in your home 
 --> touch ~/games 

Log uptime every 30 minutes 
 --> crontab -e # */30 * * * * uptime >> /tmp/uptime.log 

Run top and sort by resident memory size 
 --> top -o RES 

Set password for user engineer3 
 --> passwd engineer3 

Make user admin with UID 1050 
 --> useradd -u 1050 admin 

Traceroute to github.com with no hostname resolution and max TTL 35 
 --> traceroute -n -m 35 github.com 

View with less 
 --> cat file.txt | less 

Change authentication for rootadmin 
 --> passwd rootadmin 

Create a file called 'tmp' in your home 
 --> touch ~/tmp 

Get full details of /dev/sda6 
 --> blkid /dev/sda6 

Query the NAPTR record for github.com 
 --> host -t NAPTR github.com 

Ping google.com and flood ping (root required) 
 --> ping -f google.com 

Assign design lead ownership of logo.svg 
 --> chown designer logo.svg 

Allow unauthenticated repos 
 --> sudo apt update --allow-unauthenticated 

Delete dev_batch_2022 
 --> groupdel dev_batch_2022 

List all sockets for a specific process (e.g., PID 1234) 
 --> ss -p | grep 'pid=1234,' 

Traceroute to example.com with wait time 2 seconds 
 --> traceroute -w 2 example.com 

Print command history with time included 
 --> HISTTIMEFORMAT="%F %T " history 

Display memory usage in gigabytes with detailed stats, update every 20 seconds, 6 times 
 --> free -g -l -s 20 -c 6 

Remove manager user 
 --> userdel manager 

Ping yahoo.com and set packet size to 2000 bytes 
 --> ping -s 2000 yahoo.com 

Enable backend_user again 
 --> passwd -u backend_user 

Zip every PNG in the folder images 
 --> zip images.zip images/*.png 

Change to the directory /usr/share/zoneinfo 
 --> cd /usr/share/zoneinfo 

Move a directory 'music' to /mnt/usb 
 --> mv music /mnt/usb/ 

Store the present working directory in a variable called `dir` and print it. 
 --> dir=$(pwd); echo $dir 

Find files in /data with no valid user 
 --> find /data -nouser 

Copy all files starting with 'test' to /var/tmp 
 --> cp test* /var/tmp/ 

Display memory usage in kilobytes with wide output, update every 10 seconds, 4 times 
 --> free -k -w -s 10 -c 4 

Show logs for a specific systemd cgroup 
 --> journalctl _SYSTEMD_CGROUP=/system.slice/sshd.service 

Remove mail_test_user and their data 
 --> userdel -r mail_test_user 

Start vim with no plugins 
 --> vim -u NONE file.txt 

Display failed services 
 --> systemctl --failed 

Format partition 3 on ssd to xfs 
 --> mkfs.xfs /dev/sdj3 

Block login for ui_designer 
 --> passwd -l ui_designer 

Ping amazon.com with 1 second timeout and 143 times 
 --> ping -W 1 -c 143 amazon.com 

Traceroute to example.com starting with TTL 5 
 --> traceroute -f 5 example.com 

Find all files in /tmp but skip .Trash directories 
 --> find /tmp -path "*/.Trash" -prune -o -type f -print 

Change folder1's owner to user5 
 --> chown user5 folder1 

Find files in /var that are hard links to /etc/passwd 
 --> find /var -samefile /etc/passwd 

Display disk usage in kilobytes for /usr 
 --> du -k /usr 

Create a file called 'emacs' in your home 
 --> touch ~/emacs 

Echo recently modified files in /home 
 --> find /home -type f -mtime -1 -exec echo "Recent: {}" \; 

Remove all files in /var/log/alternatives.log 
 --> rm /var/log/alternatives.log/* 

Remove an empty directory called 'private' in your home 
 --> rmdir ~/private 

Look for authorized_keys 
 --> locate authorized_keys 

Double space every line 
 --> sed G file.txt 

Make a PUT request with data 
 --> curl -X PUT -d 'data' http://example.com/api/resource 

Check the structure of /dev/sda1 
 --> fdisk -l /dev/sda1 

Wait on background sleep 
 --> sleep 5 & wait 

Run htop and show only processes with a specific command name 
 --> htop | grep COMMAND_NAME 

Delete developer1 again 
 --> userdel developer1 

Display all system information except kernel name and network node hostname 
 --> uname -arv 

Keep only lines that do not contain numbers 
 --> sed -n '/[^0-9]/p' file.txt 

Run ls repeatedly to track file changes 
 --> watch ls -l 

Print user and process info together 
 --> w 

Alias for java 
 --> alias jr='java' 

Change niceness of kernel threads 
 --> for pid in $(ps -eo pid,cmd | grep '\[.*\]' | awk '{print $1}'); do sudo renice +15 $pid; done 

Query the ANY record for google.com 
 --> host -t ANY google.com 

Format /dev/sdi6 as ext4 
 --> mkfs.ext4 /dev/sdi6 

Extract first field via cut 
 --> cat file.csv | cut -d',' -f1 

Restore crontab from file 
 --> sudo crontab backup.txt 

Compress olddata.txt with bzip2 
 --> bzip2 olddata.txt 

Enable ARP on ens33 
 --> sudo ifconfig ens33 arp 

Ping 2001:4860:4860::8888 using IPv6 
 --> ping6 2001:4860:4860::8888 

See DNS cache stats every 4s 
 --> watch -n 4 sudo rndc stats 

Check logged-in users every 3 seconds 
 --> watch -n 3 who 

Show logs with priority warning or higher 
 --> journalctl -p warning 

Run top in batch mode, 5 iterations, update every 2 seconds 
 --> top -b -n 5 -d 2 

Add a connection with a specific IPv4 DHCP required options 
 --> nmcli connection add type ethernet con-name "My Ethernet" ifname eth0 ipv4.dhcp-required-options "1 3 6 15" 

Remove all files in /var/log/zypper.log 
 --> rm /var/log/zypper.log/* 

Append standard input to an existing file 
 --> cat >> existing.txt 

Go to the /usr/share directory 
 --> cd /usr/share 

Remove command 123 from history 
 --> history -d 123 

Download a file with a custom header 
 --> wget --header="X-Test: 123" http://example.com/file.zip 

Start the docker service 
 --> service docker start 

Display a detailed list of files, but do not list subdirectories 
 --> ls -ld *  

Change to the directory /usr/local/etc 
 --> cd /usr/local/etc 

Ping facebook.com with 1 second timeout and 43 times 
 --> ping -W 1 -c 43 facebook.com 

Show NetworkManager hostname 
 --> nmcli general hostname 

Find idle users 
 --> w | awk '$5 ~ /[0-9]+/ {print $1, $5}' 

Download a file quietly (no output) 
 --> wget -q http://example.com/file.zip 

Insert timestamp after each line 
 --> sed 's/$/ $(date)/' file.txt 

Query A record for google.com and set +question 
 --> dig google.com +question 

Find all temp files in /tmp using case-insensitive regex 
 --> find /tmp -iregex ".*/temp.*" 

Show kernel messages with error level only 
 --> dmesg --level=err 

Find all files in /var but skip .cache directories 
 --> find /var -path "*/.cache" -prune -o -type f -print 

Show me all directories in my home folder 
 --> ls -d ~/*/ 

Remove all files in the current directory without confirmation 
 --> rm -f * 

Create a file named 'notes.txt' on the Desktop 
 --> touch ~/Desktop/notes.txt 

Run fdisk on new external drive 
 --> fdisk /dev/sdf 

Show progress 
 --> sudo apt autoremove --show-progress 

Display memory usage in gigabytes, update every 30 seconds indefinitely 
 --> free -g -s 30 

Lazy unmount /mnt/old 
 --> umount -l /mnt/old 

Stop nginx server now 
 --> service nginx stop 

Create a 1GB file with zeros 
 --> dd if=/dev/zero of=zero_file.img bs=1M count=1024 

Display memory usage in human-readable format, update every 10 seconds, 5 times 
 --> free -h -s 10 -c 5 

Set custom environment in ssh session 
 --> env VAR1=abc ssh user@host 

Display disk usage for all files and directories, using block size of 32K 
 --> du -B 32K 

Display only the names of all interfaces 
 --> ifconfig -l 

Remove rachel from logs group 
 --> gpasswd -d rachel logs 

See all partitions and their labels 
 --> blkid 

Send SIGUSR2 to all java processes 
 --> pkill -USR2 java 

Traceroute to github.com using only IPv6 and max TTL 40 
 --> traceroute -6 -m 40 github.com 

Delete all files in the current directory that start with 'temp' 
 --> rm temp* 

Print line and length of the line 
 --> awk '{print $0, length($0)}' file.txt 

Apply bzip2 to main.js 
 --> bzip2 main.js 

Create content_review group 
 --> groupadd content_review 

Start clean CLI 
 --> clear 

Run htop and display uptime 
 --> htop --show-uptime 

Display disk usage for all files and directories, sorted by size 
 --> du -ah | sort -h 

Unmount Btrfs volume from /mnt/btrfs 
 --> umount /mnt/btrfs 

Extract users using /dev/pts/0 
 --> w | grep pts/0 

Create support_batch1 group 
 --> groupadd support_batch1 

Enable allmulti on enp0s3 
 --> sudo ifconfig enp0s3 allmulti 

Zip the directory public into public.zip 
 --> zip -r public.zip public 

View service statuses 
 --> watch systemctl list-units --type=service 

Change configuration group to setup.yaml 
 --> chgrp configuration setup.yaml 

Flush current terminal session display 
 --> clear 

Display kernel version and processor type 
 --> uname -vp 

Run top and sort by time+ 
 --> top -o TIME+ 

Show all connections and display output with timestamps 
 --> date; netstat -an 

Unblock api_user 
 --> passwd -u api_user 

Reenable the ssh service 
 --> systemctl reenable ssh 

List all TCP sockets in the TIME-WAIT state 
 --> ss -t state time-wait 

Remove albert from r&d group 
 --> gpasswd -d albert r&d 

Use screen in interactive mode 
 --> screen -S interactive 

Update the password of user bob 
 --> passwd bob 

Sort the contents of all files in /var 
 --> find /var -type f -exec sort {} \; 

Start the nginx service 
 --> service nginx start 

Show all connections with numeric addresses and ports 
 --> netstat -n 

Display all files in a single row, separated by commas 
 --> ls -m 

Query the A record for github.com and display output in lowercase and color 
 --> host github.com | tr '[:upper:]' '[:lower:]' | lolcat 

Assign MTU 1400 to ens33 
 --> sudo ifconfig ens33 mtu 1400 

Show all interfaces with their status (MULTICAST) 
 --> ifconfig -a | grep MULTICAST 

Create a file called 'news.log' in /var/log/news 
 --> touch /var/log/news/news.log 

Print shell path 
 --> echo "$SHELL" 

Reload rsyslog config 
 --> service rsyslog reload 

Gzip the test_code.py 
 --> gzip test_code.py 

Open multiple files in windows 
 --> vim -o file1.txt file2.txt 

List all sockets with wide output 
 --> ss -W 

Traceroute to yahoo.com bypassing routing tables 
 --> traceroute -r yahoo.com 

Clear to avoid scrolling 
 --> clear 

Run top and show the full command line for each process 
 --> top -c 

List the current user's crontab entries 
 --> crontab -l 

Display disk usage in blocks of 1G 
 --> du -B 1G 

Mount partition without access time update 
 --> mount -o relatime /dev/sdt1 /mnt 

Send SIGPOLL to PID 4647 
 --> kill -POLL 4647 

Lock login for helpdesk user 
 --> passwd -l helpdesk 

Turn off swap 
 --> sudo swapoff /swapfile 

Remove an empty directory called 'queue' in /var/spool 
 --> rmdir /var/spool/queue 

Connect with global known hosts file 
 --> ssh -o GlobalKnownHostsFile=/etc/ssh/ssh_known_hosts user@hostname 

Ping github.com and set preload to 10 
 --> ping -l 10 github.com 

Make a POST request with file upload 
 --> curl -X POST -F 'file=@/path/to/file.txt' http://example.com/upload 

Create a directory named 'reports' in /home/user/Documents 
 --> mkdir /home/user/Documents/reports 

Zip everything in src folder to src.zip 
 --> zip -r src.zip src 

Delete a file called 'access.log' in /var/log 
 --> rm /var/log/access.log 

Connect with connection timeout 
 --> ssh -o ConnectTimeout=10 user@hostname 

Send SIGTRAP to PID 6465 
 --> kill -TRAP 6465 

Copy the entire 'Documents' folder to /mnt/usb 
 --> cp -r ~/Documents /mnt/usb/ 

Track virtual memory behavior 
 --> watch 'cat /proc/meminfo' 

Add guest user guest123 with UID 2222 
 --> useradd -u 2222 guest123 

Identify partition info of /dev/sda8 
 --> blkid /dev/sda8 

Show dependencies for the ssh service 
 --> systemctl list-dependencies ssh 

Add user nodeadmin with UID and comment 
 --> useradd -u 2001 -c 'Node.js Admin' nodeadmin 

Traceroute to 8.8.8.8 with wait time 10 seconds and 5 probes per hop 
 --> traceroute -w 10 -q 5 8.8.8.8 

Add user jenny with /bin/sh shell 
 --> useradd -s /bin/sh jenny 

Sync files and preserve hard links 
 --> rsync -avzH source_dir/ destination_dir/ 

Start postfix email service 
 --> service postfix start 

Run top and display processes sorted by CPU usage 
 --> top -o %CPU 

Clone /dev/sdb to image file 
 --> dd if=/dev/sdb of=disk_backup.img bs=4M 

Enable allmulti on enp0s3 
 --> sudo ifconfig enp0s3 allmulti 

Display memory usage in bytes with detailed stats, update every 5 seconds, 3 times 
 --> free -b -l -s 5 -c 3 

Start Node.js server with PORT=8080 
 --> env PORT=8080 node server.js 

Download a file and accept only certain file types 
 --> wget -A pdf,docx http://example.com/ 

Create a file called 'mime' in your home 
 --> touch ~/mime 

Wrap long lines 
 --> less -Sx file.txt 

Remove alpha_main with home directory 
 --> userdel -r alpha_main 

Create a directory named '2025_reports' inside Documents 
 --> mkdir Documents/2025_reports 

Test reading SSD 
 --> dd if=/dev/nvme0n1 of=/dev/null bs=1M 

Add a user tina with no home directory 
 --> useradd -M tina 

Create alias for tree command 
 --> alias tree='tree -C' 

Show partition layout for /dev/sdp 
 --> fdisk -l /dev/sdp 

Delete the docker_admins group 
 --> groupdel docker_admins 

Kill by name using regex anchor 
 --> killall -r '^daemon$' 

Run atop and show only processes with CPU usage > 50% 
 --> atop | awk '$9 > 50' 

Create a directory called 'logs' inside /var/log 
 --> mkdir /var/log/logs 

Run model inference job in background 
 --> nohup python infer.py & 

Make shell interface blank again 
 --> clear 

Add pentest_team group 
 --> groupadd pentest_team 

Read from stdin instead of filename 
 --> cat < file.txt 

Run make install with niceness +2 
 --> nice -n 2 sudo make install 

Delete bootstrap_team 
 --> groupdel bootstrap_team 

Connect with request TTY 
 --> ssh -o RequestTTY=yes user@hostname 

Query the SRV record for _sip._tcp.example.com 
 --> nslookup -query=SRV _sip._tcp.example.com 

View details of root partition /dev/sda3 
 --> blkid /dev/sda3 

Create a file called 'user.log' in /var/log 
 --> touch /var/log/user.log 

Kill root processes named apache2 
 --> sudo killall -u root apache2 

Change niceness of all processes in cgroup /system.slice 
 --> for pid in $(cat /sys/fs/cgroup/system.slice/*.tasks); do sudo renice +5 $pid; done 

Move all files in the current directory to /tmp and keep context 
 --> mv --preserve=context * /tmp/ 

Create a file called 'testfile' in /srv/www 
 --> touch /srv/www/testfile 

Reset shell password for docker_runner 
 --> passwd docker_runner 

Inspect partitions of /dev/sdb2 
 --> fdisk -l /dev/sdb2 

Show kernel messages and save to a file 
 --> dmesg > dmesg_output.txt 

Show all interfaces with their IPv6 addresses 
 --> ifconfig -a | grep inet6 

Display memory usage in megabytes, update every 1 second, 5 times 
 --> free -m -s 1 -c 5 

Revoke all permissions from everyone on lock.file 
 --> chmod 000 lock.file 

Wait 5 minutes 
 --> sleep 300 

Delete staging_user2 and home dir 
 --> userdel -r staging_user2 

Ping 1.1.1.1 with 8 second timeout and 97 times 
 --> ping -W 8 -c 97 1.1.1.1 

Run bot in background 
 --> nohup python bot.py & 

Become the user tom 
 --> su tom 

Change login password for ryan 
 --> passwd ryan 

Make a request with custom DNS server 
 --> curl --dns-servers 8.8.8.8 http://example.com 

Ping facebook.com and set preload to 5 
 --> ping -l 5 facebook.com 

Display kernel name and hardware platform 
 --> uname -si 

Remove akash from uat group 
 --> gpasswd -d akash uat 

Find all symbolic links in /usr 
 --> find /usr -type l 

Query the SPF record for yahoo.com 
 --> host -t SPF yahoo.com 

Follow journal for specific unit 
 --> journalctl -u sshd -f 

Identify blkid for /dev/sdh6 
 --> blkid /dev/sdh6 

Set hidden flag on /dev/sdc1 
 --> parted /dev/sdc set 1 hidden on 

Copy all files in the current directory to /tmp and keep everything and show progress 
 --> cp -av * /tmp/ 

Send raw binary data 
 --> curl --data-binary @image.jpg http://example.com/api 

Query the TLSA record for yahoo.com 
 --> host -t TLSA yahoo.com 

Set itadmin as owner for secure.log 
 --> chown itadmin secure.log 

Show kernel messages with human-readable timestamps 
 --> dmesg -T 

Change to a directory called 'scripts' in the current directory 
 --> cd scripts 

Hide everything shown in terminal 
 --> clear 

Display disk usage for all files and directories, using block size of 64M 
 --> du -B 64M 

Force copy all files in the /opt directory to /backup/opt 
 --> cp -f /opt/* /backup/opt/ 

Download multiple files listed in a text file 
 --> wget -i files.txt 

Show all failed services 
 --> systemctl --failed 

Change to the /bin directory 
 --> cd /bin 

Sync files and specify a custom daemon fake super 
 --> rsync -avz --daemon --fake-super source_dir/ destination_dir/ 

Show all connections with extended information 
 --> netstat -e 

Sleep for 3.3 seconds 
 --> sleep 3.3 

Run atop and show only the header 
 --> atop | head -n 5 

Access the maint_user 
 --> su maint_user 

Make request and follow redirects with max count 
 --> curl -L --max-redirs 5 http://example.com 

Ping google.com with 9 second timeout and 39 times 
 --> ping -W 9 -c 39 google.com 

Rename 'data.csv' to 'backup.csv' in the same directory 
 --> mv data.csv backup.csv 

Run long job and notify after wait 
 --> longjob & wait; echo finished 

Pause execution for 60s 
 --> sleep 60 

Show NetworkManager permissions 
 --> nmcli general permissions 

Remove testdev from staging group 
 --> gpasswd -d testdev staging 

Copy a directory 'music' to /mnt/usb and preserve everything 
 --> cp -a music /mnt/usb/ 

Get full user activity report 
 --> w 

Run CPU-intensive task with niceness +15 
 --> nice -n 15 gzip largefile 

Create a directory called 'locale-langpack' in your home 
 --> mkdir ~/locale-langpack 

Assign mailing group to newsletter.eml 
 --> chgrp mailing newsletter.eml 

Show w command output without header 
 --> w -h 

Move a directory 'images' to /var/www/html 
 --> mv images /var/www/html/ 

Display all system information except kernel name and network node hostname 
 --> uname -ar 

Login to integration user 
 --> su integration 

Zip two different folders logs and configs 
 --> zip -r archive.zip logs configs 

Deactivate steve's password 
 --> passwd -l steve 

Launch fdisk to manage storage 
 --> fdisk /dev/sda 

Create a file called 'no_create.txt' only if it exists 
 --> touch -c no_create.txt 

SFTP file transfer 
 --> curl -u username:password sftp://sftp.example.com/file.txt 

Write a binary blob to EEPROM 
 --> dd if=eeprom.bin of=/dev/i2c-1 bs=1 

Transfer between two remote hosts using SCP 
 --> scp user1@host1:/path/file.txt user2@host2:/path/ 

Use su to switch to developer 
 --> su developer 

List all sockets with timer information 
 --> ss -o 

Track number of running processes 
 --> watch 'ps aux | wc -l' 

Check if cron is enabled 
 --> systemctl is-enabled cron 

Remove an empty directory called 'monthly' in /var/log/backup 
 --> rmdir /var/log/backup/monthly 

Ping a site using sudo 
 --> sudo ping google.com 

Display disk usage for all files and directories, using block size of 128K 
 --> du -B 128K 

Display memory usage in gigabytes, detailed low and high memory stats 
 --> free -g -l 

Zoom in on current pane 
 --> Ctrl-b z 

Scan host keys 
 --> ssh-keyscan hostname 

Reset everything on terminal display 
 --> clear 

Change to the /var/log/kern directory 
 --> cd /var/log/kern 

Find all open files in /opt 
 --> lsof +D /opt 

Kill process with PID 1234 
 --> sudo kill 1234 

Display disk usage for all files and directories, using block size of 64K 
 --> du -B 64K 

Display disk usage for multiple directories 
 --> du ~/Documents ~/Pictures ~/.zshrc 

Run npm start detached 
 --> nohup npm start & 

Make request with form data and content type 
 --> curl -F 'file=@data.json;type=application/json' http://example.com/upload 

Open compressed file 
 --> less file.txt.gz 

Use su for debuguser 
 --> su debuguser 

Change labs group to experiment.txt 
 --> chgrp labs experiment.txt 

Find files in /home with more than one hard link 
 --> find /home -type f -links +1 

Remove trainee and delete files 
 --> userdel -r trainee 

Check for any remote logins 
 --> who | grep '(' 

Unlock dev_assistant 
 --> passwd -u dev_assistant 

Update java_developers to java_team 
 --> groupmod -n java_team java_developers 

Make carol the owner of myfile.txt 
 --> chown carol myfile.txt 

Forcefully terminate PID 1234 
 --> kill -9 1234 

Run scp in background and wait 
 --> scp file user@host:/tmp/ & wait 

Query the MX record for yahoo.com 
 --> host -t MX yahoo.com 

Show logs for a specific syslog identifier 
 --> journalctl SYSLOG_IDENTIFIER=sshd 

Background find command and wait 
 --> find / -name test.txt & wait 

Ping facebook.com and set TTL to 128 
 --> ping -t 128 facebook.com 

Print sessions on pts/0 
 --> who | grep pts/0 

Display partition map of /dev/sdw 
 --> fdisk -l /dev/sdw 

Match by UID range 
 --> pkill -U 1000-1005 myapp 

Run mtr to google.com and set the number of pings per hop to 12 
 --> mtr -c 12 google.com 

Change niceness of all snap processes 
 --> sudo renice +8 -p $(ps -eo pid,cmd | grep /snap/ | awk '{print $1}') 

Remove api_testing1 with home directory 
 --> userdel -r api_testing1 

Create a directory called 'python' in your home 
 --> mkdir ~/python 

Remove all files in /usr/local/bin 
 --> rm /usr/local/bin/* 

Check the version of the `pwd` binary on your system. 
 --> /bin/pwd --version 

Change pictures folder owner to user26 
 --> chown user26 pictures 

Traceroute to yahoo.com using a loose source route gateway 
 --> traceroute -g 192.168.1.1 yahoo.com 

Unlock user account named devuser 
 --> passwd -u devuser 

Reset the command history 
 --> history -c 

Look for entries with 'home' in fstab 
 --> grep 'home' /etc/fstab 

Unlock temporary_account 
 --> passwd -u temporary_account 

Lock login method for automation 
 --> passwd -l automation 

Lock user emailbot 
 --> usermod -L emailbot 

Show only kernel messages 
 --> journalctl -k 

Pause for 1 day 
 --> sleep 86400 

Set up group admins 
 --> groupadd admins 

Delete a file called 'kern.log' in /var/log 
 --> rm /var/log/kern.log 

Make user15 the owner of test folder 
 --> chown user15 test 

Alias to backup a file 
 --> alias backup='cp $1 $1.bak' 

Sync files and specify a custom daemon read only 
 --> rsync -avz --daemon --read-only source_dir/ destination_dir/ 

Open file and expand tabs 
 --> vim -c 'set expandtab' file.txt 

Print header and lines where value > 1000 
 --> awk 'NR==1 || $2 > 1000' data.csv 

Show only listening sockets with PID and program name 
 --> sudo netstat -lp 

Display partition layout on /dev/mmcblk1 
 --> fdisk -l /dev/mmcblk1 

Force password update for user lisa 
 --> passwd lisa 

Monitor dmesg 
 --> dmesg -wH 

Delete api_doc_team 
 --> groupdel api_doc_team 

Reset the password for student7 
 --> passwd student7 

Remove nginx 
 --> sudo apt remove nginx 

Unlock user account named devuser 
 --> passwd -u devuser 

FTP with authentication 
 --> curl -u username:password ftp://ftp.example.com/file.txt 

Start two background processes and wait for both 
 --> sleep 2 & sleep 3 & wait 

Traceroute to github.com with destination port 22 and 6 probes per hop 
 --> traceroute -p 22 -q 6 github.com 

Run system update script persistently 
 --> nohup ./update.sh & 

Reboot the server immediately 
 --> sudo reboot now 

Display all system information except kernel name and operating system 
 --> uname -arvmpio 

Show all interfaces with their status (BROADCAST) 
 --> ifconfig -a | grep BROADCAST 

Only display usernames 
 --> who | awk '{print $1}' 

Enable all-multicast mode on an interface 
 --> sudo ifconfig eth0 allmulti 

Show disk usage for all filesystems, filter for usage below 20% 
 --> df -h | awk '$5+0 < 20' 

Delete python_devs 
 --> groupdel python_devs 

Remove read permission from everyone 
 --> chmod a-r data 

Set privacy group on privacy_policy.md 
 --> chgrp privacy privacy_policy.md 

Show logged in users sorted by idle time 
 --> w | sort -k5 

Clear terminal screen before user input 
 --> clear 

Unblock the test_user account 
 --> passwd -u test_user 

Create compressed zip folder music.zip from audio1.mp3 and audio2.mp3 
 --> zip music.zip audio1.mp3 audio2.mp3 

Create a file called 'test' in /home/alice 
 --> touch /home/alice/test 

Move 'image.jpg' from the current directory to /tmp 
 --> mv image.jpg /tmp/ 

Query the A record for example.com and display output with timestamp 
 --> date; host example.com 

Create a file called 'fail2ban.log' in /var/log 
 --> touch /var/log/fail2ban.log 

Sync files and create backups of changed files 
 --> rsync -avz --backup source_dir/ destination_dir/ 

Run top and disable color 
 --> top -C 

Create sql_users group 
 --> groupadd sql_users 

Change datateam group to stats.py 
 --> chgrp datateam stats.py 

Run Java program in background safely 
 --> nohup java -jar app.jar & 

Restart the bluetooth service 
 --> service bluetooth restart 

Append binary data to file 
 --> dd if=tail.bin >> fullfile.img 

Print sum of values in column 1 if greater than 10 
 --> awk '$1 > 10 {sum+=$1} END {print sum}' file.txt 

Refresh package index 
 --> sudo apt update 

Check the status of docker service 
 --> service docker status 

Backup current crontab to a file 
 --> crontab -l > mycron.backup 

Display memory usage in gigabytes, update every second indefinitely 
 --> free -g -s 1 

Ping github.com with 10 second timeout and 81 times 
 --> ping -W 10 -c 81 github.com 

Change to the directory /usr/share/doc 
 --> cd /usr/share/doc 

Create a file called 'no_create.txt' only if it exists 
 --> touch -c no_create.txt 

Query the CAA record for google.com 
 --> host -t CAA google.com 

Count how many are idle 
 --> w | awk '$5 ~ /[0-9]+/ {print $1}' | wc -l 

Query A record for google.com and set +noauthority 
 --> dig google.com +noauthority 

Print lines that begin with 'ERROR' 
 --> awk '/^ERROR/' log.txt 

Wipe free space with zeros 
 --> dd if=/dev/zero of=zero.fill bs=1M; rm zero.fill 

Make a GET request and show only headers 
 --> curl -I http://example.com 

Add a user called techguy and create his home directory 
 --> useradd -m techguy 

Run mtr to amazon.com and set the number of pings per hop to 9 
 --> mtr -c 9 amazon.com 

Remove all files in /var/cache 
 --> rm /var/cache/* 

List all files and their inode numbers, including hidden ones 
 --> ls -ai 

Assign ownership of video.mp4 to michael 
 --> chown michael video.mp4 

Ping google.com and set interval to 3 seconds 
 --> ping -i 3 google.com 

Display disk usage for all files and directories, using block size of 512P 
 --> du -B 512P 

Capture tmux screen output 
 --> tmux capture-pane -S - 

Query the A record for facebook.com using DNS server 1.1.1.1 
 --> nslookup facebook.com 1.1.1.1 

Alias rm to be interactive 
 --> alias rm='rm -i' 

Create a directory called 'test' in /home/grace 
 --> mkdir /home/grace/test 

Add a connection with a specific IPv4 DHCP hostname priority 
 --> nmcli connection add type ethernet con-name "My Ethernet" ifname eth0 ipv4.dhcp-hostname-priority 100 

Make main.py readable only 
 --> chmod 400 main.py 

Open file and start in command mode 
 --> vim -c '' file.txt 

List the contents of /boot, sorted by version number 
 --> ls -v /boot 

Send SIGTERM to PID 5678 
 --> kill -15 5678 

Use bzip2 for user_data.json 
 --> bzip2 user_data.json 

Run job weekly 
 --> crontab -e # @weekly /weekly_job.sh 

Rename backupuser to backup_archiver 
 --> usermod -l backup_archiver backupuser 

Stop the ssh service 
 --> service ssh stop 

Display kernel name, machine hardware name, and processor type 
 --> uname -smp 

Update group support_batch1 to support_1 
 --> groupmod -n support_1 support_batch1 

Search without matching 'tmp' in filelist.txt 
 --> grep -v 'tmp' filelist.txt 

Print commands containing 'make' 
 --> history | grep make 

Give me a detailed list of all .zip files in my Downloads folder 
 --> ls -l ~/Downloads/*.zip 

Rename mobile_team to mobile_dev 
 --> groupmod -n mobile_dev mobile_team 

Query the ANY record for example.com 
 --> host -t ANY example.com 

Download all files from a website up to 2 levels deep 
 --> wget -r -l2 http://example.com/ 

Reload nginx configuration 
 --> service nginx reload 

Run atop and show only running processes 
 --> atop | grep running 

Gzip the makefile 
 --> gzip makefile 

Display all system information except kernel name and operating system 
 --> uname -a 

Assign IP 10.10.10.1 and broadcast 10.10.10.255 to eth2 
 --> sudo ifconfig eth2 10.10.10.1 broadcast 10.10.10.255 

Show details of a specific connection 
 --> nmcli connection show "My Connection" 

Find lines with square brackets 
 --> grep '\[.*\]' log.txt 

Add a connection with a specific IPv4 DHCP use routes 
 --> nmcli connection add type ethernet con-name "My Ethernet" ifname eth0 ipv4.dhcp-use-routes yes 

Remove staging1 user 
 --> userdel staging1 

Print the current directory from within a shell script. 
 --> #!/bin/bash
echo "Current dir: $(pwd)" 

After changing to /var/log, display your location. 
 --> cd /var/log && pwd 

Run eslint --fix with niceness +3 
 --> nice -n 3 eslint --fix . --ext .js,.jsx 

Change to the directory /etc/network 
 --> cd /etc/network 

Kill processes using younger than given age 
 --> killall -n 10 nginx 

Create interview_panel group 
 --> groupadd interview_panel 

Run report generator every 6 hours 
 --> crontab -e # 0 */6 * * * /report.sh 

Make request with interface binding 
 --> curl --interface eth0 http://example.com 

Copy all .jpg files from Pictures to Desktop 
 --> cp ~/Pictures/*.jpg ~/Desktop/ 

Access data_user 
 --> su data_user 

Change owner group to transport for route.csv 
 --> chgrp transport route.csv 

Display all environment settings 
 --> env 

Copy a file 'boot.log' to /var/log 
 --> cp boot.log /var/log/ 

Run atop and show process tree 
 --> atop -T 

Show disk usage for all filesystems, display only the filesystem type and usage percentage 
 --> df -h --output=fstype,pcent 

Run mtr to yahoo.com with IPv6, 75 cycles, and output in raw format 
 --> mtr -6 --raw -c 75 yahoo.com 

Wait for 2 minutes 
 --> sleep 120 

Prevent hr_staff from password access 
 --> passwd -l hr_staff 

Run htop and sort by memory usage 
 --> htop --sort-key=MEM% 

Find all backup tarballs in /data using regex 
 --> find /data -regex ".*/backup_[0-9]+\.tar\.gz" 

Show all running processes with threads 
 --> ps -eLf 

Display disk usage for /home up to 1 level deep in human-readable format 
 --> du -h --max-depth=1 /home 

Traceroute to github.com with wait time 2 seconds 
 --> traceroute -w 2 github.com 

Query NS record for google.com 
 --> dig google.com NS 

Run mtr to google.com with TCP, 100 cycles, and output in JSON format 
 --> mtr --tcp --json -c 100 google.com 

Extract terminal names 
 --> who | awk '{print $2}' 

Assign devops ownership of docker-compose.yml 
 --> chown devops docker-compose.yml 

Transfer file using SCP with specific port 
 --> scp -P 2222 file.txt user@hostname:/remote/path/ 

Make a request and show detailed timing 
 --> curl -w 'Total: %{time_total}s\nDNS: %{time_namelookup}s\nConnect: %{time_connect}s\n' http://example.com 

Run pip install with niceness +8 
 --> nice -n 8 pip install -r requirements.txt 

Add 'Line:' at the beginning of each line 
 --> sed 's/^/Line: /' file.txt 

Sync files and show individual file progress 
 --> rsync -avz --info=progress2 --info=name0 source_dir/ destination_dir/ 

Check root's scheduled cron jobs 
 --> sudo crontab -l -u root 

Delete a directory called 'testdir' and its contents without prompts 
 --> rm -rf testdir 

Update shell for tester to /bin/sh 
 --> usermod -s /bin/sh tester 

Scan for available WiFi networks with signal strength 
 --> nmcli -f SSID,SIGNAL,SECURITY device wifi list 

Start vim in silent mode 
 --> vim -es file.txt 

View all current bindings 
 --> Ctrl-b ? 

Check partition info of SD card 
 --> fdisk -l /dev/mmcblk0 

List variables like HOME, PATH, and USER 
 --> env 

Create a file called 'ref.txt' and set its timestamp to match 'source.txt' 
 --> touch -r source.txt ref.txt 

Get login details by IP 
 --> who | awk '{print $1, $5}' 

Copy a file 'secure' to /var/log 
 --> cp secure /var/log/ 

Run mtr to example.com with IPv4, 50 cycles, and output in XML format 
 --> mtr -4 --xml -c 50 example.com 

Print file with line numbers, skipping comments 
 --> awk '!/^#/ {print NR, $0}' file.txt 

Delete ivan without deleting home directory 
 --> userdel ivan 

Query the A record for facebook.com and display output in uppercase and color 
 --> host facebook.com | tr '[:lower:]' '[:upper:]' | lolcat 

Run mtr to example.com with IPv4, 25 cycles, interval 2s, and output in XML format 
 --> mtr -4 --xml -c 25 -i 2 example.com 

Ping 1.1.1.1 with 6 second timeout and 133 times 
 --> ping -W 6 -c 133 1.1.1.1 

Add a connection with a specific MAC address 
 --> nmcli connection add type ethernet con-name "My Ethernet" ifname eth0 ethernet.mac-address 00:11:22:33:44:55 

List files used by firefox 
 --> lsof -c firefox 

Print parent PID 
 --> echo $PPID 

Mount devtmpfs on /dev 
 --> mount -t devtmpfs devtmpfs /dev 

Download a file with FTP username and password 
 --> wget --ftp-user=USER --ftp-password=PASS ftp://example.com/file.zip 

Create a file called 'videos' in your home 
 --> touch ~/videos 

Change password for qa_user 
 --> passwd qa_user 

Use parted to remove second partition on /dev/sdi 
 --> parted /dev/sdi rm 2 

Become builduser 
 --> su builduser 

Rename node_admins to node_ops 
 --> groupmod -n node_ops node_admins 

Show the machine hardware name 
 --> uname -m 

Unmount staging area 
 --> umount /mnt/stage 

Get filesystem and UUID info from /dev/sdb6 
 --> blkid /dev/sdb6 

Unmount guest shared folder 
 --> umount /mnt/guest 

Compress movie.mp4 
 --> gzip movie.mp4 

Run htop and show only processes with CPU usage > 50% 
 --> htop | awk '$9 > 50' 

Add user guestlogin with shell access disabled 
 --> useradd -s /usr/sbin/nologin guestlogin 

Include priya in cloud_admin group 
 --> gpasswd -a priya cloud_admin 

Display memory usage in megabytes with old format and total, update every 2 seconds, 2 times 
 --> free -m -o -t -s 2 -c 2 

Show disk usage for all filesystems, display only the filesystem and available space 
 --> df -h --output=source,avail 

List open files for user with UID 0 
 --> lsof -u 0 

Disable login for analytics2 
 --> passwd -l analytics2 

Create linux file system ext2 on /dev/sdf6 
 --> mkfs.ext2 /dev/sdf6 

Add user alpha in group users and devs 
 --> useradd -G users,devs alpha 

Show info about /dev/sdd1 
 --> blkid /dev/sdd1 

Restrict login for dev_user 
 --> passwd -l dev_user 

Traceroute to google.com showing ICMP extensions 
 --> traceroute -e google.com 

Create a file called 'tomorrow.txt' and set its timestamp to tomorrow 
 --> touch -d 'tomorrow' tomorrow.txt 

Display disk usage for all files and directories, using block size of 1T 
 --> du -B 1T 

Run multiple commands in background and wait 
 --> { ls; sleep 2; } & wait 

Remove an empty directory called '2025' inside /srv/www 
 --> rmdir /srv/www/2025 

Update login access for temp_user 
 --> passwd temp_user 

Change comment of devopsteam to 'DevOps Team Member' 
 --> usermod -c 'DevOps Team Member' devopsteam 

Create a file called 'file.txt' and set its timestamp to 12:34 on June 18, 2025 
 --> touch -t 202506181234 file.txt 

Update password of test_account 
 --> passwd test_account 

Find JSON config files 
 --> locate '*.json' 

Show kernel messages with delta time between messages 
 --> dmesg -d 

Set group of thesis.tex to students 
 --> chgrp students thesis.tex 

Download a file and delete after download 
 --> wget --delete-after http://example.com/file.zip 

Compress the CSV export file sales.csv with bzip2 
 --> bzip2 sales.csv 

Delete kernel_dev group 
 --> groupdel kernel_dev 

Run a script on reboot 
 --> crontab -e # @reboot /path/to/startup.sh 

Show interfaces that are up 
 --> ifconfig -u 

Gzip anotherfile.dat 
 --> gzip anotherfile.dat 

Display kernel release, hardware platform, and operating system 
 --> uname -rio 

Delete k8s_demo_user 
 --> userdel k8s_demo_user 

Display memory usage in bytes, update every 30 seconds indefinitely 
 --> free -b -s 30 

Monitor active TCP connections 
 --> watch 'netstat -an | grep ESTABLISHED' 

Remove an empty directory called 'share' in /usr/local 
 --> rmdir /usr/local/share 

Change finance group to tax_return.pdf 
 --> chgrp finance tax_return.pdf 

Display disk usage for all files and directories, following symlinks 
 --> du -L 

Check GUI terminal logins 
 --> who | grep :0 

Limit download speed to 100kB/s 
 --> wget --limit-rate=100k http://example.com/file.zip 

Create a file called 'Xorg.0.log' in /var/log 
 --> touch /var/log/Xorg.0.log 

Display memory usage in kilobytes, update every second indefinitely 
 --> free -k -s 1 

Lift lock from sys_monitor 
 --> passwd -u sys_monitor 

Change to the /boot directory 
 --> cd /boot 

Query A record for google.com with timeout 2 seconds 
 --> dig google.com +timeout=2 

Update the name of content_team to creative_team 
 --> groupmod -n creative_team content_team 

Download a file and set HTTP header 
 --> wget --header="Accept: text/html" http://example.com/file.zip 

Replace 'Jan' with 'January' 
 --> sed 's/Jan/January/g' calendar.txt 

Wait before retry in loop 
 --> sleep 1 

Query the AAAA (IPv6) record for yahoo.com 
 --> nslookup -query=AAAA yahoo.com 

Make a fat32 file system on nvme /dev/nvme0n1p4 
 --> mkfs.vfat /dev/nvme0n1p4 

Create a deeply nested directory structure 'a/b/c/d/e/f' 
 --> mkdir -p a/b/c/d/e/f 

Alias 'update' to update packages in Debian 
 --> alias update='sudo apt update && sudo apt upgrade' 

Find number of ssh sessions 
 --> who | grep ssh | wc -l 

Start vim with GUI disabled 
 --> vim -X file.txt 

Display memory usage in kilobytes, update every 30 seconds indefinitely 
 --> free -k -s 30 

Assign legal team to contract.docx 
 --> chgrp legal contract.docx 

Display memory usage in tebibytes 
 --> free --tebi 

Restore login permissions for dev_ops 
 --> passwd -u dev_ops 

Form UIUX group 
 --> groupadd UIUX 

Query the MX record for yahoo.com 
 --> nslookup -query=MX yahoo.com 

Delete an empty directory called 'test' in /var/spool 
 --> rmdir /var/spool/test 

FTP passive mode 
 --> curl --ftp-pasv ftp://ftp.example.com/file.txt 

Zip nginx config directory 
 --> zip -r nginx.zip /etc/nginx 

Copy a file 'data.json' to /srv/www and keep permissions 
 --> cp -p data.json /srv/www/ 

Make a zip file that includes readme and changelog 
 --> zip files.zip readme changelog 

Wait 1.1 seconds 
 --> sleep 1.1 

Verbose output 
 --> pkill -v sshd 

Initialize FAT32 file system on /dev/sdh5 
 --> mkfs.vfat /dev/sdh5 

Show me all files, with details, sorted by size (largest first) 
 --> ls -laS 

Find any tmp folder 
 --> locate /tmp 

Show me a detailed list of all files, even hidden ones 
 --> ls -la 

View kernel version 
 --> cat /proc/version 

Display memory usage in gigabytes, update every second indefinitely 
 --> free -g -s 1 

Reactivate password login for alice 
 --> passwd -u alice 

Query A record for google.com and set +short 
 --> dig google.com +short 

Check the UUID of /dev/sda1 
 --> blkid /dev/sda1 

Add executable permission to script 
 --> sudo chmod +x script.sh 

Create a directory called 'test_logs' in the current directory 
 --> mkdir test_logs 

Restart graphical session 
 --> sudo systemctl restart gdm 

Kill Java processes started by user 
 --> pkill -u bob java 

Change to the /var/log/audit directory 
 --> cd /var/log/audit 

Rename 'apt.log' to 'apt.log.bak' in /var/log/apt 
 --> mv /var/log/apt/apt.log /var/log/apt/apt.log.bak 

Find files in /var with exactly one hard link 
 --> find /var -type f -links 1 

Use bzip2 to compress file.dat 
 --> bzip2 file.dat 

Change dev_infra to infra_team 
 --> groupmod -n infra_team dev_infra 

Sleep before retrying a command 
 --> sleep 2 

Watch journalctl logs 
 --> watch journalctl -xe 

Change niceness of virtualization processes 
 --> sudo renice +5 -p $(pgrep qemu) 

Create a file called 'cron' in /var/log 
 --> touch /var/log/cron 

Switch to the root user 
 --> su 

Set up a new password for johnny 
 --> passwd johnny 

Parallel kill multiple PIDs 
 --> kill -9 11131 & kill -9 12141 & wait 

Delete an empty directory called 'notes' in your home directory 
 --> rmdir ~/notes 

Run a python script with custom ENV 
 --> env ENV=dev python script.py 

Print multiple variables 
 --> echo "$USER@$HOSTNAME" 

Mask the telnet service to prevent it from being started 
 --> systemctl mask telnet 

Delete all files in the current directory and subdirectories 
 --> rm -rf * 

Query the AAAA (IPv6) record for google.com 
 --> host -t AAAA google.com 

Add user walter to group backup 
 --> usermod -aG backup walter 

Ping 1.1.1.1 with 10 second timeout and 61 times 
 --> ping -W 10 -c 61 1.1.1.1 

Show disk usage for all filesystems, filter for filesystems with more than 10G available 
 --> df -h | awk '$4 ~ /G/ && $4+0 > 10' 

Download a file and set download directory structure 
 --> wget -x http://example.com/file.zip 

Copy all files in the current directory to /tmp and keep everything and keep context 
 --> cp -a --preserve=context * /tmp/ 

Find non-gzipped files in /var 
 --> find /var -not -name "*.gz" -a -type f 

Display memory usage in kilobytes, update every 15 seconds indefinitely 
 --> free -k -s 15 

Run 'node' with a custom NODE_ENV value 
 --> env NODE_ENV=production node 

Allow others to read and write output.log 
 --> chmod o+rw output.log 

Unmount /mnt/ramdisk 
 --> umount /mnt/ramdisk 

Sync files and protect remote args from shell interpretation 
 --> rsync -avz -s source_dir/ user@remote_host:/destination_dir/ 

Traceroute to yahoo.com using TCP SYN packets and destination port 53 
 --> traceroute -T -p 53 yahoo.com 

Query A record for google.com and set +notopdown 
 --> dig google.com +notopdown 

Query A record for google.com and display additional section 
 --> dig google.com +noall +additional 

Prevent qa2 from logging in 
 --> passwd -l qa2 

Sync files and specify a custom daemon user 
 --> rsync -avz --daemon --uid=nobody source_dir/ destination_dir/ 

Restart the postfix service 
 --> service postfix restart 

Connect to a WiFi network with a specific interface 
 --> nmcli device wifi connect MyNetwork password "mypassword" ifname wlan0 

Display disk usage summary for each subdirectory in /usr/local 
 --> du -h --max-depth=1 /usr/local 

Ping 1.1.1.1 with 8 second timeout and 37 times 
 --> ping -W 8 -c 37 1.1.1.1 

Create group CI_CD_team 
 --> groupadd CI_CD_team 

Show current user load 
 --> w 

Download file with progress meter 
 --> curl --progress-bar -O http://example.com/file.zip 

Toggle between last two windows 
 --> Ctrl-b l 

Assign vinay to builders group 
 --> gpasswd -a vinay builders 

Assign maria to hr group 
 --> gpasswd -a maria hr 

Use gzip to shrink bigfile.iso 
 --> gzip bigfile.iso 

Delete all .bak files in the current directory 
 --> rm *.bak 

Watch CPU load every 5 seconds 
 --> watch -n 5 uptime 

Create a file called 'workspace' in your home 
 --> touch ~/workspace 

Show a detailed, recursive list of the current directory, but only go 3 levels deep 
 --> find . -maxdepth 3 -ls 

Format partition /dev/sdb2 as ext3 
 --> mkfs.ext3 /dev/sdb2 

Allow login for analyst_1 
 --> passwd -u analyst_1 

Prevent overlapping cron runs 
 --> flock -n /tmp/lockfile /myscript.sh 

List all available network interfaces 
 --> ifconfig -a 

Stop the mysql service 
 --> service mysql stop 

Checksum concatenated output 
 --> cat file.txt | md5sum 

Enable dev1 again 
 --> passwd -u dev1 

Search for last executed file-related commands 
 --> history | grep touch 

Allow SSH through firewall 
 --> sudo ufw allow ssh 

Query A record for google.com and set +norecurse 
 --> dig google.com +norecurse 

Change to the /var/log/apt directory 
 --> cd /var/log/apt 

Download using HTTP POST from a file 
 --> wget --post-file=data.txt http://example.com/form 

Ping facebook.com with 7 second timeout and 115 times 
 --> ping -W 7 -c 115 facebook.com 

Check if cron is enabled 
 --> systemctl is-enabled cron 

Dump physical memory 
 --> dd if=/dev/mem of=physmem.bin bs=4096 

Query the ANY record for google.com with verbose output 
 --> host -v -t ANY google.com 

Send SIGILL to PID 5859 
 --> kill -ILL 5859 

Show logs for a specific group (GID 100) 
 --> journalctl _GID=100 

Show configuration for the loopback interface 
 --> ifconfig lo 

Enable the docker service to start at boot 
 --> systemctl enable docker 

Create a file called 'temp' in /home/dave 
 --> touch /home/dave/temp 

Display all system information except kernel name and processor type 
 --> uname -arvmio 

Copy all files in /var/log/installer to /backup/installer 
 --> cp /var/log/installer/* /backup/installer/ 

Search for nginx.conf file 
 --> locate nginx.conf 

Show all network interfaces with their flags 
 --> ifconfig -a 

Track ping latency to Google 
 --> watch ping -c 1 google.com 

Open fdisk for viewing partitions of nvme SSD 
 --> fdisk /dev/nvme0n1 

Create a directory called 'test_data' in your home 
 --> mkdir ~/test_data 

Restart the rsyslog service 
 --> service rsyslog restart 

Copy a file 'sa.log' to /var/log/sa 
 --> cp sa.log /var/log/sa/ 

Add a connection with a specific IPv4 DHCP fqdn 
 --> nmcli connection add type ethernet con-name "My Ethernet" ifname eth0 ipv4.dhcp-fqdn "myhost.example.com" 

Copy all files in the current directory to /tmp and keep links 
 --> cp --preserve=links * /tmp/ 

Remove an empty directory called 'dev' in /srv 
 --> rmdir /srv/dev 

Print 3rd field only if 2nd field is 'active' 
 --> awk '$2 == "active" {print $3}' file.txt 

Open file and set shiftwidth=4 
 --> vim -c 'set shiftwidth=4' file.txt 

Show kernel messages with colored output 
 --> dmesg -L 

Empty terminal to make space 
 --> clear 

Display memory usage with old format (no -/+ buffers/cache line) 
 --> free -o 

Use su to become backup user 
 --> su backup 

Download a file and set referer to another site 
 --> wget --referer=http://referrer.com http://example.com/file.zip 

Show all connections and filter for a specific process (e.g., ssh) 
 --> netstat -ap | grep ssh 

Remove all permissions from group 
 --> chmod g= filename 

Reset terminal before launching tool 
 --> clear 

Show all interfaces with protocol family ns 
 --> ifconfig -a ns 

Give read and execute access to group 
 --> chmod g+rx target 

Start a new tmux session 
 --> tmux 

Find files in /home newer than file.txt 
 --> find /home -newer file.txt 

Compress readme using gzip 
 --> gzip readme 

Compress changelog using bzip2 
 --> bzip2 changelog 

Schedule job every Monday at 1 PM 
 --> crontab -e # 0 13 * * 1 /path/to/job.sh 

Send SIGCHLD to PID 2223 
 --> kill -CHLD 2223 

Display kernel release, version, and processor type 
 --> uname -rvp 

Remove host key from known_hosts 
 --> ssh-keygen -R hostname 

Run top and display only the CPU summary 
 --> top -b -n 1 | grep 'Cpu(s)' 

Traceroute to 8.8.8.8 using TCP SYN packets and destination port 8080 
 --> traceroute -T -p 8080 8.8.8.8 

Sync files and show detailed information about the transfer 
 --> rsync -avzi source_dir/ destination_dir/ 

Run top and show process tree view 
 --> top -V 

Detach screen with keyboard 
 --> Ctrl-a d 

Mount NTFS disk from /dev/sdk1 
 --> mount -t ntfs /dev/sdk1 /mnt/ntfs 

Run curl without interruption 
 --> nohup curl https://example.com & 

Print XML snippet 
 --> echo '<tag>value</tag>' 

Display version information for du command 
 --> du --version 

Query A record for facebook.com 
 --> dig facebook.com 

Create a file called 'Xorg.1.log' in /var/log 
 --> touch /var/log/Xorg.1.log 

Format backup disk /dev/sdb3 using xfs 
 --> mkfs.xfs /dev/sdb3 

Change to the /var/log/news directory 
 --> cd /var/log/news 

Find all symbolic links in /home 
 --> find /home -type l 

Download a file with FTP authentication 
 --> wget --ftp-user=USERNAME --ftp-password=PASSWORD ftp://example.com/file.zip 

Change UID of systembot to 900 
 --> usermod -u 900 systembot 

Display disk usage for all files and directories, skipping directories on a different filesystem 
 --> du -x 

Add user datamanager to data group 
 --> useradd -g data datamanager 

Use gzip for resume.docx 
 --> gzip resume.docx 

Display kernel name, version, and hardware platform 
 --> uname -svi 

Create user_ops group 
 --> groupadd user_ops 

Assign QA group to checklist.xlsx 
 --> chgrp QA checklist.xlsx 

Assign MTU 1400 to ens33 
 --> sudo ifconfig ens33 mtu 1400 

Find Emacs config files 
 --> locate .emacs 

Show all running processes in full-format listing 
 --> ps -ef 

Interactive mode: set query type to TXT and look up yahoo.com 
 --> nslookup
set type=TXT
yahoo.com 

Run Flask app in tmux 
 --> tmux new -s flask 'flask run' 

Format backup partition to ntfs 
 --> mkfs.ntfs /dev/sdd5 

Disable swap file creation 
 --> vim -n file.txt 

Modify a connection to disable IPv6 
 --> nmcli connection modify "My Connection" ipv6.method ignore 

Show statistics for UDP only 
 --> netstat -su 

Print script name 
 --> echo "Script: $0" 

Open partition manager for removable disk 
 --> fdisk /dev/sdb 

Enable lvm flag on /dev/sdf1 
 --> parted /dev/sdf set 1 lvm on 

Execute batch job safely 
 --> nohup ./batch_job.sh & 

Sync files and specify a custom daemon write only 
 --> rsync -avz --daemon --write-only source_dir/ destination_dir/ 

Open file and use ex commands only 
 --> ex file.txt 

Create a raw floppy image 
 --> dd if=/dev/fd0 of=floppy.img bs=1440k 

Run mtr to yahoo.com and set the number of pings per hop to 15 
 --> mtr -c 15 yahoo.com 

Give me a detailed list, but omit the owner information 
 --> ls -g 

Show all open files in /home directory 
 --> lsof +D /home 

Change events group to calendar.ics 
 --> chgrp events calendar.ics 

Delete an empty directory called 'data' inside /var/log 
 --> rmdir /var/log/data 

Create a file called 'temp' in /home/frank 
 --> touch /home/frank/temp 

Set up credentials for designer3 
 --> passwd designer3 

Display memory usage in kilobytes, update every 10 seconds, 2 times 
 --> free -k -s 10 -c 2 

Run htop and show only processes in uninterruptible sleep 
 --> htop | grep ' D ' 

Create a directory called 'downloads' in your home 
 --> mkdir ~/downloads 

Display all system information except kernel name and hardware platform 
 --> uname -arnvmoip 

Allow user qa_lead to log in again 
 --> passwd -u qa_lead 

Remove guest1 from public group 
 --> gpasswd -d guest1 public 

Test write speed of disk 
 --> dd if=/dev/zero of=testfile bs=1G count=1 oflag=dsync 

List all cron jobs for all users 
 --> sudo ls /var/spool/cron/crontabs 

Download only files matching a pattern 
 --> wget -r -A '*.mp3' http://example.com/music/ 

Create a file called 'tomorrow.txt' and set its timestamp to tomorrow 
 --> touch -d 'tomorrow' tomorrow.txt 

Query the PTR record for 1.1.1.1 
 --> nslookup -query=PTR 1.1.1.1 

Remove js_team 
 --> groupdel js_team 

Filter users with idle time greater than 1hr 
 --> w | awk '$5 ~ /[0-9]+:[0-9]+/ {print $0}' 

Restore login ability for ethan 
 --> passwd -u ethan 

Monitor CPU with mpstat 
 --> watch mpstat 

Use parted to create aligned fat32 partition 
 --> parted /dev/sdq mkpart primary fat32 1MiB 1GiB 

Run mtr to amazon.com and display both IP and hostnames 
 --> mtr -b amazon.com 

Run memory-intensive task with niceness +8 
 --> nice -n 8 tar -cf archive.tar large_dir 

Change niceness of systemd-journald 
 --> sudo renice +5 -p $(pgrep systemd-journald) 

Display kernel version, processor type, and operating system 
 --> uname -vpo 

Use wait with multiple PIDs 
 --> cmd1 & pid1=$!; cmd2 & pid2=$!; wait $pid1 $pid2 

Find users with open sessions 
 --> who 

Copy a file 'user.log' to /var/log 
 --> cp user.log /var/log/ 

Get rid of clutter on terminal 
 --> clear 

Use su for test-runner 
 --> su test-runner 

Zip all dat files in current directory 
 --> zip datafiles.zip *.dat 

Display all system information except kernel name and operating system 
 --> uname -arvm 

Clear logs every month 
 --> crontab -e # 0 0 1 * * /clear_logs.sh 

Show only the MAC address for eth0 
 --> ifconfig eth0 | grep ether 

Delete all .tmp files in /var/tmp 
 --> rm /var/tmp/*.tmp 

Send SIGURG to PID 5051 
 --> kill -URG 5051 

Copy specific key to remote server 
 --> ssh-copy-id -i ~/.ssh/mykey.pub user@hostname 

Reset the shell interface 
 --> clear 

Remove onboarding_unit 
 --> groupdel onboarding_unit 

Identify idle SSH sessions 
 --> w | grep ssh 

Run htop and show only running processes 
 --> htop | grep ' R ' 

Delete a file named 'data.csv' in /tmp 
 --> rm /tmp/data.csv 

Change niceness of PID 1234 to -5 
 --> sudo renice -5 1234 

Show me a detailed, human-readable list of my Pictures folder 
 --> ls -lh ~/Pictures 

Delete a file called 'boot.log' in /var/log 
 --> rm /var/log/boot.log 

Get block info from /dev/sdh4 
 --> blkid /dev/sdh4 

Check partitions of disk manually 
 --> fdisk /dev/sda 

Compress the SQL file dump.sql with bzip2 
 --> bzip2 dump.sql 

Show statistics for ICMPv6 only 
 --> netstat -s -p icmpv6 

Display disk usage with last modification time 
 --> du --time 

Match by parent PID 
 --> pkill -P 1234 

Load new lines from history file 
 --> history -n 

Query the CAA record for example.com 
 --> host -t CAA example.com 

Query the NS record for example.com 
 --> nslookup -query=NS example.com 

Kill by session leader 
 --> pkill -s 2000 

Make swap permanent 
 --> sudo nano /etc/fstab 

Configure a point-to-point interface 
 --> sudo ifconfig ppp0 192.168.1.1 pointopoint 192.168.1.2 up 

Reset NetworkManager logging to default 
 --> nmcli general logging level INFO domains DEFAULT 

Prevent testagent from password login 
 --> passwd -l testagent 

Add testuser to multiple groups 
 --> usermod -aG testers,qa,dev testuser 

Query A record for google.com and show comments 
 --> dig google.com +comments 

Display all system information except kernel name and operating system 
 --> uname -arvmp 

Query the A record for example.com with a timeout of 5 seconds 
 --> nslookup -timeout=5 example.com 

Display disk usage for all files and directories, using block size of 10G 
 --> du -B 10G 

Zip python directory and output to py.zip 
 --> zip -r py.zip python 

Display files opened by process ID 4321 
 --> lsof -p 4321 

Add content_team group 
 --> groupadd content_team 

Add support user to helpdesk group 
 --> usermod -aG helpdesk support 

Show disk usage in 1K blocks 
 --> df -k 

Remove all files in /var/log/nginx 
 --> rm /var/log/nginx/* 

Find functions in C file 
 --> grep '()' main.c 

Make user buildengine with UID 6000 
 --> useradd -u 6000 buildengine 

Show disk usage for all filesystems, display only the filesystem, type, and inode usage 
 --> df -h --output=source,fstype,ipcent 

Make editors group for newsletter.pdf 
 --> chgrp editors newsletter.pdf 

Scan disk identifiers 
 --> blkid 

Disable device autoconnect 
 --> nmcli device set eth0 autoconnect no 

Display memory usage in human-readable format with all options, update every 14 seconds, 14 times 
 --> free -h -o -l -w -t -s 14 -c 14 

Show all kernel ring buffer messages 
 --> dmesg 

Copy a file 'gpu-manager.log' to /var/log 
 --> cp gpu-manager.log /var/log/ 

Display memory usage in kilobytes with wide output and detailed stats, update every 6 seconds, 6 times 
 --> free -k -w -l -s 6 -c 6 

Sync files locally with verbose output 
 --> rsync -v source_dir/ destination_dir/ 

Clear system logs 
 --> sudo journalctl --vacuum-time=1d 

Run curl in background and wait 
 --> curl example.com & wait 

View all commands you've executed so far 
 --> history 

Alias to start virtual environment 
 --> alias venv='source venv/bin/activate' 

Run top and show wide output 
 --> top -w 

Sync files and specify a custom daemon hosts deny 
 --> rsync -avz --daemon --hosts-deny=10.0.0.0/8 source_dir/ destination_dir/ 

Set storage group to backup.tgz 
 --> chgrp storage backup.tgz 

Show all blkid results 
 --> blkid 

Download a file and mirror a website with no parent directories 
 --> wget --mirror --no-parent http://example.com/ 

Remove read access from user 
 --> chmod u-r hidden.txt 

Create user qauser with secondary groups testers,loggers 
 --> useradd -G testers,loggers qauser 

Identify system usage by users 
 --> who 

Display memory usage in human-readable format, update every 30 seconds indefinitely 
 --> free -h -s 30 

Remove ryan from dev group 
 --> gpasswd -d ryan dev 

Copy all files in /var/log/fontconfig.log to /backup/fontconfig 
 --> cp /var/log/fontconfig.log/* /backup/fontconfig/ 

Temporarily disable password for user1 
 --> passwd -l user1 

Download a file and use a different output document 
 --> wget -O myfile.txt http://example.com/file.txt 

Run mtr to amazon.com and set interval to 0.5 seconds 
 --> mtr -i 0.5 amazon.com 

Find package installation history 
 --> history | grep apt 

Display all system information except kernel name and hardware platform 
 --> uname -ar 

Create 10K file with /dev/zero 
 --> dd if=/dev/zero of=zero10k.img bs=1K count=10 

Start the cron daemon 
 --> sudo systemctl start cron 

Change to the /var/log/ufw directory 
 --> cd /var/log/ufw 

Unmount RAM disk at /mnt/ram 
 --> umount /mnt/ram 

Query the A record for github.com and display statistics 
 --> nslookup -stats github.com 

Clone USB drive 
 --> dd if=/dev/sdb of=/dev/sdc bs=4M 

Lock login for eric 
 --> passwd -l eric 

Reset credentials for staging_user 
 --> passwd staging_user 

Run perl script safely 
 --> nohup perl script.pl & 

Include ram in batch group 
 --> gpasswd -a ram batch 

Connect a device using a specific connection 
 --> nmcli device connect eth0 

Run Docker container restart script 
 --> nohup ./restart_docker.sh & 

Bind a new key to split window 
 --> bind | split-window -h 

Create custom_theme_users group 
 --> groupadd custom_theme_users 

Assign sonia to uiux group 
 --> gpasswd -a sonia uiux 

Display memory usage in gigabytes, update every 5 seconds, 2 times 
 --> free -g -s 5 -c 2 

Monitor SELinux logs 
 --> watch 'grep AVC /var/log/audit/audit.log' 

Add senior_devs group 
 --> groupadd senior_devs 

Traceroute to github.com with debugging enabled 
 --> traceroute -d github.com 

Unmount the encrypted disk at /mnt/secure 
 --> umount /mnt/secure 

Create UX_team group 
 --> groupadd UX_team 

Run mtr to google.com and set maximum TTL to 30 
 --> mtr -m 30 google.com 

Make all text files read-only 
 --> chmod a-w *.txt 

Show me a list of all files, sorted by access time, oldest first 
 --> ls -atur 

Change niceness of cron daemon 
 --> sudo renice +8 -p $(pgrep cron) 

Ping yahoo.com with 1400 byte packets and 20 times 
 --> ping -s 1400 -c 20 yahoo.com 

Pad column 1 with zeros 
 --> awk '{printf "%05d\n", $1}' file.txt 

List partition details of /dev/sdq 
 --> fdisk -l /dev/sdq 

Find all files in /data but skip backup directories 
 --> find /data -path "*/backup" -prune -o -type f -print 

Compress the photo.png using bzip2 
 --> bzip2 photo.png 

Run mtr to google.com and set timeout per probe to 5 seconds 
 --> mtr --timeout 5 google.com 

Initialize partition /dev/sda7 to ext2 
 --> mkfs.ext2 /dev/sda7 

Observe docker container status 
 --> watch docker ps 

Display processor type, hardware platform, and operating system 
 --> uname -pio 

Query the CAA record for yahoo.com 
 --> host -t CAA yahoo.com 

Query the A record for example.com and display statistics 
 --> nslookup -stats example.com 

List all listening UDP sockets 
 --> ss -lu 

Display disk usage for all files and directories, using block size of 16K 
 --> du -B 16K 

Revoke write access from all 
 --> chmod a-w anyfile 

Make a group called dev_team 
 --> groupadd dev_team 

Traceroute to example.com with no hostname resolution and max TTL 20 
 --> traceroute -n -m 20 example.com 

Run infinite ping persistently 
 --> nohup ping google.com > ping_output.txt 2>&1 & 

Display disk usage for all files and directories, using block size of 64K 
 --> du -B 64K 

Expire user account dockeruser on 2025-08-01 
 --> usermod -e 2025-08-01 dockeruser 

Ping facebook.com and use interface eth1 
 --> ping -I eth1 facebook.com 

Show kernel messages and pipe to grep for filtering 
 --> dmesg | grep -i error 

Follow Nginx error logs 
 --> tail -f /var/log/nginx/error.log 

Create a directory called 'doc' in your home 
 --> mkdir ~/doc 

Use fdisk to inspect disk schema 
 --> fdisk -l 

List files opened by root user 
 --> lsof -u root 

Create 512-byte file 
 --> dd if=/dev/zero of=block512.img bs=512 count=1 

Delay response 10s 
 --> sleep 10 

Show only the collisions for eth0 
 --> ifconfig eth0 | grep collisions 

Ping 1.1.1.1 with 100 byte packets and 5 times 
 --> ping -s 100 -c 5 1.1.1.1 

Find case-insensitive matches for 'warning' in server.log 
 --> grep -i 'warning' server.log 

Run video encoding with niceness +18 
 --> nice -n 18 ffmpeg -i in.mp4 out.mkv 

Change to the directory /etc/ssl/certs 
 --> cd /etc/ssl/certs 

Change password for the new dev 
 --> passwd dev 

Switch to qa_manager 
 --> su qa_manager 

Rename 'gpu-manager.log' to 'gpu-manager.log.old' in /var/log 
 --> mv /var/log/gpu-manager.log /var/log/gpu-manager.log.old 

Find string 'java' in all systemd unit files 
 --> grep 'java' /etc/systemd/system/*.service 

Delete nodebot_user 
 --> userdel nodebot_user 

Change to the /var/log/apt/history.log directory 
 --> cd /var/log/apt/history.log 

Grant write to group on dev.env 
 --> chmod g+w dev.env 

Get first 100 bytes from file 
 --> dd if=input.txt of=first100 bs=1 count=100 

Delete group human_resources 
 --> groupdel human_resources 

Allow read for others 
 --> chmod o+r view.txt 

List files in /var/log, sorted by modification time 
 --> ls -lt /var/log 

Lock zara's password login 
 --> passwd -l zara 

Pause for 5 seconds 
 --> sleep 5 

What are the contents of /var/www, shown recursively? 
 --> ls -R /var/www 

Show only interfaces with IPv6 addresses 
 --> ifconfig | grep inet6 

Sync files using checksum for file comparison instead of size+mtime 
 --> rsync -avzc --checksum source_dir/ destination_dir/ 

Query the AAAA (IPv6) record for yahoo.com 
 --> host -t AAAA yahoo.com 

Sync files and copy unsafe symlinks as regular files 
 --> rsync -avz --copy-unsafe-links source_dir/ destination_dir/ 

Deny all permissions to others on notes.txt 
 --> chmod o-rwx notes.txt 

Delete rebecca from beta_testers group 
 --> gpasswd -d rebecca beta_testers 

Select pane using numbers 
 --> Ctrl-b q 

Open file and enable mouse 
 --> vim -c 'set mouse=a' file.txt 

Create a file called 'draft.docx' in the Documents folder 
 --> touch ~/Documents/draft.docx 

Print memory usage 
 --> echo "Mem: $(free -h)" 

List all TCP sockets using IPv4 
 --> ss -4 -t 

Run mtr to facebook.com and show ASN information 
 --> mtr --aslookup facebook.com 

List all sockets and filter for CLOSE-WAIT state 
 --> ss state close-wait 

Display kernel name, release, and version 
 --> uname -srv 

Display all system information except kernel name and machine hardware name 
 --> uname -a 

Run mtr to google.com and use IPv6 only 
 --> mtr -6 google.com 

Dump environment before running deployment script 
 --> env 

Display your current directory and store it in a variable for later use in a script. 
 --> current_dir=$(pwd) 

Zip all text files into texts.zip 
 --> zip texts.zip *.txt 

Create a directory called 'pictures' in your home 
 --> mkdir ~/pictures 

Run atop and show only processes for user 'root' 
 --> atop -u root 

Query the A record for yahoo.com and display the command used 
 --> echo 'host yahoo.com'; host yahoo.com 

Enable allmulti on ens33 
 --> sudo ifconfig ens33 allmulti 

Add alpha_testers group 
 --> groupadd alpha_testers 

Add api_developers as a group 
 --> groupadd api_developers 

Switch debug_access to debug_team 
 --> groupmod -n debug_team debug_access 

Show all interfaces with their multicast group memberships 
 --> ifconfig -a | grep MULTICAST 

Unmount the external hard drive from /mnt/usbdrive 
 --> umount /mnt/usbdrive 

List users with zero idle time 
 --> w | awk '$5 == "." {print $1}' 

Unmount samba share 
 --> umount /mnt/samba 

Make test team the group for test_results.txt 
 --> chgrp test test_results.txt 

Mount partition with nosuid option 
 --> mount -o nosuid /dev/sdp1 /mnt/nosuid 

Change to the directory /usr/local/lib 
 --> cd /usr/local/lib 

Create a file called 'yesterday.txt' and set its timestamp to yesterday 
 --> touch -d 'yesterday' yesterday.txt 

Remove all files in the /tmp directory recursively 
 --> rm -rf /tmp/* 

Make ext4 on USB device /dev/sdc6 
 --> mkfs.ext4 /dev/sdc6 

Clear the terminal screen 
 --> clear 

Print all lines longer than 30 characters 
 --> awk 'length > 30' file.txt 

Alias to go to root 
 --> alias root='cd /' 

Open file and start in replace mode 
 --> vim -c 'normal! R' file.txt 

Change to the /var/log/Xorg.failsafe.log directory 
 --> cd /var/log/Xorg.failsafe.log 

Run htop and display process tree and sort by CPU 
 --> htop -t --sort-key=CPU% 

Run mtr to google.com with 200 cycles in report mode 
 --> mtr -r -c 200 google.com 

Create a directory called 'lib' in your home 
 --> mkdir ~/lib 

Find files in /data modified in the last hour 
 --> find /data -mmin -60 

Check users accessing via pts/1 
 --> w | grep pts/1 

Create a file called 'tomorrow.txt' and set its timestamp to tomorrow 
 --> touch -d 'tomorrow' tomorrow.txt 

Run mtr to github.com with ASN lookup, 150 cycles, interval 0.75s, and output in report-wide format 
 --> mtr --aslookup --report-wide -c 150 -i 0.75 github.com 

Zip up project files index.html, style.css and app.js into web.zip 
 --> zip web.zip index.html style.css app.js 

Detach from current screen session 
 --> Ctrl-a d 

Display disk usage in human-readable format for /home 
 --> du -h /home 

List all TCP sockets in FIN-WAIT-1 state for Apache to network 193.233.7/24 
 --> ss -o state fin-wait-1 '( sport = :http or sport = :https )' dst 193.233.7/24 

Sync files and specify a custom daemon config 
 --> rsync -avz --config=/etc/rsyncd.conf source_dir/ destination_dir/ 

Query the A record for yahoo.com and display output in uppercase and color 
 --> host yahoo.com | tr '[:lower:]' '[:upper:]' | lolcat 

Sync files with human-readable sizes 
 --> rsync -avh source_dir/ destination_dir/ 

Show only lines containing '404' 
 --> sed -n '/404/p' access.log 

Ping facebook.com with interval of 2 seconds 
 --> ping -i 2 facebook.com 

Run 'printenv' with env 
 --> env printenv 

Zip docker-compose.yml and Dockerfile 
 --> zip docker.zip docker-compose.yml Dockerfile 

Ping google.com with 4096 byte packets and 37 times 
 --> ping -s 4096 -c 37 google.com 

Remount root filesystem as read-only 
 --> mount -o remount,ro / 

Remove rajeev_k user 
 --> userdel rajeev_k 

Display memory usage in megabytes with detailed stats, update every 15 seconds, 5 times 
 --> free -m -l -s 15 -c 5 

Set NetworkManager hostname 
 --> nmcli general hostname myserver.local 

Switch to archive_user 
 --> su archive_user 

Unmount home partition 
 --> umount /home 

Create a file called 'icons' in your home 
 --> touch ~/icons 

Create ops_team group 
 --> groupadd ops_team 

Get quick snapshot of user tasks 
 --> w 

Query A record for google.com and set +noadditional 
 --> dig google.com +noadditional 

Send SIGTERM to jobs in current shell 
 --> kill -TERM %1 %2 

Create a directory called 'python3' in /usr/bin 
 --> mkdir /usr/bin/python3 

Copy all files in /var/log/Xorg.1.log to /backup/xorg1 
 --> cp /var/log/Xorg.1.log/* /backup/xorg1/ 

Add security_team group 
 --> groupadd security_team 

Use fdisk to manage /dev/nvme1n1 
 --> fdisk /dev/nvme1n1 

Send SIGINT to all vim processes 
 --> pkill -INT vim 

Reload the mysql service 
 --> service mysql reload 

Show all connections using IPv6 
 --> netstat -6 

Display memory usage in megabytes, wide output 
 --> free -m -w 

Add a connection with a specific IPv4 DHCP hostname flags 
 --> nmcli connection add type ethernet con-name "My Ethernet" ifname eth0 ipv4.dhcp-hostname-flags "fqdn" 

Change to the directory /usr/share/emacs 
 --> cd /usr/share/emacs 

Compress the R script analysis.R using bzip2 
 --> bzip2 analysis.R 

Clear entire screen 
 --> clear 

Run mtr to facebook.com with 100 cycles, interval 0.75s, and output in wide format 
 --> mtr --wide -c 100 -i 0.75 facebook.com 

Run mtr to 8.8.8.8 and use a packet size of 2000 bytes 
 --> mtr -s 2000 8.8.8.8 

Replace the word 'apple' with 'orange' in fruits.txt 
 --> sed 's/apple/orange/g' fruits.txt 

Traceroute to google.com using only IPv4 addresses 
 --> traceroute -4 google.com 

Change to the /var/log/cron directory 
 --> cd /var/log/cron 

Restart the network manager 
 --> sudo systemctl restart NetworkManager 

Delete qa_specialists 
 --> groupdel qa_specialists 

Build ext3 on external drive /dev/sdh4 
 --> mkfs.ext3 /dev/sdh4 

Show kernel messages with emerg, alert, crit, err, warn levels 
 --> dmesg --level=emerg,alert,crit,err,warn 

Search for font files 
 --> locate '*.ttf' 

Set crew group to scene.mov 
 --> chgrp crew scene.mov 

Reset dave's password 
 --> passwd dave 

Download a file and append to a log file 
 --> wget -o download.log http://example.com/file.zip 

Start parted for USB drive /dev/sdh 
 --> parted /dev/sdh 

Show me the contents of the current directory and all subdirectories, with file type indicators 
 --> ls -RF 

Show kernel messages with reltime timestamps 
 --> dmesg --time-format=reltime 

Query A record for google.com and set +nomultiline 
 --> dig google.com +nomultiline 

Make a request with custom method 
 --> curl -X CUSTOM http://example.com 

Compress server.log using gzip 
 --> gzip server.log 

Query A record for google.com and use only IPv6 
 --> dig google.com -6 

Create a file called 'pictures' in your home 
 --> touch ~/pictures 

Display disk usage for all files and directories, excluding files and directories matching multiple patterns 
 --> du --exclude="*.log" --exclude="*.tmp" 

See if you ran any 'kill' commands 
 --> history | grep kill 

Create an alias for listing files as 'll' 
 --> alias ll='ls -alF' 

Simulate purge 
 --> sudo apt purge --simulate nginx 

Compress download.tar using gzip 
 --> gzip download.tar 

Get filesystem info of /dev/sdb3 
 --> blkid /dev/sdb3 

Export a connection to a file 
 --> nmcli connection export "My Connection" /path/to/export.conf 

Start the apache2 web server 
 --> service apache2 start 

Traceroute to github.com with max TTL 25 and 7 probes per hop 
 --> traceroute -m 25 -q 7 github.com 

Start make command in background and wait 
 --> make & wait 

Search logs in /var/log recursively for 'panic' 
 --> grep -r 'panic' /var/log 

Completely remove testapi 
 --> userdel -r testapi 

List all files in /data with details 
 --> find /data -type f -ls 

Assign datauser ownership of finance.db 
 --> chown datauser finance.db 

Compress the test.exe using gzip 
 --> gzip test.exe 

Start apache2 service 
 --> sudo systemctl start apache2 

Show all connections for a specific PID 
 --> sudo netstat -ap | grep 1234 

Change to a hidden directory called '.ssh' in your home 
 --> cd ~/.ssh 

Compress the export.csv file 
 --> gzip export.csv 

Add user devtest to ci group 
 --> gpasswd -a devtest ci 

Become training user 
 --> su training 

Wipe previously displayed data 
 --> clear 

Search for any file named config.json 
 --> locate config.json 

Check filesystem details of /dev/sdc6 
 --> blkid /dev/sdc6 

Ping facebook.com with 2048 byte packets and 17 times 
 --> ping -s 2048 -c 17 facebook.com 

List files in the current directory, one file per line 
 --> ls -1 

Remove guest123 and their files 
 --> userdel -r guest123 

Remove password lock for observer_1 
 --> passwd -u observer_1 

Add a connection with a specific UUID 
 --> nmcli connection add type ethernet con-name "My Ethernet" ifname eth0 uuid 00000000-0000-0000-0000-000000000000 

Make internal_collab group 
 --> groupadd internal_collab 

Display memory usage in human-readable format with old format, update every 7 seconds, 7 times 
 --> free -h -o -s 7 -c 7 

Show all connections and save output to a file 
 --> netstat -an > netstat_output.txt 

Download a file and ignore HSTS 
 --> wget --no-hsts https://example.com/file.zip 

Query the SOA record for yahoo.com 
 --> host -t SOA yahoo.com 

Display kernel name, machine hardware name, and hardware platform 
 --> uname -smi 

Go to the /media directory 
 --> cd /media 

Kill legacy service by name 
 --> killall inetd 

Restart the cron service 
 --> sudo systemctl restart cron 

Re-enable access for account manager1 
 --> passwd -u manager1 

Login as guest user 
 --> su guest 

Make a zip of the bin folder 
 --> zip -r bin.zip bin 

Make a GET request and save output to a file 
 --> curl -o output.html http://example.com 

Get list of active users 
 --> who 

Run mtr to yahoo.com and show output in raw format 
 --> mtr --raw yahoo.com 

Start sleep and use echo after wait 
 --> sleep 1 & wait; echo done 

Add new_user to metrics group 
 --> gpasswd -a new_user metrics 

Recursively move the /var directory to /backup/var 
 --> mv /var /backup/var/ 

Run script with temporary proxy settings 
 --> env http_proxy=http://127.0.0.1:3128 ./script.sh 

Traceroute to 8.8.8.8 bypassing routing tables 
 --> traceroute -r 8.8.8.8 

Display memory usage in kilobytes with total 
 --> free -k -t 

Create a file called 'temp' in /home/charlie 
 --> touch /home/charlie/temp 

Make a directory called 'src' in /usr/local 
 --> mkdir /usr/local/src 

Rename a file called 'oldname.txt' to 'newname.txt' 
 --> mv oldname.txt newname.txt 

Open file without init/reset but preserve capabilities 
 --> less -K file.txt 

Add user helen to groups docker and wheel 
 --> usermod -aG docker,wheel helen 

Set ENVIRONMENT=staging before running shell 
 --> env ENVIRONMENT=staging bash 

Use `/bin/pwd` to display your current directory. 
 --> /bin/pwd 

Show configuration for all active network interfaces 
 --> ifconfig 

Store the present working directory in a variable called dir and print it. 
 --> dir=$(pwd); echo $dir 

Display memory usage in bytes with wide output, update every 5 seconds, 3 times 
 --> free -b -w -s 5 -c 3 

Delete sneha account 
 --> userdel sneha 

Overwrite beginning of file 
 --> dd if=newheader.bin of=oldfile.img conv=notrunc 

Sync files with compression during transfer 
 --> rsync -avz source_dir/ destination_dir/ 

Wait after background docker run 
 --> docker run nginx & wait 

List all files with details, unsorted 
 --> ls -lU 

Restrict test_account password entry 
 --> passwd -l test_account 

Find logrotate configuration 
 --> locate logrotate.conf 

Show only remote users 
 --> w | grep '(' 

Run mtr to facebook.com and set the number of pings per hop to 30 
 --> mtr -c 30 facebook.com 

Run Flask app without interruption 
 --> nohup flask run & 

Connect with dynamic SOCKS proxy 
 --> ssh -D 1080 user@hostname 

List all windows in tmux 
 --> Ctrl-b w 

Compress all js files into frontend.zip 
 --> zip frontend.zip *.js 

Change password of developer1 
 --> passwd developer1 

Open vim in compatible mode 
 --> vim -C file.txt 

Create a file called 'applications' in your home 
 --> touch ~/applications 

Remove all files in /var/log/apache2 
 --> rm /var/log/apache2/* 

Remove priya and clean up files 
 --> userdel -r priya 

Run fdisk to list /dev/vde 
 --> fdisk -l /dev/vde 

Reboot cron job 
 --> echo '@reboot /reboot.sh' | crontab - 

Ping example.com 20 times with 0.5 second interval 
 --> ping -c 20 -i 0.5 example.com 

Display block information for /dev/sdc5 
 --> blkid /dev/sdc5 

Delete all HTML tags 
 --> sed 's/<[^>]*>//g' file.html 

Use bzip2 for index.html 
 --> bzip2 index.html 

Display disk usage for all files and directories, using block size of 128G 
 --> du -B 128G 

Sync files with progress indicator 
 --> rsync -avP source_dir/ destination_dir/ 

Enable ARP on an interface 
 --> sudo ifconfig eth0 arp 

Run top and show summary only, no task list 
 --> top -b -n 1 | head -n 12 

Display memory usage in bytes, no buffers/cache line 
 --> free -b -o 

Kill all java processes by exact name 
 --> killall -e java 

Ping google.com with 7 second timeout and 135 times 
 --> ping -W 7 -c 135 google.com 

Move all files in the current directory to /tmp and keep context 
 --> mv --preserve=context * /tmp/ 

Delay 2.75 minutes 
 --> sleep 165 

Run mtr to google.com and set the number of pings per hop to 40 
 --> mtr -c 40 google.com 

Move harry's home directory to /data/harry 
 --> usermod -d /data/harry -m harry 

Compress the current directory contents into current.zip 
 --> zip -r current.zip . 

Reset command line UI 
 --> clear 

Assign IP 192.168.1.30 and disable ARP on eth6 
 --> sudo ifconfig eth6 192.168.1.30 -arp 

Copy a file 'aptitude.log' to /var/log/aptitude 
 --> cp aptitude.log /var/log/aptitude/ 

Skip first 512 bytes when copying 
 --> dd if=file.bin of=out.bin bs=512 skip=1 

Copy a file 'mail.log' to /var/log 
 --> cp mail.log /var/log/ 

Set home directory of guestacc to /srv/guest 
 --> usermod -d /srv/guest -m guestacc 

Query the A record for google.com with a timeout of 2 seconds 
 --> nslookup -timeout=2 google.com 

Add a new Ethernet connection with static IP and DNS 
 --> nmcli connection add type ethernet con-name "Static Ethernet DNS" ifname eth0 ip4 192.168.1.100/24 gw4 192.168.1.1 ipv4.dns "8.8.8.8 8.8.4.4" 

Add user ashwin to the devops group 
 --> usermod -aG devops ashwin 

Search for files in Pictures folder 
 --> locate Pictures 

Run mtr to 8.8.8.8 and set interval to 5 seconds 
 --> mtr -i 5 8.8.8.8 

Show your current directory path, even if you navigated there using a symlink. 
 --> pwd -L 

Ping github.com and set TTL to 255 
 --> ping -t 255 github.com 

Show disk usage for all filesystems, filter for nfs filesystems 
 --> df -hT | grep 'nfs' 

Show commands that involved 'python' 
 --> history | grep python 

List all sockets for a specific source IP 
 --> ss src 192.168.1.10 

Copy a file 'logfile' to /var/log and keep permissions 
 --> cp -p logfile /var/log/ 

Copy a file 'cron' to /var/log 
 --> cp cron /var/log/ 

Delete line 10 
 --> sed '10d' file.txt 

Copy a directory 'src' and all its contents to /opt 
 --> cp -r src /opt/ 

Find files in /home modified more than 7 days ago 
 --> find /home -mtime +7 -type f 

Change beta_users to beta_testers 
 --> groupmod -n beta_testers beta_users 

Traceroute to github.com with max TTL 10 
 --> traceroute -m 10 github.com 

Compress audio_record.mp3 using gzip 
 --> gzip audio_record.mp3 

Set script executable for cron use 
 --> chmod 755 /myscript.sh 

Run backup job with niceness +16 
 --> nice -n 16 ./backup.sh 

Display disk usage for all files and directories up to depth 2 
 --> du -d 2 

Display total disk usage in human-readable format 
 --> du -ch 

Show me the files in my home folder 
 --> ls ~ 

Query A record for google.com and set +sigchase 
 --> dig google.com +sigchase 

Enable device autoconnect 
 --> nmcli device set eth0 autoconnect yes 

Send SIGSTOP to all sleep processes 
 --> pkill -STOP sleep 

Re-enable login for user helpline 
 --> passwd -u helpline 

Connect with public key authentication only 
 --> ssh -o PubkeyAuthentication=yes -o PasswordAuthentication=no user@hostname 

Change to the /var/log/ppp directory 
 --> cd /var/log/ppp 

Show all connections and update every 2 seconds 
 --> watch -n 2 netstat 

Unmount multi-user shared drive 
 --> umount /mnt/shared 

Assign finance group to file budget.xlsx 
 --> chgrp finance budget.xlsx 

Create user ankit with groups wheel and docker 
 --> useradd -G wheel,docker ankit 

Remove gpu_access group 
 --> groupdel gpu_access 

Ping 8.8.4.4 with a custom pattern 
 --> ping -p ff 8.8.4.4 

Remove test_branch team 
 --> groupdel test_branch 

List all contents of /tmp, sorted by size, largest first 
 --> ls -S /tmp 

Start log rotation manually 
 --> nohup ./rotate_logs.sh & 

Query TLSA record for google.com 
 --> dig google.com TLSA 

Switch to another user's home directory, for user 'alice' 
 --> cd ~alice 

Alias to start local HTTP server 
 --> alias serve='python3 -m http.server' 

Find .log files in /opt larger than 500KB 
 --> find /opt -size +500k -name "*.log" 

List jobs in weekly cron directory 
 --> ls /etc/cron.weekly/ 

Change password for user john 
 --> passwd john 

Add user arman to testers group 
 --> gpasswd -a arman testers 

Change authentication of ci_runner 
 --> passwd ci_runner 

List all sockets for a specific user (e.g., UID 1000) 
 --> ss -p | grep uid=1000 

Display disk usage for all directories in /usr, excluding *.so files 
 --> du -h --exclude="*.so" /usr 

Query A record for google.com with ndots 2 
 --> dig google.com +ndots=2 

Mount partition as user 
 --> mount -o uid=1000,gid=1000 /dev/sds1 /mnt/user 

Create a file called 'test_output' in your home 
 --> touch ~/test_output 

Unmount USB partition mounted at /media/usbdisk 
 --> umount /media/usbdisk 

Remove user dave 
 --> userdel dave 

Add samir to codegroup 
 --> gpasswd -a samir codegroup 

Show all processes for a session leader 
 --> ps -s 1 

Delete research_team group 
 --> groupdel research_team 

Set mode 755 to all .sh files 
 --> chmod 755 *.sh 

Show kernel messages with log level set to 4 
 --> dmesg -n 4 

Copy all files in the current directory to /tmp and keep everything and prompt before overwrite 
 --> cp -a -i * /tmp/ 

Move all files in /var/log/fsck to /backup/fsck 
 --> mv /var/log/fsck/* /backup/fsck/ 

Find a copy of python3 
 --> locate python3 

Run a shell command persistently 
 --> nohup bash -c 'while true; do echo hello; sleep 1; done' & 

Change login key for deployuser 
 --> passwd deployuser 

Compress index.md and license.txt into release.zip 
 --> zip release.zip index.md license.txt 

Reverse search in follow 
 --> less -R +F file.txt 

Compress the python file module.py 
 --> bzip2 module.py 

Display history with date and time 
 --> HISTTIMEFORMAT="%c " history 

Remove training_dept 
 --> groupdel training_dept 

Set automatic window renaming 
 --> set -g allow-rename on 

Reactivate the locked account demo 
 --> passwd -u demo 

Switch to monitoring user 
 --> su monitoring 

Make data_processing group 
 --> groupadd data_processing 

Run mtr to amazon.com and show both hostnames and IP addresses 
 --> mtr -b amazon.com 

Make daniel the owner of setup.py 
 --> chown daniel setup.py 

Search bash config for 'alias' 
 --> grep 'alias' ~/.bashrc 

Count the number of lines in file.txt 
 --> awk 'END {print NR}' file.txt 

Free up the terminal display area 
 --> clear 

Find all XML files 
 --> locate '*.xml' 

Display memory usage in bytes, update every second indefinitely 
 --> free -b -s 1 

Query A record for google.com and set +noquestion 
 --> dig google.com +noquestion 

Get partition UUID for /dev/sdf4 
 --> blkid /dev/sdf4 

Assign arjun to docker-admins group 
 --> gpasswd -a arjun docker-admins 

Query MX record for google.com and display only answer section 
 --> dig google.com MX +noall +answer 

Print the current working directory, resolving any symbolic links. 
 --> pwd -P 

Remove lock on account web_admin 
 --> passwd -u web_admin 

Remove kevin from maintainers group 
 --> gpasswd -d kevin maintainers 

Ping amazon.com and set deadline to 15 seconds 
 --> ping -w 15 amazon.com 

Pause for 200 seconds 
 --> sleep 200 

Make test_lab group 
 --> groupadd test_lab 

Show disk usage for all filesystems including dummy filesystems 
 --> df -a 

Find all Python files 
 --> locate '*.py' 

Move to the /sys directory 
 --> cd /sys 

Display disk usage for all files and directories, using block size of 512T 
 --> du -B 512T 

List command being executed by user1 
 --> w user1 

Show only the IPv6 address for eth0 
 --> ifconfig eth0 | grep inet6 

Create alias for running Python scripts 
 --> alias runpy='python3 main.py' 

Run backup with profiling 
 --> nice -n 8 time rsync -a /source /dest 

Show who is logged in and what they are doing 
 --> w 

Securely wipe a drive using random data 
 --> dd if=/dev/urandom of=/dev/sdX bs=1M 

Delete root's crontab 
 --> sudo crontab -r 

Continuously display memory usage every 2 seconds, 4 times 
 --> free -s 2 -c 4 

Find .log files in /srv larger than 10MB 
 --> find /srv -name "*.log" -a -size +10M 

Run job on weekends at 6 AM 
 --> crontab -e # 0 6 * * 6,0 /weekend.sh 

Connect with connection persistence 
 --> ssh -o ControlPersist=600 user@hostname 

Change group of vikas to techlead 
 --> usermod -g techlead vikas 

Show users logged in via SSH 
 --> who 

Create junior_devs group 
 --> groupadd junior_devs 

Check disk space with df 
 --> sudo df -h 

Update dev_team group name to software_dev 
 --> groupmod -n software_dev dev_team 

Show files opened over SSH 
 --> lsof -i tcp:ssh 

Delete a file called 'script.sh' in the current directory 
 --> rm script.sh 

Display disk usage for all files in /etc 
 --> du -a /etc 

Apply bzip2 to resume.docx 
 --> bzip2 resume.docx 

Delete container_admins 
 --> groupdel container_admins 

Run mtr to github.com and use UDP instead of ICMP 
 --> mtr --udp github.com 

Remove all permissions from others on logs 
 --> chmod o= logs 

Add a connection with a specific IPv4 DHCP route metric 
 --> nmcli connection add type ethernet con-name "My Ethernet" ifname eth0 ipv4.dhcp-route-metric 100 

Run mtr to example.com in report mode 
 --> mtr -r example.com 

Remove kiran with files 
 --> userdel -r kiran 

Create a directory called 'notes' in your home directory 
 --> mkdir ~/notes 

Print only unique values from the first column 
 --> awk '!seen[$1]++' data.txt 

Create a WiFi hotspot 
 --> nmcli device wifi hotspot 

Get rid of all previous terminal logs 
 --> clear 

Lock dev_admin login using password 
 --> passwd -l dev_admin 

Query the SPF record for yahoo.com 
 --> nslookup -type=SPF yahoo.com 

Identify block info for /dev/sdd3 
 --> blkid /dev/sdd3 

Ping github.com with 4096 byte packets and 19 times 
 --> ping -s 4096 -c 19 github.com 

Sync files and specify a custom daemon timeout 
 --> rsync -avz --daemon --timeout=60 source_dir/ destination_dir/ 

Run htop and display tree view 
 --> htop -t 

Kill by name matching wildcard 
 --> killall 'python*' 

What are the file types in the current directory? 
 --> ls -F 

Add execute to user and group 
 --> chmod ug+x runme 

Add intern user with home at /interns/john 
 --> useradd -m -d /interns/john john 

Query the TXT record for google.com 
 --> host -t TXT google.com 

Display available system updates 
 --> watch 'apt update' 

Show only the interface flags for eth0 
 --> ifconfig eth0 | grep flags 

Show disk usage for all files in /var 
 --> find /var -type f -print | xargs du -sh 

Extract IPv4 addresses from text 
 --> awk '/[0-9]+(\.[0-9]+){3}/' file.txt 

Prevent lisa from using her password 
 --> passwd -l lisa 

Add user ramesh to group network 
 --> usermod -aG network ramesh 

Display kernel release, machine hardware name, and operating system 
 --> uname -rmo 

Display memory usage with detailed low and high memory stats and total 
 --> free -l -t 

Kill all screen sessions 
 --> pkill screen 

Copy all files in /var/log/alternatives.log to /backup/alternatives 
 --> cp /var/log/alternatives.log/* /backup/alternatives/ 

Check active user sessions 
 --> who 

Lock user archiveuser 
 --> usermod -L archiveuser 

Show only listening sockets and continuously update 
 --> netstat -lc 

Assign researchers group to paper.pdf 
 --> chgrp researchers paper.pdf 

Reset password of user zara 
 --> passwd zara 

Display help for the free command 
 --> free --help 

Check if docker service is enabled 
 --> systemctl is-enabled docker 

Delete all zero-byte files in /tmp 
 --> find /tmp -type f -size 0 -exec rm {} \; 

Change to the directory /var/log using an absolute path 
 --> cd /var/log 

Send SIGFPE to PID 5657 
 --> kill -FPE 5657 

Make a request using HTTP/1.1 
 --> curl --http1.1 http://example.com 

Show logs with UTC timestamps 
 --> journalctl --utc 

Ping github.com with 5 second interval and 3 packets 
 --> ping -i 5 -c 3 github.com 

Get a new clean terminal interface 
 --> clear 

Unlock guest_temp user 
 --> passwd -u guest_temp 

Remove sandbox2 and all files 
 --> userdel -r sandbox2 

Assign netmask 255.255.255.0 to ens33 
 --> sudo ifconfig ens33 netmask 255.255.255.0 

Remove oliver from system 
 --> userdel oliver 

Generate SSH key pair (ED25519) 
 --> ssh-keygen -t ed25519 

Display disk usage for all files and directories, not following symlinks 
 --> du -P 

Traceroute to google.com with debugging enabled 
 --> traceroute -d google.com 

Show me the files in the parent directory with full details 
 --> ls -l .. 

Run mtr to google.com and set maximum TTL to 60 
 --> mtr -m 60 google.com 

Query the DNSKEY record for google.com 
 --> nslookup -type=DNSKEY google.com 

Timeout before force kill 
 --> pkill -15 -i 5 sshd 

Display all system information except kernel name 
 --> uname -arnvmoip 

Look for files in /etc directory 
 --> locate /etc/ 

Add entry to /etc/fstab 
 --> sudo nano /etc/fstab 

Add a connection with a specific IPv4 DHCP use hostname 
 --> nmcli connection add type ethernet con-name "My Ethernet" ifname eth0 ipv4.dhcp-use-hostname yes 

Create a file called 'documents' in your home 
 --> touch ~/documents 

Run top and highlight running tasks 
 --> top -z 

Run command inside tmux with nohup 
 --> nohup tmux new-session -d 'top' 

Compress the file notes.txt 
 --> gzip notes.txt 

Show kernel messages with ctime timestamps 
 --> dmesg --time-format=ctime 

Query the AAAA (IPv6) record for example.com 
 --> host -t AAAA example.com 

Ping amazon.com and use IPv6 
 --> ping6 amazon.com 

Run kubectl command persistently 
 --> nohup kubectl get pods -w & 

Display all users currently logged in with activity 
 --> w 

Allow group to read and write to access.log 
 --> chmod g+rw access.log 

Ping facebook.com with 3 second timeout and 67 times 
 --> ping -W 3 -c 67 facebook.com 

Run mtr to facebook.com and show output in wide format 
 --> mtr --wide facebook.com 

Show last 20 lines 
 --> tail -n 20 file.txt 

Connect with visual host key 
 --> ssh -o VisualHostKey=yes user@hostname 

Create a file called 'mail.log' in /var/log 
 --> touch /var/log/mail.log 

Find all docker commands used before 
 --> history | grep docker 

Move all files in /mnt/usb to /media/backup 
 --> mv /mnt/usb/* /media/backup/ 

Unmount development drive 
 --> umount /mnt/dev 

Unmount NFS share with force option 
 --> umount -f /mnt/nfs 

Create alias to show all environment variables 
 --> alias envs='printenv' 

Show me a detailed list of all files in /etc, sorted by time 
 --> ls -lat /etc 

Use su to log in as postgres 
 --> su postgres 

Delete support_1 group 
 --> groupdel support_1 

List all sockets with extended information 
 --> ss -e 

Create alias to go to home directory 
 --> alias home='cd ~' 

Re-enable password login for build_user 
 --> passwd -u build_user 

Start fresh in terminal 
 --> clear 

Launch git pull with nohup 
 --> nohup git pull & 

Show disk usage in megabytes 
 --> df -m 

Display disk usage for all files in /etc, excluding README files 
 --> du -h --exclude="README*" /etc 

Remove steve from demo group 
 --> gpasswd -d steve demo 

Traceroute to example.com sending 5 probes per hop 
 --> traceroute -q 5 example.com 

Remove temp_user from testers group 
 --> gpasswd -d temp_user testers 

Change group of a file 
 --> sudo chgrp admin /etc/passwd 

Add admin1 to superusers group 
 --> gpasswd -a admin1 superusers 

Print and clear the kernel ring buffer 
 --> dmesg -c 

Search for 'password' in all files under /etc 
 --> grep -r 'password' /etc 

Display kernel name and release 
 --> uname -sr 

Move all files in /var/log/maillog to /backup/maillog 
 --> mv /var/log/maillog/* /backup/maillog/ 

Change group for notes.md to writers 
 --> chgrp writers notes.md 

Toggle pane synchronization 
 --> Ctrl-b :setw synchronize-panes 

Open the current user's crontab for editing 
 --> crontab -e 

Run file copy in background and wait 
 --> cp file1 file2 & wait 

Run system upgrade inside screen 
 --> screen -S upgrade sudo apt update && sudo apt upgrade 

Change the primary group of devtest to qa 
 --> usermod -g qa devtest 

Create a directory called 'temp' in /home/grace 
 --> mkdir /home/grace/temp 

Use bzip2 for compressing the text.txt 
 --> bzip2 text.txt 

Extract list of ttys in use 
 --> w | awk '{print $2}' | sort | uniq 

Change shell access password for testadmin 
 --> passwd testadmin 

View UUID of external drive /dev/sdd7 
 --> blkid /dev/sdd7 

Copy binary file and strip metadata 
 --> dd if=file.bin of=clean.bin bs=1 conv=sync,noerror 

Create freelancers group 
 --> groupadd freelancers 

Run atop and show only processes with high CPU usage 
 --> atop | grep CPU 

Add a bond connection 
 --> nmcli connection add type bond con-name MyBond ifname bond0 mode active-backup 

Concatenate all .txt files 
 --> cat *.txt 

Wipe everything on the CLI screen 
 --> clear 

Rename 'logfile' to 'logfile.old' in /var/log 
 --> mv /var/log/logfile /var/log/logfile.old 

Print with escape sequences 
 --> echo -e "Line1\nLine2" 

Fill disk with data until full 
 --> dd if=/dev/zero of=fillfile bs=1M 

Execute command with number 101 from history 
 --> !101 

Print uptime 
 --> echo "Uptime: $(uptime -p)" 

Create a zip for deployment folder 
 --> zip -r deployment.zip deployment 

Display memory usage in megabytes, update every 1 second, 10 times 
 --> free -m -s 1 -c 10 

Create a file called 'yesterday.txt' and set its timestamp to yesterday 
 --> touch -d 'yesterday' yesterday.txt 

Download a file and mirror a website with output directory 
 --> wget --mirror --directory-prefix=/tmp http://example.com/ 

Set 755 recursively on /opt/scripts 
 --> chmod -R 755 /opt/scripts 

Update documentation_review to doc_review 
 --> groupmod -n doc_review documentation_review 

Show files opened by users alice and bob 
 --> lsof -u alice,bob 

Ping google.com with 512 byte packets and 13 times 
 --> ping -s 512 -c 13 google.com 

Traceroute to 8.8.8.8 using ICMP echo requests 
 --> traceroute -I 8.8.8.8 

Scan for available WiFi networks on a specific interface 
 --> nmcli device wifi list ifname wlan0 

Start long-running process with nohup 
 --> nohup longtask.sh & 

Create a file called 'fonts' in your home 
 --> touch ~/fonts 

Add a connection with a specific IPv6 address generation mode 
 --> nmcli connection add type ethernet con-name "My Ethernet" ifname eth0 ipv6.addr-gen-mode eui64 

Check blkid info for /dev/sdh7 
 --> blkid /dev/sdh7 

List all partition tables 
 --> fdisk -l 

Search for 'connection lost' in dmesg output 
 --> dmesg | grep 'connection lost' 

Show disk usage for all filesystems, display only the mount point and available space 
 --> df -h --output=target,avail 

Find files opened by process ID 1234 
 --> lsof -p 1234 

Show logs for the last 10 minutes 
 --> journalctl --since '10 minutes ago' 

Run htop and show only processes with priority 20 
 --> htop | awk '$17 == 20' 

Log in as user alice 
 --> su alice 

Display disk usage with last access time in custom format 
 --> du --time=atime --time-style=+%Y-%m-%d 

Delete student_temp 
 --> userdel student_temp 

Print with printf formatting 
 --> printf "%s\n" "Hello" 

Show all network interfaces with their flags 
 --> ifconfig -a 

List all TCP sockets in the ESTABLISHED state 
 --> ss -t state established 

Display memory usage in human-readable format, detailed low and high memory stats 
 --> free -h -l 

Move a directory 'backup' to /tmp 
 --> mv backup /tmp/ 

Disable allmulti on enp0s3 
 --> sudo ifconfig enp0s3 -allmulti 

Display disk usage for all files and directories, using block size of 1E 
 --> du -B 1E 

Flush cron logs 
 --> sudo truncate -s 0 /var/log/syslog 

Connect and ignore user known hosts 
 --> ssh -o UserKnownHostsFile=/dev/null user@hostname 

Show all connections and display output in lowercase 
 --> netstat -an | tr '[:upper:]' '[:lower:]' 

Locate tar archives 
 --> locate '*.tar' 

Display all system information except kernel name and operating system 
 --> uname -arv 

Rename 'config.yaml' to 'config_backup.yaml' in /etc 
 --> mv /etc/config.yaml /etc/config_backup.yaml 

Combine pwd with an error message if a directory does not exist. 
 --> if [ ! -d "/some/dir" ]; then echo "Not found, current: $(pwd)"; fi 

Wait 888 seconds 
 --> sleep 888 

Open partition utility for SSD 
 --> fdisk /dev/nvme0n1 

Re-enable login for new_admin 
 --> passwd -u new_admin 

Change user24 as owner of notes.md 
 --> chown user24 notes.md 

Disable login access for intern_test 
 --> passwd -l intern_test 

Include zara in interns group 
 --> gpasswd -a zara interns 

Print column 2 if column 1 equals 'ERROR' 
 --> awk '$1 == "ERROR" {print $2}' log.txt 

Enable NetworkManager networking 
 --> nmcli networking on 

Display disk usage of a specific directory 
 --> du /var/lib 

Sync files and don't preserve device files 
 --> rsync -avz --no-D source_dir/ destination_dir/ 

Create a file called 'future.txt' and set its timestamp to next month 
 --> touch -d 'next month' future.txt 

Give user12 ownership of settings.conf 
 --> chown user12 settings.conf 

Unlock user account admin 
 --> usermod -U admin 

Chop long lines 
 --> less -S file.txt 

Create screen session and run ping 
 --> screen -S netwatch ping 8.8.8.8 

Run cargo build with niceness +3 
 --> nice -n 3 cargo build --release 

Change credentials of remote_user 
 --> passwd remote_user 

Send SIGQUIT to PID 1415 
 --> kill -3 1415 

Show all interfaces with their RX and TX packet statistics 
 --> ifconfig -a | grep 'RX packets\|TX packets' 

Print only the directory name of each file in /var 
 --> find /var -type f -exec dirname {} \; 

Show disk usage for all filesystems, display only the filesystem, used, and available space 
 --> df -h --output=source,used,avail 

Create a directory called 'etc' in your home 
 --> mkdir ~/etc 

Change to the /var/log/xrdp directory 
 --> cd /var/log/xrdp 

Create file system of type ext3 for /dev/sda6 
 --> mkfs.ext3 /dev/sda6 

Mount a UDF DVD 
 --> mount -t udf /dev/sr0 /mnt/dvd 

Change to the directory /usr/local/var 
 --> cd /usr/local/var 

Use fdisk to explore /dev/sdj 
 --> fdisk /dev/sdj 

Launch parted for managing disk layout 
 --> parted /dev/sda 

Query the MX record for example.com 
 --> host -t MX example.com 

Backup crontab 
 --> sudo crontab -l > backup.txt 

Open file with raw-control-chars 
 --> less -R file.txt 

Display kernel release, processor type, and operating system 
 --> uname -rpo 

Create a directory called 'docs' in /usr/local/share 
 --> mkdir /usr/local/share/docs 

Print Hello 
 --> echo "Hello" 

Update login credentials for steve 
 --> passwd steve 

Reboot job for backup restore 
 --> crontab -e # @reboot /restore.sh 

Change to the directory /etc/security 
 --> cd /etc/security 

List large files (>1GB) in /var with details 
 --> find /var -size +1G -exec ls -lh {} \; 

Show all connections and filter for established 
 --> netstat -an | grep 'ESTABLISHED' 

Lock tmux session 
 --> Ctrl-b : 

Find all comment lines in C file 
 --> grep '^//' main.c 

Add a connection with a specific IPv4 DHCP use NTP 
 --> nmcli connection add type ethernet con-name "My Ethernet" ifname eth0 ipv4.dhcp-use-ntp yes 

Dry run to list targets only 
 --> pkill -l sshd 

Mount proc on /proc 
 --> mount -t proc proc /proc 

Create a directory called 'archives' in your home 
 --> mkdir ~/archives 

See who is connected right now 
 --> who 

Query the SOA record for google.com 
 --> host -t SOA google.com 

Mount all filesystems in fstab 
 --> mount -a 

Zip the files doc1.txt and doc2.txt into documents.zip 
 --> zip documents.zip doc1.txt doc2.txt 

Clean shell terminal for new work 
 --> clear 

Display disk usage for all directories in /tmp, excluding temp files 
 --> du -h --exclude="*.tmp" /tmp 

Print list of active variables 
 --> env 

Block login using password for log_user 
 --> passwd -l log_user 

Use parted in script mode to show /dev/sdb 
 --> parted -s /dev/sdb print 

Use pwd in a script to ensure the user is in /home/user before proceeding. 
 --> if [ $(pwd) != "/home/user" ]; then echo "Please cd to /home/user"; exit 1; fi 

List the contents of my Documents folder 
 --> ls ~/Documents 

Remove unused_bot from system 
 --> userdel unused_bot 

Remove all files in /var/log/hp 
 --> rm /var/log/hp/* 

Modify a connection to disable IPv4 
 --> nmcli connection modify "My Connection" ipv4.method disabled 

Display disk usage summary for each subdirectory in /opt 
 --> du -h --max-depth=1 /opt 

Sleep for 2700 seconds 
 --> sleep 2700 

Recursively copy the /var directory to /backup/var 
 --> cp -r /var /backup/var/ 

Ping amazon.com with 10 second interval and 2 packets 
 --> ping -i 10 -c 2 amazon.com 

Find files in /var at least 2 levels deep 
 --> find /var -mindepth 2 -type f 

Display memory usage in human-readable format, update every 10 seconds indefinitely 
 --> free -h -s 10 

Add a GSM connection 
 --> nmcli connection add type gsm con-name MyGSM ifname ttyUSB0 apn internet 

Unmount the Windows share mounted at /mnt/smb 
 --> umount /mnt/smb 

Locate Python site-packages 
 --> locate site-packages 

Ping 1.1.1.1 with 4 second timeout and 109 times 
 --> ping -W 4 -c 109 1.1.1.1 

Restart the network service 
 --> service networking restart 

Change to the directory /usr/local/games 
 --> cd /usr/local/games 

Move all files in /home/user/Downloads to /mnt/usb 
 --> mv /home/user/Downloads/* /mnt/usb/ 

Install nginx 
 --> sudo apt install nginx 

Unmount the disk mounted at /media/data 
 --> umount /media/data 

Unlock database_user 
 --> passwd -u database_user 

Replace words with 3 letters with 'xxx' 
 --> sed -E 's/\b\w{3}\b/xxx/g' file.txt 

Display memory usage in megabytes, no buffers/cache line 
 --> free -m -o 

Compress access.log with bzip2 
 --> bzip2 access.log 

Display memory usage in kilobytes with total 
 --> free -k -t 

Run top and display only the last 10 lines 
 --> top -b -n 1 | tail -n 10 

Display memory usage in bytes, update every 15 seconds indefinitely 
 --> free -b -s 15 

Erase command history 
 --> history -c 

Search for docker-compose.yml 
 --> locate docker-compose.yml 

Display all system information except processor type 
 --> uname -asrvmoin 

Run htop with monochrome display 
 --> htop -C 

Kill processes preserving other instances 
 --> pkill -o nginx 

Make backup.tar.gz not accessible by others 
 --> chmod o= backup.tar.gz 

Traceroute to yahoo.com sending 5 probes per hop 
 --> traceroute -q 5 yahoo.com 

Run dnf upgrade with niceness +5 
 --> sudo nice -n 5 dnf upgrade 

Unmount the NFS share at /mnt/nfs 
 --> umount /mnt/nfs 

Monitor server uptime 
 --> watch uptime 

Show partition summary for virtual disk /dev/vdb 
 --> parted /dev/vdb print 

Compress project_info.txt 
 --> gzip project_info.txt 

Ping github.com with 2 second timeout and 105 times 
 --> ping -W 2 -c 105 github.com 

Backup LVM volume 
 --> dd if=/dev/mapper/vg-lv of=lvm_backup.img bs=1M 

Delete alpha_project group 
 --> groupdel alpha_project 

Disable NetworkManager networking 
 --> nmcli networking off 

Run Ansible playbook with niceness +7 
 --> nice -n 7 ansible-playbook site.yml 

Modify a connection to not auto-connect 
 --> nmcli connection modify "My Connection" connection.autoconnect no 

Format flash drive to ntfs on /dev/sdg6 
 --> mkfs.ntfs /dev/sdg6 

Start xargs in background and wait 
 --> cat files.txt | xargs -n1 -P4 cp & wait 

Go to the /var/log directory 
 --> cd /var/log 

Query A record for example.com 
 --> dig example.com 

Modify access password of user rachel 
 --> passwd rachel 

Run top and show only the top 5 CPU-consuming processes 
 --> top -b -n 1 | head -n 17 | tail -n 5 

Change team_rocket to rocket_team 
 --> groupmod -n rocket_team team_rocket 

Set a new password for alice 
 --> passwd alice 

Unmount drive with user ID set 
 --> umount /mnt/userdrive 

Exit tmux session 
 --> exit 

Change user credential for admin1 
 --> passwd admin1 

Monitor CPU temp inside screen 
 --> screen -S cputemp watch sensors 

Display memory usage in megabytes with old format, update every 15 seconds, 5 times 
 --> free -m -o -s 15 -c 5 

Prevent dev from logging in with password 
 --> passwd -l dev 

Switch to john's account 
 --> su john 

Set primary group of vinod to wheel 
 --> usermod -g wheel vinod 

Show all processes and pipe to less with no line wrapping 
 --> ps aux | less -S 

Format /dev/sda1 as ext4 
 --> mkfs.ext4 /dev/sda1 

Show me the contents of ~, but without any color 
 --> ls --color=none ~ 

Run top and show cumulative time for processes 
 --> top -S 

Reload firewall rules 
 --> sudo ufw reload 

Remove multiple packages 
 --> sudo dpkg -r pkg1 pkg2 

Show all active TCP and UDP connections and listening ports 
 --> netstat -a 

Create user devops with comment 'DevOps Team' 
 --> useradd -c 'DevOps Team' devops 

Access sandbox account 
 --> su sandbox 

Empty shell view for cleaner output 
 --> clear 

Prevent user from creating cron jobs 
 --> sudo echo 'username' >> /etc/cron.deny 

Show disk usage for a specific device 
 --> df /dev/sda1 

Change to the /var/log/pm-powersave directory 
 --> cd /var/log/pm-powersave 

Lift lock from sys_monitor 
 --> passwd -u sys_monitor 

Add a connection with a specific IPv6 method 
 --> nmcli connection add type ethernet con-name "My Ethernet" ifname eth0 ipv6.method auto 

Find uppercase words 
 --> grep -E '\b[A-Z]{2,}\b' text.txt 

Move all files in the current directory to /tmp and do not overwrite existing files 
 --> mv -n * /tmp/ 

Ping example.com 5 times 
 --> ping -c 5 example.com 

Print disk layout of /dev/nvme1n1p1 
 --> fdisk -l /dev/nvme1n1p1 

Start service in background and wait 
 --> start_service.sh & wait 

Use env to simulate cron job environment 
 --> env -i PATH=/usr/bin:/bin ./cron_script.sh 

Disable allmulti on ens33 
 --> sudo ifconfig ens33 -allmulti 

Change to the directory /usr/local/tmp 
 --> cd /usr/local/tmp 

Get blkid for /dev/sdi3 
 --> blkid /dev/sdi3 

Set login password for internal_user 
 --> passwd internal_user 

Who is connected via SSH 
 --> who | grep ssh 

Print lines where the length is greater than 20 
 --> awk 'length($0) > 20' file.txt 

Run cron job in different shell 
 --> SHELL=/bin/bash && crontab -e 

Print and count environment variables 
 --> env | wc -l 

Show processes with elapsed time 
 --> ps -eo pid,etime,cmd 

Copy all files in the current directory to /tmp and do not overwrite existing files 
 --> cp -n * /tmp/ 

Compress todo.md with bzip2 
 --> bzip2 todo.md 

Alias to show aliases 
 --> alias list='alias' 

Display memory usage in human-readable format, no buffers/cache line 
 --> free -h -o 

Run mtr to 8.8.8.8 and set the number of pings per hop to 4 
 --> mtr -c 4 8.8.8.8 

Copy a hidden file '.env' to the parent directory 
 --> cp .env ../ 

Delete a file called 'mail.err' in /var/log 
 --> rm /var/log/mail.err 

Find backup.tar.gz 
 --> locate backup.tar.gz 

Run htop in default mode 
 --> htop 

Add vivek to devcloud group 
 --> gpasswd -a vivek devcloud 

Show detailed information about all devices 
 --> nmcli device show 

Print all lines where the third column is greater than 100 
 --> awk '$3 > 100' data.txt 

Blank screen before showing menu 
 --> clear 

Search for the string 'TODO' in all Python files 
 --> grep 'TODO' *.py 

Give full permissions to all users on launch.sh 
 --> chmod 777 launch.sh 

Download a file and mirror a website with output file, document, and directory 
 --> wget --mirror --output-file=log.txt --output-document=output.html --directory-prefix=/tmp http://example.com/ 

Display disk usage for all files and directories, sorted in reverse order by size 
 --> du -ah | sort -hr 

Update the group name from marketing to digital_marketing 
 --> groupmod -n digital_marketing marketing 

Query the SRV record for _sip._tcp.example.com 
 --> host -t SRV _sip._tcp.example.com 

Display memory usage in bytes with old format and detailed stats, update every 5 seconds, 5 times 
 --> free -b -o -l -s 5 -c 5 

Show all interfaces with their status (NOARP) 
 --> ifconfig -a | grep NOARP 

Alias to restart network 
 --> alias netr='sudo systemctl restart NetworkManager' 

Run top and show only running processes 
 --> top -i 

Install MySQL server 
 --> sudo apt install mysql-server 

Copy all files in the current directory to /tmp and keep everything and keep everything 
 --> cp -a -a * /tmp/ 

Use fdisk to view SSD partition table 
 --> fdisk -l /dev/nvme0n1 

Make auditors the group of annual_audit.pdf 
 --> chgrp auditors annual_audit.pdf 

Query A record for google.com and set +topdown 
 --> dig google.com +topdown 

View full environment details 
 --> env 

Ping yahoo.com and show timestamp for each reply 
 --> ping -D yahoo.com 

Copy all files in the /etc directory to /backup/etc 
 --> cp /etc/* /backup/etc/ 

Create a directory called 'test' in your home directory 
 --> mkdir ~/test 

Restrict support_user's password access 
 --> passwd -l support_user 

Find lines starting with 'INFO' in log.txt 
 --> grep '^INFO' log.txt 

Unmount vfat mounted at /mnt/vfat 
 --> umount /mnt/vfat 

Switch user_ops group name to account_ops 
 --> groupmod -n account_ops user_ops 

Ping 1.1.1.1 with 256 byte packets and 11 times 
 --> ping -s 256 -c 11 1.1.1.1 

Wait for process that runs after a fork 
 --> ./child_process & wait 

Sync files and specify a custom daemon strict modes 
 --> rsync -avz --daemon --strict-modes source_dir/ destination_dir/ 

Find a file named README.md 
 --> locate README.md 

Reset login password for bob_admin 
 --> passwd bob_admin 

Send SIGHUP to all apache2 processes 
 --> killall -HUP apache2 

Start vim in silent mode 
 --> vim -es file.txt 

Set expiration date of zoe to 2026-01-01 
 --> usermod -e 2026-01-01 zoe 

Lock charlie's login credentials 
 --> passwd -l charlie 

Create a user called alice with a home directory 
 --> useradd -m alice 

Add new user ashwin with login shell disabled 
 --> useradd -s /sbin/nologin ashwin 

List all PNG and JPG files 
 --> ls *.png *.jpg 

Move all files in /var/log/mysql to /backup/mysql 
 --> mv /var/log/mysql/* /backup/mysql/ 

Login to testuser account with su 
 --> su testuser 

Compress the PDF file paper.pdf using bzip2 
 --> bzip2 paper.pdf 

Sleep for 1 minute 
 --> sleep 60 

Set password for test_user 
 --> passwd test_user 

Watch for new SSH keys added 
 --> watch 'ls -l ~/.ssh/authorized_keys' 

Reattach screen by session name 
 --> screen -r dockerlogs 

Create 2GB partition on /dev/sdc starting at 1GB 
 --> parted /dev/sdc mkpart primary ext4 1GB 3GB 

Check what root is currently doing 
 --> w root 

Make a request and show response size 
 --> curl -w 'Size: %{size_download} bytes\n' -s -o /dev/null http://example.com 

Add a connection with a specific IPv4 DHCP use domains 
 --> nmcli connection add type ethernet con-name "My Ethernet" ifname eth0 ipv4.dhcp-use-domains yes 

Sync files and specify a custom daemon post-xfer exec 
 --> rsync -avz --daemon --post-xfer-exec=/path/to/script source_dir/ destination_dir/ 

Send SIGHUP to all httpd processes 
 --> pkill -HUP httpd 

Remove all files in /var/log/pm-powersave 
 --> rm /var/log/pm-powersave/* 

Track number of users 
 --> watch 'who | wc -l' 

Query the MX record for github.com 
 --> nslookup -query=MX github.com 

Send SIGTTOU to PID 3233 
 --> kill -TTOU 3233 

List all logged in users 
 --> who 

Traceroute to yahoo.com using UDP port 53 
 --> traceroute -U yahoo.com 

Show kernel messages with buffer size 512 
 --> dmesg -s 512 

Check job with PID then wait 
 --> longrun & pid=$!; wait $pid 

Lock the account of user devbot 
 --> usermod -L devbot 

Reset authentication for user nick 
 --> passwd nick 

Mount hugepages filesystem 
 --> mount -t hugetlbfs none /mnt/huge 

Unmount SSHFS 
 --> fusermount -u /local/mountpoint 

Add a connection with a specific IPv4 DHCP use MTU 
 --> nmcli connection add type ethernet con-name "My Ethernet" ifname eth0 ipv4.dhcp-use-mtu yes 

Ping github.com with 8 second timeout and 117 times 
 --> ping -W 8 -c 117 github.com 

Run eslint with niceness +3 
 --> nice -n 3 eslint . --ext .js,.jsx 

Download a file and mirror a website 
 --> wget --mirror http://example.com/ 

Download a file from a URL 
 --> wget http://example.com/file.zip 

Alias to show current directory 
 --> alias cwd='pwd' 

Compress backup_2024.tar with bzip2 
 --> bzip2 backup_2024.tar 

Switch to systemadmin 
 --> su systemadmin 

Unblock access to report_user 
 --> passwd -u report_user 

Create user ethan with groups dev,qa 
 --> useradd -G dev,qa ethan 

Run mtr to facebook.com with 100 cycles, interval 2s, and output in wide format 
 --> mtr --wide -c 100 -i 2 facebook.com 

Copy all files in /var/log/messages to /backup/messages 
 --> cp /var/log/messages/* /backup/messages/ 

List all sockets with events (closed/destroyed) 
 --> ss --events 

Remove testing_users 
 --> groupdel testing_users 

Prevent sdev from password access 
 --> passwd -l sdev 

Replace 'cat' with 'dog' only in the first occurrence per line 
 --> sed 's/cat/dog/' animals.txt 

Kill all processes younger than 5 seconds named myapp 
 --> killall -n 5 myapp 

Open fdisk for inspection of bootable partitions 
 --> fdisk /dev/sda 

Ping example.com and show timestamp for each reply 
 --> ping -D example.com 

Remove node_ops group 
 --> groupdel node_ops 

Modify account password for recruiter 
 --> passwd recruiter 

Get logged-in users list 
 --> who 

Modify a connection's IP address 
 --> nmcli connection modify "My Connection" ipv4.addresses 192.168.1.200/24 

Traceroute to example.com bypassing routing tables 
 --> traceroute -r example.com 

Search for port 22 usage 
 --> grep '22' /etc/services 

Display memory usage in kilobytes with old format, update every 10 seconds, 4 times 
 --> free -k -o -s 10 -c 4 

Keep only lines that contain 'pass' 
 --> sed -n '/pass/p' file.txt 

Query the A record for yahoo.com and save output to file 
 --> host yahoo.com > yahoo_dns.txt 

Inspect storage volume /dev/vdi 
 --> fdisk -l /dev/vdi 

Mount tmpfs at /run 
 --> mount -t tmpfs tmpfs /run 

Display memory usage in bytes, update every 2 seconds indefinitely 
 --> free -b -s 2 

Start three jobs and wait for them 
 --> job1 & job2 & job3 & wait 

Change login password for ryan 
 --> passwd ryan 

Send SIGALRM to PID 2021 
 --> kill -ALRM 2021 

Show disk usage for all filesystems with filesystem type 
 --> df -T 

Stop MySQL service 
 --> sudo systemctl stop mysql 

Run mtr to github.com with ASN lookup, 150 cycles, interval 10s, and output in report-wide format 
 --> mtr --aslookup --report-wide -c 150 -i 10 github.com 

Background rsync and wait 
 --> rsync -a src/ dst/ & wait 

Show lines that start and end with same letter 
 --> sed -n '/^\(\w\)\(.*\)\1$/p' file.txt 

List all sockets for destination IP 104.21.3.132 
 --> ss dst 104.21.3.132 

Create all .log files in the current directory if they don't exist 
 --> touch *.log 

Traceroute to 8.8.8.8 showing ICMP extensions 
 --> traceroute -e 8.8.8.8 

Remove digital_marketing from groups 
 --> groupdel digital_marketing 

Ping google.com with 5 second timeout and 111 times 
 --> ping -W 5 -c 111 google.com 

Create a file called 'include' in your home 
 --> touch ~/include 

List all sockets for a specific source port (e.g., 22) 
 --> ss src :22 

Use gzip on track.wav 
 --> gzip track.wav 

Enable login credentials for demo_user 
 --> passwd -u demo_user 

Change to a directory with spaces in its name called 'My Files' 
 --> cd 'My Files' 

Display number of files in folder 
 --> watch 'ls -1 | wc -l' 

Run a command every 5 minutes 
 --> crontab -e # */5 * * * * command 

Change ownership of www directory to apache 
 --> chown apache www 

Move all files in /var/log/pm-powersave to /backup/pm-powersave 
 --> mv /var/log/pm-powersave/* /backup/pm-powersave/ 

Zip all markdown files into markdowns.zip 
 --> zip markdowns.zip *.md 

Start screen and run shell script 
 --> screen -S updates ./update.sh 

Print users on pts/1 
 --> who | grep pts/1 

Display memory usage in human-readable format, update every 15 seconds indefinitely 
 --> free -h -s 15 

Find all .log files in /home using regex 
 --> find /home -regex ".*\.log" 

Show line numbers for matches of 'main' in main.c 
 --> grep -n 'main' main.c 

Alias for monitoring system load 
 --> alias sysload='uptime' 

Run htop with color scheme 2 
 --> htop --color-scheme=2 

Remove write access from everyone on system.log 
 --> chmod a-w system.log 

Use MAILTO to email cron job results 
 --> crontab -e # MAILTO='user@example.com' 

Start the cron service 
 --> systemctl start cron 

Find the average of column 2 
 --> awk '{sum += $2} END {print sum/NR}' file.txt 

Display memory usage in gigabytes, no buffers/cache line 
 --> free -g -o 

Query the A record for facebook.com and display output in color 
 --> host facebook.com | lolcat 

Compress setup.sh using bzip2 
 --> bzip2 setup.sh 

Alias to copy file with progress 
 --> alias cp='rsync -ah --progress' 

Switch to the /usr/local directory 
 --> cd /usr/local 

Query A record for google.com and set +comments 
 --> dig google.com +comments 

Remove rocket_team 
 --> groupdel rocket_team 

Show disk usage for all filesystems, filter for usage above 80% 
 --> df -h | awk '$5+0 > 80' 

Inspect drive partitioning with fdisk 
 --> fdisk -l 

Change owner of archive.zip to archivist 
 --> chown archivist archive.zip 

Move all files in the current directory to /tmp and force overwrite 
 --> mv -f * /tmp/ 

Query the MX record for example.com and use short output 
 --> host -t MX example.com | awk '{print $7}' 

Check if root is logged in 
 --> who | grep root 

Change niceness of PID 1234 to +10 
 --> sudo renice +10 1234 

Add user download with home at /downloads 
 --> useradd -m -d /downloads download 

Remove an empty directory named 'archive' in /opt 
 --> rmdir /opt/archive 

Open file and set autoindent 
 --> vim -c 'set autoindent' file.txt 

Add write permission for others 
 --> chmod o+w public.txt 

Change to the /var/log/apache2 directory 
 --> cd /var/log/apache2 

Add beta_users group 
 --> groupadd beta_users 

Print Hello without newline 
 --> echo -n "Hello" 

Auto-remove unused packages 
 --> sudo apt autoremove 

Connect with specific cipher 
 --> ssh -c aes256-ctr user@hostname 

View the partition table of /dev/nvme0n1 
 --> fdisk -l /dev/nvme0n1 

Wait for 123 seconds 
 --> sleep 123 

Force delete all files in the /opt directory 
 --> rm -f /opt/* 

Add db_admins group 
 --> groupadd db_admins 

Apply bzip2 to script.sh 
 --> bzip2 script.sh 

Go to your home directory 
 --> cd 

Open file and set tabstop=4 
 --> vim -c 'set tabstop=4' file.txt 

Query the A record for yahoo.com 
 --> nslookup yahoo.com 

Display disk usage for all files and directories, using block size of 1P 
 --> du -B 1P 

Query the A record for google.com using DNS server 8.8.8.8 
 --> nslookup google.com 8.8.8.8 

Compress resume.docx and photo.jpg into application.zip 
 --> zip application.zip resume.docx photo.jpg 

Make ntfs file system on /dev/sdj5 
 --> mkfs.ntfs /dev/sdj5 

Send SIGTERM after delay 
 --> sleep 5 && kill 8081 

Add sysadmins group 
 --> groupadd sysadmins 

Display memory usage in human-readable format, wide output 
 --> free -h -w 

Show all set environment values 
 --> env 

Update login access for temp_user 
 --> passwd temp_user 

Check internet connection every hour 
 --> crontab -e # 0 * * * * /check_internet.sh 

Check currently logged in user 
 --> watch whoami 

Remove readonly_group 
 --> groupdel readonly_group 

Ping yahoo.com with 6 second timeout and 53 times 
 --> ping -W 6 -c 53 yahoo.com 

Delete userx 
 --> userdel userx 

See memory stats with vmstat 
 --> watch vmstat 

Get the last 10 commands 
 --> history | tail -n 10 

Change to the /var/log/boot.log directory 
 --> cd /var/log/boot.log 

Run atop and display only process activity 
 --> atop -P 

Run mtr to example.com and set the number of pings per hop to 20 
 --> mtr -c 20 example.com 

Wait for background tar compression 
 --> tar czf archive.tar.gz dir/ & wait 

Make request and get redirect location only 
 --> curl -I -s http://example.com | grep -i location 

Replace all digits with '#' in a file 
 --> sed 's/[0-9]/#/g' file.txt 

Compress the CSV file records.csv using bzip2 
 --> bzip2 records.csv 

Kill user processes named vim 
 --> killall -u carol vim 

Query the CNAME record for www.yahoo.com 
 --> host -t CNAME www.yahoo.com 

Print the shell’s environment 
 --> env 

Show available variables for docker run 
 --> env 

Ping 1.1.1.1 with 2 second timeout and 25 times 
 --> ping -W 2 -c 25 1.1.1.1 

Start fdisk on a block device 
 --> fdisk /dev/sdb 

Compress log_output.log using bzip2 
 --> bzip2 log_output.log 

List only listening sockets 
 --> ss -l 

Use gzip for old_backup.sql 
 --> gzip old_backup.sql 

See ARP table changes 
 --> watch arp -a 

Login as auditor 
 --> su auditor 

Display memory usage in gigabytes with detailed stats, update every 20 seconds, 6 times 
 --> free -g -l -s 20 -c 6 

Run top and update every 0.5 seconds 
 --> top -d 0.5 

Copy a file 'index.html' to /var/www/html and show progress 
 --> cp -v index.html /var/www/html/ 

Print remote IP addresses 
 --> who | awk '{print $5}' 

Display disk usage for all files and directories, using block size of 512G 
 --> du -B 512G 

Display memory usage with total, update every 5 seconds indefinitely 
 --> free -t -s 5 

Assign an IP address and netmask to an interface 
 --> sudo ifconfig eth0 192.168.1.100 netmask 255.255.255.0 

Print custom date format 
 --> echo "$(date +%Y-%m-%d)" 

Move all .txt files to the backup directory 
 --> mv *.txt backup/ 

Copy all files in the current directory to /tmp and keep everything and keep links 
 --> cp -a --preserve=links * /tmp/ 

Run mtr to facebook.com and display only numeric IPs 
 --> mtr -n facebook.com 

Compress the telemetry.csv file with bzip2 
 --> bzip2 telemetry.csv 

Remove jake from build group 
 --> gpasswd -d jake build 

Open file and enable ruler 
 --> vim -c 'set ruler' file.txt 

Copy a file 'wtmp' to /var/log 
 --> cp wtmp /var/log/ 

Create vfat on /dev/sdg3 
 --> mkfs.vfat /dev/sdg3 

Run command with empty environment 
 --> env -i command 

Connect with specific bind address 
 --> ssh -b 192.168.1.10 user@hostname 

Query A record for google.com and set +sigchase 
 --> dig google.com +sigchase 

Display all system information except kernel name and hardware platform 
 --> uname -a 

Create a file called 'perl5' in your home 
 --> touch ~/perl5 

Query A record for google.com with recursion not desired 
 --> dig google.com +nord 

Move all files in /var/log/dmesg to /backup/dmesg 
 --> mv /var/log/dmesg/* /backup/dmesg/ 

Change to the /proc directory 
 --> cd /proc 

Use cron.d to schedule script 
 --> sudo bash -c 'echo "30 2 * * * root /usr/local/bin/backup.sh" > /etc/cron.d/backup' 

Display users with 'sudo' permissions 
 --> watch 'getent group sudo' 

Query the SPF record for example.com 
 --> nslookup -type=SPF example.com 

Delete oldscript_runner 
 --> userdel oldscript_runner 

Display disk usage for all files and directories, using block size of 2Z 
 --> du -B 2Z 

Run atop and show only processes with disk usage > 1GB 
 --> atop | awk '$11 > 1048576' 

Display kernel name, processor type, and operating system 
 --> uname -spo 

Compress patch.diff using bzip2 
 --> bzip2 patch.diff 

Make billing group owner of invoice.csv 
 --> chgrp billing invoice.csv 

Interactive mode: start nslookup and set default server to 8.8.8.8 
 --> nslookup
server 8.8.8.8 

Set students group for syllabus.pdf 
 --> chgrp students syllabus.pdf 

Remove forgotten_user from the machine 
 --> userdel forgotten_user 

Traceroute to 8.8.8.8 using only IPv4 and max TTL 30 
 --> traceroute -4 -m 30 8.8.8.8 

Change to the /var/log/dpkg directory 
 --> cd /var/log/dpkg 

Make a request with custom user agent 
 --> curl -A 'Mozilla/5.0 (Custom Agent)' http://example.com 

Create a file called 'no_create.txt' only if it exists 
 --> touch -c no_create.txt 

Display memory usage in bytes with old format and detailed stats, update every 5 seconds, 5 times 
 --> free -b -o -l -s 5 -c 5 

Sync files and specify a custom daemon use chroot 
 --> rsync -avz --daemon --use-chroot source_dir/ destination_dir/ 

Display disk usage for all files and directories, using block size of 32P 
 --> du -B 32P 

Delete operations group 
 --> groupdel operations 

Show disk usage for a specific directory 
 --> df /home 

Create filesystem ext4 on /dev/sda5 
 --> mkfs.ext4 /dev/sda5 

Unmount windows partition 
 --> umount /mnt/windows 

Copy a file 'samba.log' to /var/log/samba 
 --> cp samba.log /var/log/samba/ 

Kill by process group 
 --> pkill -g 1000 

Include bob in the sudo group 
 --> gpasswd -a bob sudo 

Compress email.eml using bzip2 
 --> bzip2 email.eml 

Move 'notes.txt' from your home to the Desktop 
 --> mv ~/notes.txt ~/Desktop/ 

Delete read_only_user 
 --> userdel read_only_user 

Copy 'data.csv' to /var/log and rename it to 'backup.csv' 
 --> cp data.csv /var/log/backup.csv 

Print all positional parameters 
 --> echo "$@" 

Wait for 1 hour 
 --> sleep 3600 

Zip videos from the folder movies into movies.zip 
 --> zip -r movies.zip movies 

Display memory usage in human-readable format with wide output, update every 25 seconds, 7 times 
 --> free -h -w -s 25 -c 7 

Query the A record for facebook.com and display output with timestamp 
 --> date; host facebook.com 

Modify group hr to human_resources 
 --> groupmod -n human_resources hr 

Assign permission 640 to input.csv 
 --> chmod 640 input.csv 

Prevent list cleanup 
 --> sudo apt update --no-list-cleanup 

Move to pane on the top 
 --> Ctrl-b ↑ 

Run htop and display wide output 
 --> htop --wide 

Sync files and copy symlinks as regular files 
 --> rsync -avzL --copy-links source_dir/ destination_dir/ 

Create a directory called 'test' in /home/erin 
 --> mkdir /home/erin/test 

Format /dev/sde2 with ntfs 
 --> mkfs.ntfs /dev/sde2 

Show all UDP connections with numeric addresses 
 --> netstat -un 

Copy 'config.yaml' to /etc and rename it to 'config_backup.yaml' 
 --> cp config.yaml /etc/config_backup.yaml 

Display memory usage in gigabytes, detailed low and high memory stats 
 --> free -g -l 

Change to the /var/log/user directory 
 --> cd /var/log/user 

Create gpt label and show summary on /dev/sdc 
 --> parted /dev/sdc mklabel gpt print 

Change niceness of multiple PIDs 
 --> sudo renice +5 1234 5678 91011 

Display memory usage with wide output and total 
 --> free -w -t 

Sleep for half a second 
 --> sleep 0.5 

Launch parted for editing USB stick 
 --> parted /dev/sdb 

List all TCP sockets in the CLOSE-WAIT state 
 --> ss -t state close-wait 

Replace only the second occurrence of 'a' with 'A' 
 --> sed 's/a/A/2' file.txt 

Delete a file called 'cron' in /var/log 
 --> rm /var/log/cron 

Zip all pdfs in folder books into books.zip 
 --> zip books.zip books/*.pdf 

Add user content_mgr to group writers 
 --> usermod -aG writers content_mgr 

Remove devops_support 
 --> groupdel devops_support 

Scroll up in tmux 
 --> Ctrl-b [ 

Run mtr to facebook.com and use a packet size of 512 bytes 
 --> mtr -s 512 facebook.com 

Wait for specific process ID 1234 
 --> wait 1234 

Connect through HTTP proxy 
 --> ssh -o ProxyCommand='nc -X connect -x proxy:8080 %h %p' user@hostname 

Change to the directory /usr/local/src 
 --> cd /usr/local/src 

Change credentials for user charlie 
 --> passwd charlie 

Move all files in the current directory to /tmp and do not overwrite existing files 
 --> mv -n * /tmp/ 

Show me a detailed, recursive list of my home directory 
 --> ls -lR ~ 

Login as system user logs 
 --> su logs 

Open file ignoring whitespace change 
 --> less -I file.txt 

Traceroute to google.com with no hostname resolution and max TTL 15 
 --> traceroute -n -m 15 google.com 

Stop the rsyslog service 
 --> service rsyslog stop 

Download a file and flatten directory structure 
 --> wget -nH http://example.com/file.zip 

Change students2025 to final_years 
 --> groupmod -n final_years students2025 

Check details of /dev/sdd5 
 --> blkid /dev/sdd5 

Make a request with retry attempts 
 --> curl --retry 3 http://example.com 

Write zeros with sync 
 --> dd if=/dev/zero of=/dev/sdX bs=1M conv=fdatasync 

Create an alias to clear the terminal 
 --> alias c='clear' 

Store recent commands in a text file 
 --> history > commands.log 

What are the files in the current directory? Show me a detailed list with hidden files and type indicators 
 --> ls -laF 

Display memory usage in bytes with wide output, update every 5 seconds, 3 times 
 --> free -b -w -s 5 -c 3 

Remove a file called 'draft.docx' in the Documents folder 
 --> rm ~/Documents/draft.docx 

Unlock access for frontend_dev 
 --> passwd -u frontend_dev 

Create archive of /etc 
 --> sudo tar czf etc.tar.gz /etc 

Unlock temporaryuser 
 --> usermod -U temporaryuser 

Download a file and force download even if file exists 
 --> wget -nd http://example.com/file.zip 

Query the A record for example.com using DNS server 1.0.0.1 
 --> host example.com 1.0.0.1 

Run mtr to 8.8.8.8 and set the number of pings per hop to 21 
 --> mtr -c 21 8.8.8.8 

Sync files using a specific SSH port 
 --> rsync -avz -e 'ssh -p 2222' source_dir/ user@remote_host:/destination_dir/ 

Remove vera and her files 
 --> userdel -r vera 

Recursively move the /usr/local directory to /backup/usr-local 
 --> mv /usr/local /backup/usr-local/ 

Sync files and specify a custom daemon refuse options 
 --> rsync -avz --daemon --refuse-options=delete source_dir/ destination_dir/ 

Delete sim_team 
 --> groupdel sim_team 

Show current partition flags on /dev/sdn 
 --> parted /dev/sdn print 

Unmask a previously masked service 
 --> systemctl unmask apache2 

Compress backup.tar with bzip2 
 --> bzip2 backup.tar 

Delete an empty directory called 'scripts' in the current directory 
 --> rmdir scripts 

Resize the first partition on /dev/sda to 10GB 
 --> parted /dev/sda resizepart 1 10GB 

Rename user beta to betatest 
 --> usermod -l betatest beta 

Copy all files in /home/user/Downloads to /mnt/usb 
 --> cp /home/user/Downloads/* /mnt/usb/ 

List all files in /etc 
 --> ls /etc 

Ping github.com with 512 byte packets and 31 times 
 --> ping -s 512 -c 31 github.com 

Launch parted to review layout of storage disk 
 --> parted /dev/sda print 

Traceroute to github.com using TCP SYN packets 
 --> traceroute -T github.com 

Copy a file 'index.html' to /var/www/html and keep timestamps 
 --> cp -p index.html /var/www/html/ 

Use type -a pwd to find all locations of the pwd executable. 
 --> type -a pwd 

Display all system information except kernel name and network node hostname 
 --> uname -a 

Create user jake with home /users/jake and zsh shell 
 --> useradd -m -d /users/jake -s /bin/zsh jake 

List all sockets for source IP 192.168.100.2 
 --> ss src 192.168.100.2 

Run IO-intensive task with niceness +12 
 --> nice -n 12 dd if=/dev/zero of=/tmp/test.img 

Send SIGTERM via kill PGID 
 --> kill -TERM -$$ 

Add backup user for admin tasks 
 --> useradd backup 

Check all device UUIDs 
 --> blkid 

Locate crontab backup files 
 --> locate crontab 

Change backend team group for api.js 
 --> chgrp backend api.js 

Query the DNSKEY record for github.com 
 --> host -t DNSKEY github.com 

Display all system information except kernel name and machine hardware name 
 --> uname -arvpio 

Set gallery group to artwork.png 
 --> chgrp gallery artwork.png 

Search for bootloader files 
 --> locate grub.cfg 

List files in /var/log with human-readable sizes and sorted by time 
 --> ls -lht /var/log 

Copy all files in the current directory to /tmp and keep everything and keep all attributes 
 --> cp -a --preserve=all * /tmp/ 

Fix missing packages 
 --> sudo apt update --fix-missing 

Rename mobile_team to mobile_dev 
 --> groupmod -n mobile_dev mobile_team 

Rename 'kern.log' to 'kern.log.old' in /var/log 
 --> mv /var/log/kern.log /var/log/kern.log.old 

Track CPU temp every 10 seconds 
 --> watch -n 10 sensors 

Add maria to mlops group 
 --> gpasswd -a maria mlops 

Pause for 5.5 seconds 
 --> sleep 5.5 

Change to the /tmp directory 
 --> cd /tmp 

Run make with CFLAGS defined in env 
 --> env CFLAGS=-O2 make 

Add a connection with specific IPv6 DNS servers 
 --> nmcli connection add type ethernet con-name "My Ethernet" ifname eth0 ipv6.dns "2001:4860:4860::8888 2001:4860:4860::8844" 

Background cleanup script 
 --> nohup ./cleanup.sh & 

Create gpt table and print layout on /dev/sde 
 --> parted /dev/sde mklabel gpt print 

FTP list directory 
 --> curl ftp://ftp.example.com/directory/ 

Reload the nginx server 
 --> service nginx reload 

Reactivate password login for alice 
 --> passwd -u alice 

Download a file and specify a timeout for read 
 --> wget --read-timeout=10 http://example.com/file.zip 

Remove an empty directory called 'archive' in /var/mail 
 --> rmdir /var/mail/archive 

Start the avahi-daemon 
 --> service avahi-daemon start 

Locate myfile.txt 
 --> locate myfile.txt 

Change niceness of bluetooth daemon 
 --> sudo renice +8 -p $(pgrep bluetoothd) 

Display disk usage for all files and directories, using block size of 2T 
 --> du -B 2T 

Compress folder-listing.txt 
 --> gzip folder-listing.txt 

Open file and set scrolling speed 
 --> less -j5 file.txt 

Download large file without hangup 
 --> nohup wget http://example.com/bigfile.zip & 

Create a file called 'var' in your home 
 --> touch ~/var 

Search backward 
 --> ?pattern 

Change to the Pictures folder inside Documents 
 --> cd Documents/Pictures 

Ping google.com with 9 second timeout and 99 times 
 --> ping -W 9 -c 99 google.com 

Run long task in tmux 
 --> tmux new -s job 'sleep 300' 

Change niceness of ssh-agent 
 --> sudo renice +10 -p $(pgrep ssh-agent) 

Query the NAPTR record for yahoo.com 
 --> nslookup -type=NAPTR yahoo.com 

Create bootable ext4 partition on /dev/sde 
 --> parted /dev/sde mkpart primary ext4 1MiB 512MiB set 1 boot on 

Use parted to inspect /dev/sdd 
 --> parted /dev/sdd 

List all files, show details, and append type indicators 
 --> ls -lF 

Change password for user john 
 --> passwd john 

Update mentors group to mentorship_team 
 --> groupmod -n mentorship_team mentors 

List all TCP sockets in the FIN-WAIT-1 state 
 --> ss -t state fin-wait-1 

Assign new shell /bin/fish to user fisher 
 --> usermod -s /bin/fish fisher 

Set legacy_boot flag for partition 2 of /dev/sdd 
 --> parted /dev/sdd set 2 legacy_boot on 

Add software_engineers group 
 --> groupadd software_engineers 

Remove creative_team group 
 --> groupdel creative_team 

Change to the directory pointed to by the symbolic link 'mylink' without following the link 
 --> cd -P mylink 

Change UID of user frank to 1500 
 --> usermod -u 1500 frank 

Give permissions of data.csv to user18 
 --> chown user18 data.csv 

Change app logs group to monitoring 
 --> chgrp monitoring app.log 

View file system type on /dev/sdc8 
 --> blkid /dev/sdc8 

Create high_security group 
 --> groupadd high_security 

Find files in /srv not having permission 777 
 --> find /srv -not -perm 777 

Connect with keyboard-interactive authentication 
 --> ssh -o KbdInteractiveAuthentication=yes user@hostname 

Send SIGPIPE to PID 3435 
 --> kill -PIPE 3435 

Add artificial delay of 0.3 seconds 
 --> sleep 0.3 

Extract specific part of file 
 --> dd if=largefile of=part.bin bs=1 skip=1048576 count=1024 

Show only the MTU for eth0 
 --> ifconfig eth0 | grep mtu 

Insert 'Hello' before every line 
 --> sed 's/^/Hello /' file.txt 

Recursively copy the /srv directory to /backup/srv 
 --> cp -r /srv /backup/srv/ 

Reset password for tempaccount 
 --> passwd tempaccount 

Delete a directory named 'My Files' with spaces in the name if it is empty 
 --> rmdir 'My Files' 

Unblock engineer_23 
 --> passwd -u engineer_23 

Change the group of server.conf to admin 
 --> chgrp admin server.conf 

Send SIGCONT to jobs in current shell 
 --> kill -CONT %1 %2 

Find open files in /tmp directory 
 --> lsof +D /tmp 

Move rob's home directory and update records 
 --> usermod -d /home/rob_new -m rob 

Create training group 
 --> groupadd training 

Access data_user 
 --> su data_user 

Run dd with niceness +13 
 --> nice -n 13 dd if=/dev/sda of=/backup.img 

Create a directory called 'data' inside /var/log 
 --> mkdir /var/log/data 

Copy a file 'config' to /etc and show progress 
 --> cp -v config /etc/ 

Traceroute to github.com using only IPv6 addresses 
 --> traceroute -6 github.com 

Compress files larger than 100MB in /var 
 --> find /var -type f -size +100M -exec gzip {} \; 

Prevent auto-remove 
 --> sudo apt remove --no-auto-remove nginx 

Move all files in the current directory to /tmp and keep permissions 
 --> mv --preserve=mode * /tmp/ 

Show all interfaces with protocol family icmp 
 --> ifconfig -a icmp 

Compress image.jpeg using gzip 
 --> gzip image.jpeg 

Display memory usage in megabytes with total 
 --> free -m -t 

Ping github.com with a timeout of 10 seconds per packet 
 --> ping -W 10 github.com 

Connect using agent forwarding 
 --> ssh -A user@hostname 

Observe top 5 memory-consuming processes 
 --> watch "ps aux --sort=-%mem | head -n 6" 

Disable database_admin's password authentication 
 --> passwd -l database_admin 

Switch to test_dev account 
 --> su test_dev 

Show the configuration of a wireless interface (e.g., wlan0) 
 --> ifconfig wlan0 

Run top and show only idle processes 
 --> top -I 

Create support_leads group 
 --> groupadd support_leads 

Query A record for google.com and set +topdown 
 --> dig google.com +topdown 

Disable password for test_user 
 --> passwd -l test_user 

Filter env for JAVA_HOME 
 --> env | grep JAVA_HOME 

Add jenkins to docker group 
 --> gpasswd -a jenkins docker 

Match processes older than 10 minutes 
 --> pkill -o sleep 

Locate bash history 
 --> locate .bash_history 

Remove a deeply nested empty directory structure '2025/June/18' and all parents if empty 
 --> rmdir -p 2025/June/18 

Create an NTFS partition on /dev/sda 
 --> parted /dev/sda mkpart primary ntfs 100MiB 5GiB 

Show help for ss command 
 --> ss -h 

Remount /home with read-write permissions 
 --> mount -o remount,rw /home 

Move all files in the current directory to /tmp and keep xattr 
 --> mv --preserve=xattr * /tmp/ 

Ping google.com with 7 second timeout and 15 times 
 --> ping -W 7 -c 15 google.com 

Move all files in the current directory to /tmp and keep ownership 
 --> mv --preserve=ownership * /tmp/ 

Show all processes and sort by start time 
 --> ps -eo pid,cmd,lstart --sort=lstart 

Query A record for google.com and set +trace 
 --> dig google.com +trace 

Monitor system activity in real time 
 --> w 

Change to the Downloads directory in your home folder 
 --> cd ~/Downloads 

Make a HEAD request 
 --> curl -X HEAD http://example.com 

Change niceness of caching server processes 
 --> sudo renice +5 -p $(pgrep memcached) 

Query the NAPTR record for example.com 
 --> nslookup -type=NAPTR example.com 

Auto-remove without prompts 
 --> sudo apt autoremove -y 

Reload the docker daemon 
 --> service docker reload 

Run htop and show only processes with TTY 
 --> htop | grep -v '?' 

Create zip file source.zip with all python files 
 --> zip source.zip *.py 

Simulate install 
 --> sudo dpkg -i --dry-run package.deb 

Show all connections and sort by port number 
 --> netstat -an | sort -k4 

Add user manager to teams group 
 --> usermod -aG teams manager 

Find 'exit' in bash history 
 --> grep 'exit' ~/.bash_history 

Create a 100MB empty file 
 --> dd if=/dev/zero of=empty.img bs=1M count=100 

Create a file called 'temp' in /home/grace 
 --> touch /home/grace/temp 

Wait 2 hours 
 --> sleep 7200 

Make john a member of media group 
 --> gpasswd -a john media 

Format /dev/sdd3 with ext2 
 --> mkfs.ext2 /dev/sdd3 

Attach to the last used tmux session 
 --> tmux attach 

Assign user10 ownership of tasks.csv 
 --> chown user10 tasks.csv 

Add user chris and make it expire in 30 days 
 --> useradd -e $(date -d '+30 days' +%Y-%m-%d) chris 

Query CAA record for google.com 
 --> dig google.com CAA 

Show disk usage for all filesystems, sorted by mount point 
 --> df -h | sort -k 6 

Install Java runtime 
 --> sudo apt install default-jre 

Mount using UUID of the disk 
 --> mount UUID=xxxx-xxxx /mnt/disk 

Send SIGKILL to PID 6061 
 --> kill -KILL 6061 

Connect with X11 forwarding enabled 
 --> ssh -X user@hostname 

Create a directory called 'docs' in /usr/share 
 --> mkdir /usr/share/docs 

Display kernel name and machine hardware name 
 --> uname -sm 

Ping amazon.com with 56 byte packets and 12 times 
 --> ping -s 56 -c 12 amazon.com 

Create ext3 system on /dev/sdj6 
 --> mkfs.ext3 /dev/sdj6 

Show me a recursive list of /etc, sorted by size 
 --> ls -RS /etc 

Run apt upgrade with niceness +5 
 --> sudo nice -n 5 apt upgrade 

Make a zip file photos.zip from all jpg files 
 --> zip photos.zip *.jpg 

Recursively copy the /media directory to /backup/media 
 --> cp -r /media /backup/media/ 

Start vim in Ex mode 
 --> vim -e file.txt 

Number all lines 
 --> sed = file.txt | sed 'N;s/\n/ /' 

Display the logical path of your current directory, including symlinks. 
 --> pwd -L 

Add a connection with a specific IPv4 DHCP use domains 
 --> nmcli connection add type ethernet con-name "My Ethernet" ifname eth0 ipv4.dhcp-use-domains yes 

Run atop and display only disk activity 
 --> atop -D 

Create a directory called 'daily' in /var/log/backup 
 --> mkdir /var/log/backup/daily 

Create a file called 'zoneinfo' in your home 
 --> touch ~/zoneinfo 

Find files in /opt not owned by group staff 
 --> find /opt -not -group staff 

Launch fdisk session for removable media 
 --> fdisk /dev/sdb 

Add a connection with a specific IPv4 DHCP send hostname 
 --> nmcli connection add type ethernet con-name "My Ethernet" ifname eth0 ipv4.dhcp-send-hostname yes 

Zip all files with .out extension 
 --> zip output_files.zip *.out 

Detach session from remote server 
 --> Ctrl-b d 

Remove sde1 account 
 --> userdel sde1 

Allow login for analyst_1 
 --> passwd -u analyst_1 

Find files in /tmp with less than two hard links 
 --> find /tmp -type f -links -2 

Prevent admin99 from logging in with password 
 --> passwd -l admin99 

Remove all files in /var/log/messages 
 --> rm /var/log/messages/* 

Display all filesystem labels 
 --> blkid 

Move all files in /var/log/installer to /backup/installer 
 --> mv /var/log/installer/* /backup/installer/ 

Open file and source vimrc 
 --> vim -u ~/.vimrc file.txt 

Traceroute to 8.8.8.8 showing version info 
 --> traceroute -V 8.8.8.8 

Create trial_users group 
 --> groupadd trial_users 

Match processes by user 
 --> pkill -u alice myapp 

Query A record for google.com with padding 
 --> dig google.com +padding 

Delete an empty directory called 'docs' in /usr/local/share 
 --> rmdir /usr/local/share/docs 

Show processes by PID 1234 
 --> ps -p 1234 

Show masqueraded connections (NAT) 
 --> netstat -M 

Create 1GB swap partition on embedded storage 
 --> parted /dev/mmcblk0 mkpart primary linux-swap 0% 1GB 

Print random number 
 --> echo $RANDOM 

Query A record for google.com and set +noall 
 --> dig google.com +noall 

Send SIGVTALRM to PID 4041 
 --> kill -VTALRM 4041 

Make support group for helpdesk.log 
 --> chgrp support helpdesk.log 

Set NetworkManager logging to DEBUG level 
 --> nmcli general logging level DEBUG domains CORE,ETHER,IP 

Remove the group data_team 
 --> groupdel data_team 

Send custom command to running pane 
 --> tmux send-keys -t logs 'df -h' C-m 

Display total memory (RAM + swap) in human-readable format 
 --> free -h -t 

Display disk usage summary for each subdirectory in /etc 
 --> du -h --max-depth=1 /etc 

Traceroute to google.com specifying destination port 33434 
 --> traceroute -p 33434 google.com 

Edit hosts file 
 --> sudo nano /etc/hosts 

Make a POST request with form data 
 --> curl -X POST -F 'field=value' http://example.com/upload 

Make request with rate limiting 
 --> curl --limit-rate 50k --max-time 60 http://example.com/largefile 

Disable recruiter password usage 
 --> passwd -l recruiter 

Delete account_ops 
 --> groupdel account_ops 

Copy a file 'Xorg.0.log' to /var/log 
 --> cp Xorg.0.log /var/log/ 

Create a new gpt partition table on /dev/sdb 
 --> parted /dev/sdb mklabel gpt 

Set password for user engineer3 
 --> passwd engineer3 

Rename user userx to user_x1 
 --> usermod -l user_x1 userx 

Run atop and show only processes for user 'alice' 
 --> atop -u alice 

Insert a tab at the start of each line 
 --> sed 's/^/\t/' file.txt 

Remove devtest and home folder 
 --> userdel -r devtest 

Gzip notes from class 
 --> gzip class_notes.txt 

Assign 600 to a config file 
 --> chmod 600 config.json 

Open with custom keybindings 
 --> less -K file.txt 

Generate a detailed list of files 
 --> ls -l 

Traceroute to example.com with IPv6 source address 
 --> traceroute -S 2001:db8::1 example.com 

Download a file and mirror a website with verbose 
 --> wget --mirror --verbose http://example.com/ 

Transfer file using SCP with verbose output 
 --> scp -v file.txt user@hostname:/remote/path/ 

Wipe the shell window 
 --> clear 

Sync files and delete extraneous files at destination 
 --> rsync -avz --delete source_dir/ destination_dir/ 

Add a connection with a specific MTU 
 --> nmcli connection add type ethernet con-name "My Ethernet" ifname eth0 ethernet.mtu 9000 

List users using GUI 
 --> who | grep :0 

Edit root's crontab 
 --> sudo crontab -e 

Download a file and set number of connections per server 
 --> wget --limit-rate=200k --wait=2 http://example.com/file.zip 

Format external drive /dev/sdh1 to xfs 
 --> mkfs.xfs /dev/sdh1 

Add user alice2 and expire the account on 2026-01-01 
 --> useradd -e 2026-01-01 alice2 

Change shell login password for testenv 
 --> passwd testenv 

Create xfs on /dev/sdd4 
 --> mkfs.xfs /dev/sdd4 

Show all connections and sort by foreign address 
 --> netstat -an | sort -k5 

Count lines in all files in /home 
 --> find /home -type f -exec wc -l {} \; 

Change to the directory /usr/share/games 
 --> cd /usr/share/games 

Create a file called 'file.txt' and set its timestamp to 00:00 on Jan 1, 2025 
 --> touch -t 202501010000 file.txt 

Print local time only 
 --> echo "$(date +%T)" 

Download a file and mirror a website with output file and document 
 --> wget --mirror --output-file=log.txt --output-document=output.html http://example.com/ 

Remove package 
 --> sudo dpkg -r package-name 

Delete a file called 'Xorg.failsafe.log' in /var/log 
 --> rm /var/log/Xorg.failsafe.log 

Traceroute to example.com showing version info 
 --> traceroute -V example.com 

Enable MySQL at boot 
 --> sudo systemctl enable mysql 

Delete guest99 completely 
 --> userdel -r guest99 

Mount the CD-ROM to /media/cdrom 
 --> mount /dev/cdrom /media/cdrom 

Delete an empty directory called 'src' in /usr/local 
 --> rmdir /usr/local/src 

FTP create directory 
 --> curl -X 'MKD newdir' ftp://ftp.example.com/ 

Traceroute to 8.8.8.8 with wait time 2 seconds 
 --> traceroute -w 2 8.8.8.8 

Disable ARP on an interface 
 --> sudo ifconfig eth0 -arp 

Search for blank lines in file 
 --> grep '^$' file.txt 

Query A record for google.com with ednsopt=3 
 --> dig google.com +ednsopt=3 

Change to the directory /usr/share/locale-langpack 
 --> cd /usr/share/locale-langpack 

Create a file called 'texmf' in your home 
 --> touch ~/texmf 

Display the contents of the current directory, sorted by modification time, oldest first 
 --> ls -ltr 

Download a file and skip certificate check 
 --> wget --no-check-certificate https://example.com/file.zip 

Monitor tail of xz file 
 --> xzcat file.xz | tail -f 

Traceroute to yahoo.com with wait time 7 seconds and 3 probes per hop 
 --> traceroute -w 7 -q 3 yahoo.com 

Follow changes to hostname 
 --> watch hostname 

Set ownership of install.log to root 
 --> chown root install.log 

Reload all daemons 
 --> systemctl daemon-reexec 

Create a file called 'temp' in /home/harry 
 --> touch /home/harry/temp 

Change to the /var/log/nginx directory 
 --> cd /var/log/nginx 

Delete an empty directory called 'new_folder' in /etc 
 --> rmdir /etc/new_folder 

Mount filesystem from /dev/sdj1 as read-write 
 --> mount -o rw /dev/sdj1 /mnt/disk 

Remove everything from bash history 
 --> history -c 

Display memory usage in human-readable format, update every second indefinitely 
 --> free -h -s 1 

Move all files in the current directory to /tmp and do not overwrite existing files 
 --> mv -n * /tmp/ 

Show last lines of CSV file 
 --> tail -n 1 data.csv 

Traceroute to yahoo.com with AS lookups enabled 
 --> traceroute -A yahoo.com 

Delete dockeruser with all data 
 --> userdel -r dockeruser 

Monitor system activity in real time 
 --> w 

Change to the /var/log/yum.log directory 
 --> cd /var/log/yum.log 

Pause execution for 0.7 seconds 
 --> sleep 0.7 

Add a connection with a specific DNS search domain 
 --> nmcli connection add type ethernet con-name "My Ethernet" ifname eth0 ipv4.dns-search "example.com" 

Reset dev_admin password 
 --> passwd dev_admin 

Create a directory called 'lintian' in your home 
 --> mkdir ~/lintian 

Test GraphQL API 
 --> curl -X POST -H 'Content-Type: application/json' -d '{"query":"{ users { id name } }"}' http://example.com/graphql 

Compress img001.png with gzip 
 --> gzip img001.png 

Create a file called 'past.txt' and set its timestamp to last month 
 --> touch -d 'last month' past.txt 

Unmount large disk 
 --> umount /mnt/disk 

Move all files in the current directory to /tmp and keep timestamps 
 --> mv --preserve=timestamps * /tmp/ 

Remove team_training group 
 --> groupdel team_training 

Query MX record for google.com with +short output 
 --> dig google.com MX +short 

Traceroute to yahoo.com without resolving IP addresses to hostnames 
 --> traceroute -n yahoo.com 

Manually run cron for debugging 
 --> sudo cron -f 

Traceroute to 8.8.8.8 using TCP SYN packets 
 --> traceroute -T 8.8.8.8 

Open file at specific line 
 --> vim +100 file.txt 

Delete final_years group 
 --> groupdel final_years 

Traceroute to google.com using a loose source route gateway 
 --> traceroute -g 192.168.1.1 google.com 

Rename the group devs to developers 
 --> groupmod -n developers devs 

Modify group hr to human_resources 
 --> groupmod -n human_resources hr 

Connect through a jump host 
 --> ssh -J jumphost user@targethost 

View protected system logs 
 --> sudo less /var/log/syslog 

Query the A record for google.com using DNS server 8.8.4.4 
 --> host google.com 8.8.4.4 

Show only MAC addresses of interfaces 
 --> ifconfig | grep ether 

See active console users 
 --> who | grep tty 

Recursively move the entire /etc directory to /backup/etc 
 --> mv /etc /backup/etc/ 

Create an archive myfiles.zip from main.py and utils.py 
 --> zip myfiles.zip main.py utils.py 

Modify a connection's priority 
 --> nmcli connection modify "My Connection" connection.autoconnect-priority 10 

Allow group write and execute on script.py 
 --> chmod g+wx script.py 

Show last lines with timestamps 
 --> tail -f file.log | cut -d' ' -f1-2 

Copy a file 'access.log' to /var/log 
 --> cp access.log /var/log/ 

Run Kubernetes apply with niceness +5 
 --> nice -n 5 kubectl apply -f deploy.yml 

Create a file called 'past.txt' and set its timestamp to last year 
 --> touch -d 'last year' past.txt 

Query the TXT record for yahoo.com 
 --> nslookup -query=TXT yahoo.com 

Display memory usage in pebibytes 
 --> free --pebi 

Create a directory called 'projects' 
 --> mkdir projects 

Run Java process and log 
 --> nohup java -cp . MainClass > out.txt 2>&1 & 

Allow login for pm_lead 
 --> passwd -u pm_lead 

Show me the contents of the current directory without sorting 
 --> ls -U 

Copy a file 'clamav.log' to /var/log/clamav 
 --> cp clamav.log /var/log/clamav/ 

Show load average from w output 
 --> w | head -1 

Display memory usage in gigabytes, update every 30 seconds indefinitely 
 --> free -g -s 30 

Include harsha in prod group 
 --> gpasswd -a harsha prod 

Create a directory called 'test' and suppress error if it exists 
 --> mkdir -p test 

Copy 'report.pdf' to the Documents folder 
 --> cp report.pdf ~/Documents/ 

Download a file over HTTPS 
 --> wget https://example.com/file.zip 

Show all device UUIDs and types 
 --> blkid 

Delete a file called 'yum.log' in /var/log 
 --> rm /var/log/yum.log 

Ping 8.8.8.8 with default settings 
 --> ping 8.8.8.8 

Switch to the root user 
 --> su 

Re-enable access for jenkins_user 
 --> passwd -u jenkins_user 

Reload cron service configuration 
 --> systemctl reload cron 

Update api_dev to api_team 
 --> groupmod -n api_team api_dev 

Copy all files in /var/tmp to /backup/tmp and force overwrite 
 --> cp -f /var/tmp/* /backup/tmp/ 

Make a user named hruser with home at /srv/hruser 
 --> useradd -m -d /srv/hruser hruser 

Open file in vim 
 --> vim file.txt 

Zip the entire directory structure of dev into dev_backup.zip 
 --> zip -r dev_backup.zip dev 

Switch to deployer 
 --> su deployer 

Run Azure CLI with niceness +4 
 --> nice -n 4 az vm list 

Show "$" at end of each line 
 --> cat -E file.txt 

Display disk usage for all files and directories up to depth 1 
 --> du -d 1 

Sleep command and wait in script 
 --> sleep 4 & wait 

View process activity by terminal 
 --> w | awk '{print $2, $8}' 

Clear screen before new prompt 
 --> clear 

Open with horizontal scrolling off 
 --> less -S file.txt 

Add user readaccess to viewers group 
 --> usermod -aG viewers readaccess 

Switch to john's account 
 --> su john 

Include sean in experiments group 
 --> gpasswd -a sean experiments 

Create a user rick and assign a UID of 2500 
 --> useradd -u 2500 rick 

Connect without request TTY 
 --> ssh -o RequestTTY=no user@hostname 

Change to the directory /usr/share/pixmaps 
 --> cd /usr/share/pixmaps 

Kill all screen sessions 
 --> killall screen 

Kill all processes named firefox 
 --> killall firefox 

Create security_audit group 
 --> groupadd security_audit 

See login name, tty, and idle time for users 
 --> w 

Use gzip to shrink translation.txt 
 --> gzip translation.txt 

Send SIGKILL to child processes of PID 1415 
 --> pkill -9 -P 1415 

Print the current working directory, resolving any symbolic links. 
 --> pwd -P 

Check postfix status 
 --> service postfix status 

Run atop and show only processes with high network usage 
 --> atop | grep NET 

Install Git 
 --> sudo apt install git 

Log current system user activity 
 --> w 

Show kernel messages with color always on 
 --> dmesg --color=always 

Display all files opened by systemd 
 --> lsof -c systemd 

Remove all files in the /media directory 
 --> rm /media/* 

Block login access for intern_dev 
 --> passwd -l intern_dev 

Assign review group to manuscript.docx 
 --> chgrp review manuscript.docx 

Rename training_batch_1 to batch1_training 
 --> groupmod -n batch1_training training_batch_1 

Run atop and show only processes with user 'www-data' 
 --> atop -u www-data 

Sleep for 3 minutes and 30 seconds 
 --> sleep 210 

Display kernel name, version, and processor type 
 --> uname -svp 

Filter all users with bash as shell 
 --> w | grep bash 

Follow auth.log 
 --> tail -f /var/log/auth.log 

Move all files in the current directory to /tmp and keep all attributes 
 --> mv --preserve=all * /tmp/ 

Delete user paul including home 
 --> userdel -r paul 

Create system bot user pushbot with no shell 
 --> useradd -r -s /sbin/nologin pushbot 

Query the A record for google.com and display statistics 
 --> nslookup -stats google.com 

List inactive services 
 --> systemctl list-units --type=service --state=inactive 

Display memory usage with total, update every 3 seconds, 7 times 
 --> free -t -s 3 -c 7 

Add dave to support group 
 --> gpasswd -a dave support 

Display processor type and hardware platform 
 --> uname -pi 

Filter last lines by sed 
 --> tail file.txt | sed -n '1,5p' 

Fetch data of USB stick at /dev/sdf8 
 --> blkid /dev/sdf8 

Surround whole line with brackets 
 --> sed 's/.*/[&]/' file.txt 

Deactivate a network interface (e.g., eth0) 
 --> sudo ifconfig eth0 down 

Delete prod_admins group 
 --> groupdel prod_admins 

Delete a file called 'user.log' in /var/log 
 --> rm /var/log/user.log 

Delete ux_engineers group 
 --> groupdel ux_engineers 

Number non-blank output lines only 
 --> cat -b file.txt 

Display kernel name, hardware platform, and operating system 
 --> uname -sio 

Display all system information except kernel name and kernel release 
 --> uname -avmoipn 

List all sockets for a specific destination port (e.g., 80) 
 --> ss dst :80 

Case-insensitive match of process name 'Python' 
 --> pkill -i python 

Create a directory called 'cron' in /var/spool 
 --> mkdir /var/spool/cron 

Kill only newest process 
 --> pkill -n sshd 

Delete steve without affecting files 
 --> userdel steve 

Change to the /var/log/user.log directory 
 --> cd /var/log/user.log 

Find all shell scripts 
 --> locate '*.sh' 

Start ssh service immediately 
 --> service ssh start 

Query A record for google.com and set +noall 
 --> dig google.com +noall 

Display disk usage for all files and directories, using block size of 32G 
 --> du -B 32G 

Count how many users are logged in 
 --> w -h | wc -l 

Rename the group devops to infra_devops 
 --> groupmod -n infra_devops devops 

Run top and display processes from PIDs 1234 and 5678 
 --> top -p 1234,5678 

Display hardware platform and operating system 
 --> uname -io 

Change GID of user ubuntu to 1050 
 --> usermod -g 1050 ubuntu 

Unmount debugfs at /sys/kernel/debug 
 --> umount /sys/kernel/debug 

Display disk usage for all files and directories, using block size of 100K 
 --> du -B 100K 

Display machine hardware name, hardware platform, and operating system 
 --> uname -mio 

Automatically start and detach screen 
 --> screen -dmS detached echo 'hi' 

Restrict backup_admin from logging in 
 --> passwd -l backup_admin 

Find Kubernetes config 
 --> locate config.yaml 

Replace all uppercase letters with lowercase 
 --> sed 'y/ABCDEFGHIJKLMNOPQRSTUVWXYZ/abcdefghijklmnopqrstuvwxyz/' file.txt 

List all files and show their inodes, sorted by size 
 --> ls -iS 

Show last 1MB 
 --> tail -c 1M file.txt 

Run SSH command in background and wait 
 --> ssh user@host 'uptime' & wait 

Display memory usage in human-readable format with old format, update every 25 seconds, 7 times 
 --> free -h -o -s 25 -c 7 

Delete the media_team group 
 --> groupdel media_team 

Change to the directory /usr/share/zoneinfo/Africa 
 --> cd /usr/share/zoneinfo/Africa 

Allow intern_test to log in again 
 --> passwd -u intern_test 

Schedule script in /etc/cron.d directory 
 --> sudo nano /etc/cron.d/mycronjob 

Query the NAPTR record for github.com 
 --> nslookup -type=NAPTR github.com 

Check blkid of external disk /dev/sde2 
 --> blkid /dev/sde2 

Become sys_user 
 --> su sys_user 

Get the type of filesystem on /dev/sdh2 
 --> blkid /dev/sdh2 

Switch to finance account 
 --> su finance 

Sync files and show what would be transferred without actually transferring 
 --> rsync -avzn source_dir/ destination_dir/ 

Benchmark disk read speed 
 --> dd if=/dev/sda of=/dev/null bs=4M count=100 

Dry run 
 --> sudo apt purge --dry-run nginx 

List users currently logged in 
 --> who 

Display all system information except kernel name and kernel version 
 --> uname -a 

Start the cups print service 
 --> service cups start 

Remove jia from onboarding group 
 --> gpasswd -d jia onboarding 

Compress the presentation.ppt file 
 --> gzip presentation.ppt 

Send SIGTERM to all sshd processes 
 --> pkill sshd 

Create a team named rest_api_group 
 --> groupadd rest_api_group 

Compress gpu_stats.txt using gzip 
 --> gzip gpu_stats.txt 

Fetch block info of /dev/sdh5 
 --> blkid /dev/sdh5 

Traceroute to github.com using ICMP echo requests 
 --> traceroute -I github.com 

Move all files starting with 'test' to /var/tmp 
 --> mv test* /var/tmp/ 

View device label for /dev/sdd6 
 --> blkid /dev/sdd6 

Change to the directory /etc/X11 
 --> cd /etc/X11 

Traceroute to google.com using UDPLITE protocol 
 --> traceroute -UL google.com 

Find files in /tmp newer than June 1, 2025 
 --> find /tmp -type f -newerct "2025-06-01" 

Start MongoDB in background 
 --> nohup mongod & 

Monitor system usage by users 
 --> w 

Show all connections with extended information and numeric addresses 
 --> netstat -en 

Compress file_a.txt 
 --> gzip file_a.txt 

List files in long format, omitting the author 
 --> ls --no-group 

Add a new user named user123 and assign /bin/zsh as shell 
 --> useradd -s /bin/zsh user123 

Ping yahoo.com and flood ping with interval 0.1s (root required) 
 --> ping -f -i 0.1 yahoo.com 

List all sockets for destination port 5228 
 --> ss dst :5228 

Remove beta_testers group 
 --> groupdel beta_testers 

Move all files in /var/log/lightdm to /backup/lightdm 
 --> mv /var/log/lightdm/* /backup/lightdm/ 

Search for 'usb' in kernel logs 
 --> dmesg | grep 'usb' 

Copy all files in /var/log/apache2 to /backup/apache2 
 --> cp /var/log/apache2/* /backup/apache2/ 

Compress the style.css file using gzip 
 --> gzip style.css 

Use wait for job in pipeline 
 --> cat file | grep text & wait 

Show all processes and grep for 'nginx' 
 --> ps aux | grep nginx 

Unmount system logs partition 
 --> umount /mnt/logs 

Check the format of storage /dev/sdy 
 --> fdisk -l /dev/sdy 

Delete all .bak files in /data 
 --> find /data -name "*.bak" -exec rm -f {} \; 

Assign IP 192.168.1.30 and disable ARP on eth6 
 --> sudo ifconfig eth6 192.168.1.30 -arp 

Add superadmins group 
 --> groupadd superadmins 

Ping 8.8.4.4 with a timeout of 5 seconds per packet 
 --> ping -W 5 8.8.4.4 

Download a file and reject certain file types 
 --> wget -R gif,jpg http://example.com/ 

Use screen to test code interactively 
 --> screen -S testenv python3 

List the contents of the current directory 
 --> ls 

Add zahir to fastapi group 
 --> gpasswd -a zahir fastapi 

Force kill all sshd processes 
 --> pkill -9 sshd 

List fs type and UUID of USB at /dev/sdi2 
 --> blkid /dev/sdi2 

Generate host key fingerprint 
 --> ssh-keygen -lf /etc/ssh/ssh_host_rsa_key.pub 

Add a connection with a specific IPv4 DHCP use default route 
 --> nmcli connection add type ethernet con-name "My Ethernet" ifname eth0 ipv4.dhcp-use-default-route yes 

Format partition 4 as ext2 
 --> mkfs.ext2 /dev/sdc4 

Disable automatic rename 
 --> set-option -g allow-rename off 

Expire the account of user lucas today 
 --> usermod -e $(date +%Y-%m-%d) lucas 

Make a request using SOCKS proxy 
 --> curl --socks5 proxy.example.com:1080 http://example.com 

Convert tabs to spaces 
 --> cat file.txt | expand 

Change sysadmins to system_admins 
 --> groupmod -n system_admins sysadmins 

Format nvme1n1p3 as xfs 
 --> mkfs.xfs /dev/nvme1n1p3 

Run atop and display only system activity 
 --> atop -S 

Display disk usage for all files in /etc, excluding .log files 
 --> du -a --exclude="*.log" /etc 

Create zip from testcases folder 
 --> zip -r testcases.zip testcases 

See user login names and terminals 
 --> who 

Ping amazon.com with 1 second timeout and 23 times 
 --> ping -W 1 -c 23 amazon.com 

Move all files in the current directory to /tmp and prompt before overwrite 
 --> mv -i * /tmp/ 

Send input to screen session 
 --> screen -S autoscript -X stuff 'q\n' 

Create a directory called 'emacs' in your home 
 --> mkdir ~/emacs 

Set user1 as the owner of script.sh 
 --> chown user1 script.sh 

Stop the samba service 
 --> service smbd stop 

Find all directories in /var at least 1 level deep 
 --> find /var -mindepth 1 -type d 

Create a file called 'Europe' in your home 
 --> touch ~/Europe 

Match by terminal 
 --> pkill -t pts/0 

See who logged in through TTY 
 --> who 

List all sockets except TCP 
 --> ss -a -A 'all,!tcp' 

List all files in the current directory and parent directory 
 --> ls . .. 

Display memory usage in kilobytes with detailed stats, update every 10 seconds, 4 times 
 --> free -k -l -s 10 -c 4 

Download a file and use FTP passive mode 
 --> wget --ftp-pasv ftp://example.com/file.zip 

Query the A record for google.com and use IPv6 
 --> nslookup -query=AAAA google.com 

Use su for appadmin 
 --> su appadmin 

Make sure cron logs are rotated 
 --> cat /etc/logrotate.d/rsyslog 

Copy a directory 'images' to /var/www/html 
 --> cp -r images /var/www/html/ 

Query A record for google.com and set +cmd 
 --> dig google.com +cmd 

Display disk usage for all files and directories, using block size of 256P 
 --> du -B 256P 

Create a file called 'kern.log' in /var/log 
 --> touch /var/log/kern.log 

Delete a file called 'output.txt' in the current directory 
 --> rm output.txt 

Run atop and display only memory activity 
 --> atop -M 

Find who is using file /var/log/syslog 
 --> lsof /var/log/syslog 

Create file with 100 null bytes 
 --> dd if=/dev/zero of=100bytes bs=100 count=1 

Update without prompts 
 --> sudo apt update -y 

Sync files and set specific permissions 
 --> rsync -avz --chmod=644 source_dir/ destination_dir/ 

Gzip today's backup.bak 
 --> gzip backup.bak 

Update login credentials for steve 
 --> passwd steve 

Set read and write permission for user on myfile 
 --> chmod u+rw myfile 

Display memory usage with detailed low and high memory stats and total 
 --> free -l -t 

Display memory usage in human-readable format, update every 15 seconds indefinitely 
 --> free -h -s 15 

List the contents of my home directory recursively with details and human sizes 
 --> ls -lRh ~ 

Ping yahoo.com with 8 second timeout and 77 times 
 --> ping -W 8 -c 77 yahoo.com 

Connect with host-based authentication 
 --> ssh -o HostbasedAuthentication=yes user@hostname 

Show hostnames of logged in users 
 --> who | awk '{print $5}' 

See if EDITOR is set 
 --> env | grep EDITOR 

Make a request using HTTP/2 
 --> curl --http2 https://example.com 

Run htop and show only processes with UID 1000 
 --> htop -u 1000 

Connect with remote port forwarding 
 --> ssh -R 8080:localhost:80 user@hostname 

Replace all spaces with dashes 
 --> awk '{gsub(/ /,"-"); print}' file.txt 

Query the A record for 8.8.8.8 (reverse lookup) 
 --> nslookup 8.8.8.8 

Remove flask_backend group 
 --> groupdel flask_backend 

Display all system information except hardware platform 
 --> uname -asrvmpo 

Show a detailed list of files with their inodes 
 --> ls -li 

Send SIGTERM by name ignoring errors 
 --> killall -q -TERM myapp 

List all files sorted by size, largest first 
 --> ls -S 

Connect with identity files only 
 --> ssh -o IdentitiesOnly=yes user@hostname 

Refresh terminal to blank state 
 --> clear 

Display all system information except kernel name and kernel release 
 --> uname -avm 

Read 10MB from raw image 
 --> dd if=raw.img of=output.img bs=1M count=10 

List root directory 
 --> sudo ls /root 

List all sockets for destination port 443 or 80 
 --> ss -nt '( sport = :443 or sport = :80 )' 

Compress test1.txt using gzip 
 --> gzip test1.txt 

Query A record for google.com and set +cdflag 
 --> dig google.com +cdflag 

Display disk usage for all files and directories, including hidden ones, in kilobytes 
 --> du -ak 

Run mtr to google.com with TCP, 200 cycles, interval 0.5s, and output in JSON format 
 --> mtr --tcp --json -c 200 -i 0.5 google.com 

Locate the sudoers file 
 --> locate sudoers 

List all UNIX sockets, listening and non-listening 
 --> ss -ax 

Apply bzip2 to compression_test.txt 
 --> bzip2 compression_test.txt 

Create a file called 'projects' in your home 
 --> touch ~/projects 

Alias grep to show color output 
 --> alias grep='grep --color=auto' 

Copy all files in /var/log/maillog to /backup/maillog 
 --> cp /var/log/maillog/* /backup/maillog/ 

Change to the directory /usr/share/terminfo 
 --> cd /usr/share/terminfo 

Show all zombie processes 
 --> ps aux | awk '$8 ~ /Z/ {print $0}' 

Assign alumni group to memories.jpg 
 --> chgrp alumni memories.jpg 

Create a file called 'samba.log' in /var/log/samba 
 --> touch /var/log/samba/samba.log 

Display memory usage in kilobytes, no buffers/cache line 
 --> free -k -o 

Show logs without using a pager 
 --> journalctl --no-pager 

Show all connections with numeric host addresses 
 --> netstat --numeric-hosts 

Traceroute to yahoo.com with wait time 2 seconds 
 --> traceroute -w 2 yahoo.com 

Set password for new user emma 
 --> passwd emma 

Remove tempuser and delete files 
 --> userdel -r tempuser 

Display memory usage in mebibytes with SI units 
 --> free --mebi --si 

Change to the /usr/sbin directory 
 --> cd /usr/sbin 

Run htop and hide kernel threads 
 --> htop --no-kernel-threads 

Show last 5 files lines 
 --> tail -n 5 file1.txt file2.txt 

Traceroute to google.com without resolving IP addresses to hostnames 
 --> traceroute -n google.com 

Enable login for sysadmin 
 --> passwd -u sysadmin 

Re-enable access for jenkins_user 
 --> passwd -u jenkins_user 

Display memory usage in human-readable format, update every 3 seconds, 5 times 
 --> free -h -s 3 -c 5 

Start screen session that runs top 
 --> screen -S monitor top 

Remove group permissions 
 --> chmod g= file 

Grant read to user and others 
 --> chmod uo+r info.txt 

Change ops to operations 
 --> groupmod -n operations ops 

Add training_group_june 
 --> groupadd training_group_june 

Create a file called 'file.txt' and set its timestamp to 00:00 on Jan 1, 2025 
 --> touch -t 202501010000 file.txt 

Compare environments of two users 
 --> sudo -u user1 env; sudo -u user2 env 

Ping amazon.com and set packet size to 56 bytes 
 --> ping -s 56 amazon.com 

Lock student7 from accessing account via password 
 --> passwd -l student7 

Make data group for analytics.csv 
 --> chgrp data analytics.csv 

Show only listening TCP ports 
 --> netstat -lt 

Show all connections with timers 
 --> netstat -o 

Print command output 
 --> echo "Users: $(who)" 

Print last argument 
 --> echo "${!#}" 

Sync files and specify a custom socket options 
 --> rsync -avz --sockopts=TCP_NODELAY source_dir/ destination_dir/ 

Display kernel version and hardware platform 
 --> uname -vi 

Unmount temp directory mounted with tmpfs 
 --> umount /mnt/tmpfs 

Change to the /var/log/mail.log directory 
 --> cd /var/log/mail.log 

Count 'error' messages in all log files 
 --> grep -c 'error' *.log 

Monitor sudo usage logs 
 --> watch 'grep sudo /var/log/auth.log' 

Search for 'ssh' service in /etc/services 
 --> grep 'ssh' /etc/services 

Unlock data_input user 
 --> passwd -u data_input 

Restore crontab from backup 
 --> crontab mycron.backup 

Delete service account bot 
 --> userdel bot 

Switch to docker_user 
 --> su docker_user 

Display memory usage in bytes with total, update every 5 seconds, 3 times 
 --> free -b -t -s 5 -c 3 

Add README.md to existing archive code.zip 
 --> zip code.zip README.md 

Change to the /var/cache directory 
 --> cd /var/cache 

Display memory usage in human-readable format, update every 30 seconds indefinitely 
 --> free -h -s 30 

Ping amazon.com with 7 second timeout and 95 times 
 --> ping -W 7 -c 95 amazon.com 

List all open files 
 --> lsof 

Show your current directory path, even if you navigated there using a symlink. 
 --> pwd -L 

Change graphics_team to graphics_ops 
 --> groupmod -n graphics_ops graphics_team 

Block rootadmin's login access 
 --> passwd -l rootadmin 

Download all images from a website 
 --> wget -r -A jpg,jpeg,png,gif http://example.com/ 

Enable ARP on enp0s3 
 --> sudo ifconfig enp0s3 arp 

Show last 10 connections 
 --> ss -tunap | tail 

Alias 'du' with human readable option 
 --> alias du='du -h' 

Change to the directory /usr/local/share/doc 
 --> cd /usr/local/share/doc 

Make ext2 filesystem for /dev/sdd2 
 --> mkfs.ext2 /dev/sdd2 

Open interactive session for /dev/vdf 
 --> fdisk /dev/vdf 

Sync files and skip files that are newer on the receiver 
 --> rsync -avz --update source_dir/ destination_dir/ 

Show all processes and grep for 'java' 
 --> ps aux | grep java 

Display memory usage in gigabytes, update every 15 seconds indefinitely 
 --> free -g -s 15 

Download a file and disable following redirects 
 --> wget --max-redirect=0 http://example.com/file.zip 

Start camera recording via script 
 --> nohup ./record.sh & 

Create a linux file system xfs on /dev/sdg2 
 --> mkfs.xfs /dev/sdg2 

Show all interfaces with their IPv4 addresses 
 --> ifconfig -a | grep inet 

Terminate child processes of PID 1213 
 --> pkill -P 1213 

Display memory usage in gigabytes, update every 8 seconds indefinitely 
 --> free -g -s 8 

Change owner of mount directory to mounter 
 --> chown mounter /mnt 

Change logs folder to be owned by loguser 
 --> chown loguser logs 

Open file with color escapes 
 --> less -R file.txt 

Show all fields fully, including unprintable characters 
 --> journalctl -a 

Compress temp.log using bzip2 
 --> bzip2 temp.log 

Ping amazon.com with 1 second timeout and 83 times 
 --> ping -W 1 -c 83 amazon.com 

Make all .sh files in /home executable 
 --> find /home -name "*.sh" -exec chmod +x {} \; 

Traceroute to example.com using only IPv6 addresses 
 --> traceroute -6 example.com 

Run top in default mode 
 --> top 

Use bzip2 to compress log.txt 
 --> bzip2 log.txt 

Only see command column from w 
 --> w | awk '{print $8}' 

Set ML group to model.pkl 
 --> chgrp ML model.pkl 

Print the current directory from within a shell script. 
 --> #!/bin/bash
echo "Current dir: $(pwd)" 

Delete systembot 
 --> userdel systembot 

Change niceness of avahi daemon 
 --> sudo renice +8 -p $(pgrep avahi-daemon) 

Show install progress 
 --> sudo apt install --show-progress nginx 

Import a VPN connection from file 
 --> nmcli connection import type openvpn file /path/to/config.ovpn 

Switch to service account 'service01' 
 --> su service01 

Display kernel release and hardware platform 
 --> uname -ri 

Sleep for 5 milliseconds 
 --> sleep 0.005 

Download file in background and wait for it 
 --> wget file.zip & wait 

Run htop and show only the top 5 memory-consuming processes 
 --> htop --sort-key=MEM% | head -n 10 | tail -n 5 

Enable all-multicast mode on an interface 
 --> sudo ifconfig eth0 allmulti 

Display kernel release and operating system 
 --> uname -ro 

Sync files with compression and progress 
 --> rsync -avzP source_dir/ destination_dir/ 

Query the NS record for yahoo.com and use short output 
 --> host -t NS yahoo.com | awk '{print $4}' 

Display current user count 
 --> who | wc -l 

Delete go_dev group 
 --> groupdel go_dev 

Traceroute to google.com with max TTL 30 and 10 probes per hop 
 --> traceroute -m 30 -q 10 google.com 

Make a request with connection timeout 
 --> curl --connect-timeout 10 http://example.com 

Add golang_team group 
 --> groupadd golang_team 

Move all files in the current directory to /tmp and keep xattr 
 --> mv --preserve=xattr * /tmp/ 

Find commands being run by each user 
 --> w | awk '{print $1, $8}' 

Remove all files in /var/log/xrdp 
 --> rm /var/log/xrdp/* 

Remove an empty directory named 'reports' in /home/user/Documents 
 --> rmdir /home/user/Documents/reports 

Traceroute to 8.8.8.8 specifying destination port 33434 
 --> traceroute -p 33434 8.8.8.8 

Allow-held changes 
 --> sudo apt autoremove --allow-change-held-packages 

Print only lines with exactly 3 fields 
 --> awk 'NF == 3' file.txt 

Use bzip2 on design.ai 
 --> bzip2 design.ai 

Display the logical path of your current directory, including symlinks. 
 --> pwd -L 

Show all listening connections 
 --> netstat | grep LISTEN 

Reset the credentials of mark 
 --> passwd mark 

Copy a file 'yum.log' to /var/log 
 --> cp yum.log /var/log/ 

Lock password login for account trials 
 --> passwd -l trials 

Ping facebook.com with 256 byte packets and 29 times 
 --> ping -s 256 -c 29 facebook.com 

Show logs in JSON format 
 --> journalctl -o json 

Display wget version 
 --> wget --version 

Create system user with name system_monitor 
 --> useradd -r system_monitor 

Modify account password for recruiter 
 --> passwd recruiter 

Switch to monitoring user 
 --> su monitoring 

Grant all permissions to user and none to others on data.bin 
 --> chmod 700 data.bin 

Run a C program with a custom environment 
 --> env VAR1=1 VAR2=2 ./a.out 

Download only files larger than 1MB 
 --> wget --quota=1m -r http://example.com/ 

Change niceness of logging agent 
 --> sudo renice +5 -p $(pgrep fluentd) 

Ping amazon.com with 3 second timeout and 107 times 
 --> ping -W 3 -c 107 amazon.com 

Keep only lines that contain '@gmail.com' 
 --> sed -n '/@gmail\.com/p' emails.txt 

Change to the /var/log/maillog directory 
 --> cd /var/log/maillog 

Create zip archive codes.zip from all .c and .h files 
 --> zip codes.zip *.c *.h 

Clear shell before pasting code 
 --> clear 

Add a connection with a specific IPv4 DHCP vendor class identifier 
 --> nmcli connection add type ethernet con-name "My Ethernet" ifname eth0 ipv4.dhcp-vendor-class-identifier "MyVendor" 

Start python with only PATH and HOME set 
 --> env -i PATH=$PATH HOME=$HOME python 

Query the A record for google.com and set search domain to . 
 --> nslookup google.com . 

Change beta_users to beta_testers 
 --> groupmod -n beta_testers beta_users 

Wait 10 minutes 
 --> sleep 600 

Move a directory called 'projects' to /backup 
 --> mv projects /backup/ 

Change name of admins group to super_admins 
 --> groupmod -n super_admins admins 

Remove lucas and delete home dir 
 --> userdel -r lucas 

Traceroute to google.com forbidding fragmentation 
 --> traceroute -F google.com 

Recursively move the /media directory to /backup/media 
 --> mv /media /backup/media/ 

Move all files in the current directory to /tmp and force overwrite 
 --> mv -f * /tmp/ 

Interactive mode: set query type to SOA and look up yahoo.com 
 --> nslookup
set type=SOA
yahoo.com 

Show disk usage for all filesystems, display only the filesystem, type, and available space 
 --> df -h --output=source,fstype,avail 

Connect without executing remote command 
 --> ssh -N user@hostname 

Query the A record for yahoo.com using DNS server 208.67.222.222 
 --> nslookup yahoo.com 208.67.222.222 

Query the NS record for google.com 
 --> host -t NS google.com 

Sync files and specify a custom daemon munge symlinks 
 --> rsync -avz --daemon --munge-symlinks source_dir/ destination_dir/ 

Copy all files in /var/log/audit to /backup/audit 
 --> cp /var/log/audit/* /backup/audit/ 

Assign AI team to inference.py 
 --> chgrp AI inference.py 

Run top and display only processes of user 'alice' 
 --> top -u alice 

Lock testenv's login method 
 --> passwd -l testenv 

Change to the directory /usr/share/info 
 --> cd /usr/share/info 

Show last 50 entries of journal 
 --> journalctl -n 50 

Change to the /var/log/Xorg.1.log directory 
 --> cd /var/log/Xorg.1.log 

Lock tester1 password 
 --> passwd -l tester1 

Show all connections and display output with both timestamps and color 
 --> date; netstat -an | lolcat 

Change to the /tmp/build directory 
 --> cd /tmp/build 

Enable cron 
 --> systemctl enable cron 

Download only 
 --> sudo apt autoremove --download-only 

List files in my home directory with details and sorted by version 
 --> ls -lv ~ 

Delay program for 0.12 seconds 
 --> sleep 0.12 

Show all connections using IPv4 
 --> netstat -4 

Mount samba share using credentials file 
 --> mount -t cifs //server/share /mnt/smb -o credentials=/root/.smbcred 

Use bzip2 on test.py 
 --> bzip2 test.py 

Gzip the dataset file data_train.csv 
 --> gzip data_train.csv 

Launch two background tasks and wait after both 
 --> cmd1 & pid1=$!; cmd2 & pid2=$!; wait $pid1 $pid2 

Change every instance of 'on' to 'off' 
 --> sed 's/on/off/g' config.txt 

Disable promiscuous mode on enp0s3 
 --> sudo ifconfig enp0s3 -promisc 

Make fat32 partition for boot on /dev/sdu 
 --> parted /dev/sdu mkpart primary fat32 1MiB 512MiB 

Switch group name from engineers to eng_team 
 --> groupmod -n eng_team engineers 

Add user jules with groups editor and sudo 
 --> useradd -G editor,sudo jules 

Run bash script and log output 
 --> nohup ./script.sh > out.log 2>&1 & 

Display memory usage in kilobytes, wide output 
 --> free -k -w 

Reload history from file 
 --> history -r 

Check how many screen sessions are open 
 --> screen -ls 

Fetch filesystem type of partition /dev/sdf3 
 --> blkid /dev/sdf3 

Start vim in Ex mode 
 --> vim -e file.txt 

Dry run 
 --> sudo apt remove --dry-run nginx 

Create user sam without creating a home directory 
 --> useradd -M sam 

Compress metrics.txt using bzip2 
 --> bzip2 metrics.txt 

Make a request with bearer token authentication 
 --> curl -H 'Authorization: Bearer your_token_here' http://example.com/api 

Modify password of script_user 
 --> passwd script_user 

Display memory usage in kilobytes with wide output and total, update every 9 seconds, 9 times 
 --> free -k -w -t -s 9 -c 9 

Add a CDMA connection 
 --> nmcli connection add type cdma con-name MyCDMA ifname ttyUSB0 

Add user teacher with /bin/sh shell 
 --> useradd -s /bin/sh teacher 

Display memory usage in bytes with all options, update every 10 seconds, 10 times 
 --> free -b -o -l -w -t -s 10 -c 10 

Create filesystem exfat on /dev/sdc3 
 --> mkfs.exfat /dev/sdc3 

Traceroute to 8.8.8.8 forbidding fragmentation 
 --> traceroute -F 8.8.8.8 

Run shell loop without hangup 
 --> nohup bash -c 'while true; do date; sleep 60; done' & 

Pause for 42 seconds 
 --> sleep 42 

Query the TXT record for github.com and display only TXT data 
 --> host -t TXT github.com | awk -F'"' '{print $2}' 

Disable swap file creation 
 --> vim -n file.txt 

Unmount /mnt/mirror 
 --> umount /mnt/mirror 

Install without prompts 
 --> sudo apt install -y nginx 

Change niceness of network manager processes 
 --> sudo renice +5 -p $(pgrep NetworkManager) 

Query TXT record for google.com and display only answer section 
 --> dig google.com TXT +noall +answer 

Print all exported variables 
 --> env 

Display disk usage for all files and directories, using block size of 64P 
 --> du -B 64P 

Run ping and save result 
 --> nohup ping 1.1.1.1 > log.txt & 

Check screen sessions 
 --> screen -ls 

Restore access for backup_admin 
 --> passwd -u backup_admin 

Get full user activity report 
 --> w 

Remove all files in /var/log/pm-powersave.log 
 --> rm /var/log/pm-powersave.log/* 

Identify all attached partitions 
 --> blkid 

Change ownership of a directory 
 --> sudo chown user:user /var/www 

Ping github.com with 32768 byte packets and 43 times 
 --> ping -s 32768 -c 43 github.com 

Give execute access to group on bin/app 
 --> chmod g+x bin/app 

Install specific version 
 --> sudo apt install nginx=1.18.0-0ubuntu1 

Write recent history to .bash_history file 
 --> history -a 

Modify a connection to auto-connect 
 --> nmcli connection modify "My Connection" connection.autoconnect yes 

Run remote job with screen 
 --> screen -S remote ssh user@server 'longtask.sh' 

Set sales group to forecast.csv 
 --> chgrp sales forecast.csv 

Delete an empty directory called 'images' in the Desktop directory 
 --> rmdir ~/Desktop/images 

Ping facebook.com with 9 second timeout and 139 times 
 --> ping -W 9 -c 139 facebook.com 

Remove the group called qa_team 
 --> groupdel qa_team 

Show all open files by process 'python3' 
 --> lsof -c python3 

Add a Bluetooth connection 
 --> nmcli connection add type bluetooth con-name MyBluetooth ifname hci0 

Modify credentials for analytics_user 
 --> passwd analytics_user 

Create ext4 fs for /dev/sdi5 
 --> mkfs.ext4 /dev/sdi5 

Traceroute to google.com setting type of service 16 
 --> traceroute -t 16 google.com 

Download a file and mirror a website with output file 
 --> wget --mirror --output-file=log.txt http://example.com/ 

Find files in /opt with permission 644 or 600 
 --> find /opt \( -perm 644 -o -perm 600 \) 

Query the A record for google.com and display output in uppercase and color 
 --> host google.com | tr '[:lower:]' '[:upper:]' | lolcat 

Display version information for the free command 
 --> free --version 

Compress picture.jpg using bzip2 
 --> bzip2 picture.jpg 

Remove all files in /var/log/mysql 
 --> rm /var/log/mysql/* 

List open files on TCP port 443 
 --> lsof -i tcp:443 

Access partition tool for SATA drive 
 --> fdisk /dev/sda 

Run mtr to facebook.com and set timeout per probe to 1 second 
 --> mtr --timeout 1 facebook.com 

Query the MX record for google.com and grep for google 
 --> host -t MX google.com | grep google 

Traceroute to yahoo.com using TCP SYN packets 
 --> traceroute -T yahoo.com 

Find all files containing 'config' in the path in /srv using regex 
 --> find /srv -regex ".*/config.*" 

Change to the /var/log/zypper.log directory 
 --> cd /var/log/zypper.log 

Query the A record for example.com using DNS server 8.8.8.8 
 --> host example.com 8.8.8.8 

Zip log.txt and data.csv into logs.zip 
 --> zip logs.zip log.txt data.csv 

Show kernel messages and pipe to head for first 10 lines 
 --> dmesg | head -n 10 

Delete rootclone completely 
 --> userdel -r rootclone 

Set designers group for logo.svg 
 --> chgrp designers logo.svg 

Add a new WiFi connection with hidden SSID 
 --> nmcli connection add type wifi con-name "Hidden WiFi" ifname wlan0 ssid MyHiddenNetwork wifi.hidden yes 

Query the CNAME record for www.github.com 
 --> host -t CNAME www.github.com 

Set password for test_user 
 --> passwd test_user 

Assign support ownership of ticket.log 
 --> chown support ticket.log 

Change dev_infra to infra_team 
 --> groupmod -n infra_team dev_infra 

Create a file called 'index.html' in /var/www/html 
 --> touch /var/www/html/index.html 

Expire account guest123 in 3 days 
 --> usermod -e $(date -d '+3 days' +%Y-%m-%d) guest123 

Display all cd commands used 
 --> history | grep '^cd' 

Delete duplicate lines 
 --> sed '$!N; /\n.*\n/!P; D' file.txt 

Debug failed cron job 
 --> journalctl -u cron.service 

Identify filesystem on /dev/sda7 
 --> blkid /dev/sda7 

Add api_user to integration group 
 --> gpasswd -a api_user integration 

Find lines ending with semicolon in script.sh 
 --> grep ';$' script.sh 

Run atop and show only processes with nice value 0 
 --> atop | awk '$18 == 0' 

Show all connections for IPv4 
 --> netstat -4 

Change ownership of cloud.txt to clouduser 
 --> chown clouduser cloud.txt 

Create a file called 'gpu-manager.log' in /var/log 
 --> touch /var/log/gpu-manager.log 

Show current login sessions 
 --> who 

Display disk usage for all files and directories, using block size of 64T 
 --> du -B 64T 

Rename a file named 'My File.txt' with spaces to 'MyFile.txt' 
 --> mv 'My File.txt' MyFile.txt 

Ping amazon.com and stop after 3 seconds 
 --> ping -w 3 amazon.com 

Change to the directory /usr/local/share/man 
 --> cd /usr/local/share/man 

Make all files in current directory executable 
 --> chmod +x * 

Assign IP 10.0.0.2 and enable promiscuous mode on eth5 
 --> sudo ifconfig eth5 10.0.0.2 promisc 

Display disk usage for all files in /srv, excluding .git directories 
 --> du -h --exclude=".git" /srv 

Run htop and show only kernel threads 
 --> htop --kernel-threads 

Pause process for 0.02 seconds 
 --> sleep 0.02 

Dump memory to file 
 --> dd if=/dev/mem of=memory.dump bs=1024 

Monitor system usage by users 
 --> w 

Mount a device using its path and ext3 filesystem 
 --> mount -t ext3 /dev/sdl1 /mnt/ext3 

Display memory usage in bytes, update every 10 seconds indefinitely 
 --> free -b -s 10 

Alias to compile C code 
 --> alias gccbuild='gcc main.c -o main' 

Unmount a relatime mounted path 
 --> umount /mnt/relatime 

Make a new directory named 'backup' in the current folder 
 --> mkdir backup 

Login as custom user 'builder' 
 --> su builder 

Add a connection with a specific IPv4 DHCP iaid 
 --> nmcli connection add type ethernet con-name "My Ethernet" ifname eth0 ipv4.dhcp-iaid mac 

Change niceness of orchestration agent 
 --> sudo renice +5 -p $(pgrep kubelet) 

Reload the sshd service 
 --> systemctl reload sshd 

Print env and write to file 
 --> env > env_dump.txt 

Apply bzip2 on the file analytics.csv 
 --> bzip2 analytics.csv 

Create staging_users group 
 --> groupadd staging_users 

Rename voice_test group to voice_team 
 --> groupmod -n voice_team voice_test 

Display memory usage in human-readable format, no buffers/cache line 
 --> free -h -o 

Format sd card at /dev/mmcblk0p1 as FAT32 
 --> mkfs.vfat /dev/mmcblk0p1 

Add analytics as a new group 
 --> groupadd analytics 

Query the DS record for github.com 
 --> host -t DS github.com 

Grant read/write to group only 
 --> chmod 020 groupfile 

Traceroute to github.com setting type of service 16 
 --> traceroute -t 16 github.com 

Rename UX_designers to ux_team 
 --> groupmod -n ux_team UX_designers 

Start vim with minimal vimrc 
 --> vim -u NORC file.txt 

Query the DNSKEY record for example.com 
 --> nslookup -type=DNSKEY example.com 

Check for GUI users 
 --> who | grep ':0' 

Query the SPF record for github.com 
 --> host -t SPF github.com 

Create a file called 'opt' in your home 
 --> touch ~/opt 

Show kernel messages and pipe to tail for last 10 lines 
 --> dmesg | tail -n 10 

Print specific environment variable using env and grep 
 --> env | grep HOME 

Print JSON snippet 
 --> echo '{"key":"value"}' 

Reboot alert script on system startup 
 --> crontab -e # @reboot /startup_alert.sh 

List partition information of boot disk 
 --> fdisk -l /dev/sda 

Traceroute to yahoo.com using only IPv6 and max TTL 35 
 --> traceroute -6 -m 35 yahoo.com 

Display disk usage for all files in /home, excluding .cache directories 
 --> du -h --exclude=".cache" /home 

Make a GET request with verbose output 
 --> curl -v http://example.com 

Display machine hardware name and hardware platform 
 --> uname -mi 

Display memory usage in gigabytes with detailed stats and total, update every 3 seconds, 3 times 
 --> free -g -l -t -s 3 -c 3 

Switch to dockeradmin 
 --> su dockeradmin 

Prepare clean screen for next command 
 --> clear 

Find scripts named run.sh 
 --> locate run.sh 

Update the access time only for 'access.txt' 
 --> touch -a access.txt 

Refresh the terminal output 
 --> clear 

Delete an empty directory called 'weekly' in /var/log/backup 
 --> rmdir /var/log/backup/weekly 

Run htop and show only zombie processes 
 --> htop | grep ' Z ' 

Remove all crontab entries for the current user 
 --> crontab -r 

Change ownership of a cron script 
 --> sudo chown root:root script.sh 

List all UDP sockets 
 --> ss -u 

Change niceness of upower daemon 
 --> sudo renice +8 -p $(pgrep upowerd) 

Change root's password 
 --> passwd root 

Make root the owner of cron jobs 
 --> chown root /etc/cron* 

List all TCP sockets in the CLOSING state 
 --> ss -t state closing 

Delete staging_team group 
 --> groupdel staging_team 

Remove team_delta group 
 --> groupdel team_delta 

Remove qa_engineers from the system 
 --> groupdel qa_engineers 

Display disk usage with last change time 
 --> du --time=ctime 

Run atop and show only stopped processes 
 --> atop | grep stopped 

Display disk usage for /tmp up to 3 levels deep 
 --> du --max-depth=3 /tmp 

Sync files and specify a custom log file 
 --> rsync -avz --log-file=/var/log/rsync.log source_dir/ destination_dir/ 

Display disk usage for all files and directories, using block size of 4M 
 --> du -B 4M 

Kill user processes named bash 
 --> killall -u bob bash 

Pause for 0.001 seconds 
 --> sleep 0.001 

Redirect environment output 
 --> env > myenv.txt 

Use screen with name and command 
 --> screen -S monitor bash monitor.sh 

Rename 'test' in the current directory to 'test.old' 
 --> mv test test.old 

Download a file and set maximum recursion depth to 3 
 --> wget -r -l3 http://example.com/ 

List current users and their activities 
 --> w 

Display memory usage in kilobytes, update every 4 seconds indefinitely 
 --> free -k -s 4 

Use screen for persistent SSH 
 --> screen -S sshsession ssh user@host 

Change credentials of webuser 
 --> passwd webuser 

Assign an IP address to an interface 
 --> sudo ifconfig eth0 192.168.1.100 

Concatenate and display all files in /srv 
 --> find /srv -type f -exec cat {} \; 

Print first 10 lines 
 --> awk 'NR <= 10' file.txt 

Run mtr to amazon.com with 300 cycles, interval 1s, and output in split format 
 --> mtr --split -c 300 -i 1 amazon.com 

Move 'testfile' to /srv/www and prompt before overwrite 
 --> mv -i testfile /srv/www/ 

Login as auditor 
 --> su auditor 

Set photographers group to photos.zip 
 --> chgrp photographers photos.zip 

Run mtr to github.com and show output in report-wide format with 50 cycles 
 --> mtr --report-wide -c 50 github.com 

Query the A record for github.com and set search domain to . 
 --> nslookup github.com . 

Run atop in default mode 
 --> atop 

Make alias to show mounted drives 
 --> alias mounts='mount | column -t' 

Traceroute to 8.8.8.8 using interface wlan0 and max TTL 10 
 --> traceroute -i wlan0 -m 10 8.8.8.8 

Run mtr to amazon.com and use IPv6 only 
 --> mtr -6 amazon.com 

Print layout of /dev/vdk 
 --> fdisk -l /dev/vdk 

Display login environment 
 --> env 

Query PTR record for 8.8.8.8 
 --> dig -x 8.8.8.8 

Make file system of type ext3 for /dev/sde7 
 --> mkfs.ext3 /dev/sde7 

Change to maria's user account 
 --> su maria 

Delete cli_devs 
 --> groupdel cli_devs 

Add a new WiFi connection with password 
 --> nmcli connection add type wifi con-name "Secure WiFi" ifname wlan0 ssid MyNetwork wifi-sec.key-mgmt wpa-psk wifi-sec.psk "mypassword" 

Create a new crontab file from a file 
 --> crontab mycron.txt 

Ping yahoo.com with 8 second timeout and 137 times 
 --> ping -W 8 -c 137 yahoo.com 

Start the rsyslog daemon 
 --> service rsyslog start 

Use nohup for delay loop 
 --> nohup bash -c 'while true; do sleep 60; done' & 

Assign alumni group to photoshoot.jpg 
 --> chgrp alumni photoshoot.jpg 

Make exfat file system on /dev/sdb5 
 --> mkfs.exfat /dev/sdb5 

Change to the /tmp/test directory 
 --> cd /tmp/test 

Continuously display memory usage every 2 seconds, 4 times 
 --> free -s 2 -c 4 

Create ext4 file system on disk /dev/sdg4 
 --> mkfs.ext4 /dev/sdg4 

Add a user claire with password disabled 
 --> useradd -M -s /usr/sbin/nologin claire 

Run atop and display only CPU activity 
 --> atop -C 

Copy all files in the current directory to /tmp and keep everything 
 --> cp -a * /tmp/ 

Set boot flag on /dev/sda1 
 --> parted /dev/sda set 1 boot on 

Pause for 666 seconds 
 --> sleep 666 

Display memory usage with wide output (separate buffers and cache) 
 --> free -w 

Display load averages and active users 
 --> w 

Rename project_alpha to alpha_project 
 --> groupmod -n alpha_project project_alpha 

Move all files in /usr/local/bin to /opt/bin 
 --> mv /usr/local/bin/* /opt/bin/ 

Delete an empty directory called 'logs' inside /var/log 
 --> rmdir /var/log/logs 

Kill by name using sudo in a script 
 --> sudo bash -c 'killall nginx' 

Set user8 as the new owner for test.sql 
 --> chown user8 test.sql 

Change shell login password for testenv 
 --> passwd testenv 

Run mtr to amazon.com and set the number of pings per hop to 1 
 --> mtr -c 1 amazon.com 

Set password for new user emma 
 --> passwd emma 

Restart the apache2 server 
 --> service apache2 restart 

Traceroute to github.com showing version info 
 --> traceroute -V github.com 

Show UUID and type of /dev/sda5 
 --> blkid /dev/sda5 

Run celery worker detached 
 --> nohup celery -A app worker & 

Show all connections with symbolic hardware names 
 --> netstat -N 

Become user vivek 
 --> su vivek 

Query the A record for example.com and display output with line numbers 
 --> host example.com | nl 

Create a file called 'no_create.txt' only if it exists 
 --> touch -c no_create.txt 

Change report.csv's owner to manager 
 --> chown manager report.csv 

Zip report.docx and summary.pdf into report.zip 
 --> zip report.zip report.docx summary.pdf 

Query the A record for yahoo.com with search domain yahoo.net 
 --> nslookup yahoo.com yahoo.net 

Set up a new cron job in cron.d 
 --> echo '0 1 * * * root /opt/task.sh' > /etc/cron.d/task 

Fetch multiple URLs sequentially 
 --> curl http://example.com/page[1-5].html 

Display all system information except kernel name and kernel version 
 --> uname -arm 

Query the A record for example.com with port 5300 
 --> nslookup -port=5300 example.com 

Change to the /var/log/mysql directory 
 --> cd /var/log/mysql 

Connect using IPv6 only 
 --> ssh -6 user@hostname 

Create a file called 'image.jpg' in /tmp 
 --> touch /tmp/image.jpg 

Display memory usage in bytes, detailed low and high memory stats 
 --> free -b -l 

Attach to a tmux session named 'dev' 
 --> tmux attach -t dev 

Move current pane to a new window 
 --> Ctrl-b !  

Display disk usage for all directories in /var, excluding /var/log 
 --> du -h --exclude="/var/log" /var 

Simulate disk read with /dev/null 
 --> dd if=/dev/sda of=/dev/null bs=512 

Enable cron to start on boot 
 --> sudo systemctl enable cron 

Update java_developers to java_team 
 --> groupmod -n java_team java_developers 

Ping yahoo.com with 4 second timeout and 149 times 
 --> ping -W 4 -c 149 yahoo.com 

Assign dev as the owner of codebase.zip 
 --> chown dev codebase.zip 

Display disk usage for /var/lib up to 2 levels deep 
 --> du -d 2 /var/lib 

Change to the /var/mail directory 
 --> cd /var/mail 

Display cron log updates 
 --> watch tail -f /var/log/cron.log 

Grant execute permission to file hello.sh 
 --> chmod +x hello.sh 

Change the group content_creators to media_team 
 --> groupmod -n media_team content_creators 

Remove write access from group and others 
 --> chmod go-w config.cfg 

Track Nginx active connections 
 --> watch curl -s http://localhost/nginx_status 

Create a file called 'future.txt' and set its timestamp to next month 
 --> touch -d 'next month' future.txt 

Run npm install with niceness +8 
 --> nice -n 8 npm install 

Create a file called 'past.txt' and set its timestamp to last month 
 --> touch -d 'last month' past.txt 

Measure write performance 
 --> dd if=/dev/zero of=write.test bs=8k count=100000 conv=fdatasync 

Locate cron.d files 
 --> locate /etc/cron.d 

Add a connection with a specific IPv4 DHCP timeout 
 --> nmcli connection add type ethernet con-name "My Ethernet" ifname eth0 ipv4.dhcp-timeout 30 

Query NS record for google.com with +short output 
 --> dig google.com NS +short 

Add user beta2 with comment and shell 
 --> useradd -c 'Beta tester' -s /bin/bash beta2 

Query A record for google.com and set +nofail 
 --> dig google.com +nofail 

Ping facebook.com with 7 second timeout and 55 times 
 --> ping -W 7 -c 55 facebook.com 

Create a directory called 'applications' in your home 
 --> mkdir ~/applications 

See how many commands are stored 
 --> history | wc -l 

Resize current pane downwards 
 --> Ctrl-b :resize-pane -D 5 

Remove legal_team group from system 
 --> groupdel legal_team 

Create user frontenddev with group frontend 
 --> useradd -g frontend frontenddev 

List open files for current user 
 --> lsof -u $(whoami) 

Show all connections and sort by local address 
 --> netstat -an | sort -k3 

Remove sandbox1 account 
 --> userdel sandbox1 

Create documentation_review group 
 --> groupadd documentation_review 

Lock developer1 account 
 --> passwd -l developer1 

List all sockets and filter for CLOSED state 
 --> ss state closed 

Compress config.yaml using bzip2 
 --> bzip2 config.yaml 

Delete backuphelper user 
 --> userdel backuphelper 

Print partition table of /dev/sda3 
 --> fdisk -l /dev/sda3 

Modify user1's password 
 --> passwd user1 

List all UDP sockets, listening and non-listening 
 --> ss -au 

Remove doc_review group 
 --> groupdel doc_review 

Sleep before running job 
 --> sleep 15 

Find open files on port used by mysql 
 --> lsof -i :3306 

Create frontend_leads group 
 --> groupadd frontend_leads 

Move all files in /var/log/journal to /backup/journal 
 --> mv /var/log/journal/* /backup/journal/ 

Unblock ux_test user 
 --> passwd -u ux_test 

Find lines with only digits 
 --> grep -E '^[0-9]+$' numbers.txt 

Query the A record for example.com and use TCP instead of UDP 
 --> nslookup -vc example.com 

Purge the terminal view 
 --> clear 

Query A record for google.com and set +noidentify 
 --> dig google.com +noidentify 

Display memory usage in megabytes with all options, update every 12 seconds, 12 times 
 --> free -m -o -l -w -t -s 12 -c 12 

Mount an ext4 filesystem from /dev/sda2 to /mnt/data 
 --> mount -t ext4 /dev/sda2 /mnt/data 

Reset authentication token for samuel 
 --> passwd samuel 

Display memory usage in bytes with old format, update every 5 seconds, 3 times 
 --> free -b -o -s 5 -c 3 

Alias to run python3 interactive mode 
 --> alias py='python3' 

Make request with configuration file 
 --> curl -K config.txt http://example.com 

Display all system information except kernel name and kernel release 
 --> uname -a 

Run mtr to github.com and set the number of pings per hop to 8 
 --> mtr -c 8 github.com 

Download a file and ignore certificate errors 
 --> wget --no-check-certificate https://example.com/file.zip 

Create a system user datad with no login 
 --> useradd -r -s /usr/sbin/nologin datad 

Make image.jpg readable and writable only by owner 
 --> chmod 600 image.jpg 

Run black with niceness +3 
 --> nice -n 3 black . 

Start SFTP with batch file 
 --> sftp -b commands.txt user@hostname 

Display disk usage of a specific file 
 --> du file.txt 

Identify idle SSH sessions 
 --> w | grep ssh 

Show last lines of Markdown 
 --> tail -n 20 README.md 

Create 5GB empty file 
 --> dd if=/dev/zero of=empty5gb.img bs=1G count=5 

Pause for 13 seconds 
 --> sleep 13 

Connect with no host authentication 
 --> ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null user@hostname 

Rename 'fail2ban.log' to 'fail2ban.log.old' in /var/log 
 --> mv /var/log/fail2ban.log /var/log/fail2ban.log.old 

Run daily cleanup 
 --> crontab -e # @daily /cleanup.sh 

Make vfat system on /dev/sdc5 
 --> mkfs.vfat /dev/sdc5 

Create a bootable USB from ISO file 
 --> dd if=ubuntu.iso of=/dev/sdX bs=4M status=progress oflag=sync 

Ping yahoo.com and set interval to 10 seconds 
 --> ping -i 10 yahoo.com 

Connect with preferred authentications 
 --> ssh -o PreferredAuthentications=publickey user@hostname 

Remove cloud_services group 
 --> groupdel cloud_services 

Create a file called 'secure' in /var/log 
 --> touch /var/log/secure 

Monitor number of files in /tmp 
 --> watch 'ls /tmp | wc -l' 

Use pwd as part of a find to search for .log files in your current directory. 
 --> find $(pwd) -name "*.log" 

Include natalie in testbed group 
 --> gpasswd -a natalie testbed 

Bring up interface enp0s3 
 --> sudo ifconfig enp0s3 up 

Show all interfaces with protocol family ns 
 --> ifconfig -a ns 

Add user reporter with a custom UID and shell 
 --> useradd -u 3400 -s /bin/zsh reporter 

Run mtr to 1.1.1.1 and show maximum 15 hops 
 --> mtr -m 15 1.1.1.1 

Display a detailed list of all files, sorted by time, showing access time 
 --> ls -latu 

Find files opened by a command 'sshd' 
 --> lsof -c sshd 

Show all interfaces with their status (BROADCAST) 
 --> ifconfig -a | grep BROADCAST 

Change owner to webmaster for /var/www/html 
 --> chown webmaster /var/www/html 

Show disk usage for all filesystems, display only the mount point and usage percentage 
 --> df -h --output=target,pcent 

Unmount remote backup folder 
 --> umount /mnt/backup 

List all partitions of every disk 
 --> fdisk -l 

Download a file and span hosts 
 --> wget -H -r http://example.com/ 

Create a directory called 'temp' in /home/harry 
 --> mkdir /home/harry/temp 

Detach using keyboard 
 --> Ctrl-a d 

Add new user martha with comment 
 --> useradd -c 'Support Staff' martha 

Create documentation_team group 
 --> groupadd documentation_team 

Show all listening programs 
 --> netstat -lp 

Download a file with cookies from a file 
 --> wget --load-cookies cookies.txt http://example.com/file.zip 

Stop the cron daemon 
 --> sudo systemctl stop cron 

View partition information using fdisk 
 --> fdisk -l 

Create backup operator user backop 
 --> useradd backop 

Show kernel messages using syslog interface 
 --> dmesg -S 

Lock johnny's password access 
 --> passwd -l johnny 

Use env in Makefile to set variables 
 --> env VAR=val make 

Show disk usage for all filesystems, display only the filesystem and inode usage 
 --> df -h --output=source,ipcent 

Find all files in /var but skip cache directories 
 --> find /var -path "*/cache" -prune -o -type f -print 

Create group product_research 
 --> groupadd product_research 

Use bzip2 for compressing the archive.tgz 
 --> bzip2 archive.tgz 

Display all memory information in kibibytes (default) 
 --> free 

Set the netmask for an interface 
 --> sudo ifconfig eth0 netmask 255.255.255.0 

Clone entire hard disk 
 --> dd if=/dev/sda of=/dev/sdb bs=64K conv=noerror,sync 

Archive all html files into site.zip 
 --> zip site.zip *.html 

Find all lines with email addresses 
 --> grep -E '\b[\w.-]+@[\w.-]+\.[A-Za-z]{2,6}\b' *.txt 

Read history from default file 
 --> history -r 

Query the SRV record for _xmpp-server._tcp.yahoo.com 
 --> nslookup -query=SRV _xmpp-server._tcp.yahoo.com 

Run top in batch mode for scripting 
 --> top -b 

Run mtr to facebook.com and use IPv4 only 
 --> mtr -4 facebook.com 

Change backend to backend_team 
 --> groupmod -n backend_team backend 

Disable promiscuous mode on ens33 
 --> sudo ifconfig ens33 -promisc 

Display disk usage for files smaller than 100K 
 --> du --threshold=-100K 

Sync files and specify a custom address to bind to 
 --> rsync -avz --address=192.168.1.100 source_dir/ destination_dir/ 

List everything in my Documents folder, one file per line 
 --> ls -1 ~/Documents 

Rename the group devs to developers 
 --> groupmod -n developers devs 

Enable promiscuous mode on enp0s3 
 --> sudo ifconfig enp0s3 promisc 

Set group analysts for data.csv 
 --> chgrp analysts data.csv 

Copy a file 'apt.log' to /var/log/apt 
 --> cp apt.log /var/log/apt/ 

Purge and auto-remove 
 --> sudo apt purge --auto-remove nginx 

Gzip temp.txt 
 --> gzip temp.txt 

Make developers group for main.cpp 
 --> chgrp developers main.cpp 

Wait for process using saved PID 
 --> cmd & pid=$!; wait $pid 

Mount device with utf8 support 
 --> mount -o iocharset=utf8 /dev/sdq1 /mnt 

Copy all files in the current directory to /tmp and force overwrite 
 --> cp -f * /tmp/ 

Query the PTR record for 8.8.8.8 
 --> host -t PTR 8.8.8.8 

Check login status of user named guest 
 --> who | grep guest 

Disable the bluetooth service 
 --> systemctl disable bluetooth 

Show all interfaces with their collision statistics 
 --> ifconfig -a | grep collisions 

Assign group HR to employee.db 
 --> chgrp HR employee.db 

Create a file called 'logs' in your home 
 --> touch ~/logs 

Remove vikas 
 --> userdel vikas 

List all partitions with details 
 --> fdisk -l 

Compress everything in /home/user/docs into docs.zip 
 --> zip -r docs.zip /home/user/docs 

Compress app.py using bzip2 
 --> bzip2 app.py 

Show all connections and sort by state 
 --> netstat -an | sort -k6 

Copy all files in /var/log/dpkg to /backup/dpkg 
 --> cp /var/log/dpkg/* /backup/dpkg/ 

Backup current session history 
 --> history > backup_history.txt 

Traceroute to google.com with wait time 2 seconds 
 --> traceroute -w 2 google.com 

Move 'mail.txt' to /var/mail 
 --> mv mail.txt /var/mail/ 

Change to a hidden directory called '.config' in your home 
 --> cd ~/.config 

Use gzip to compress index.json 
 --> gzip index.json 

Add a new user named john 
 --> useradd john 

Compress file1.txt using bzip2 
 --> bzip2 file1.txt 

Reset access password for guest1 
 --> passwd guest1 

Change to the /var/log/lastlog directory 
 --> cd /var/log/lastlog 

Run mtr to google.com and set the number of pings per hop to 3 
 --> mtr -c 3 google.com 

Use bzip2 for compressing notes.md 
 --> bzip2 notes.md 

Create a directory called 'documents' in your home 
 --> mkdir ~/documents 

List users by terminal name 
 --> who | awk '{print $2}' 

Create a silent screen session 
 --> screen -dmS silentjob 

Only print matching parts of 'user' 
 --> grep -o 'user' users.txt 

Copy all files in the current directory to /tmp and preserve timestamps 
 --> cp -p * /tmp/ 

Find all files in /var/log 
 --> find /var/log -type f 

Sleep before starting process 
 --> sleep 3 

Add a connection with a specific IPv6 DHCP client ID 
 --> nmcli connection add type ethernet con-name "My Ethernet" ifname eth0 ipv6.dhcp-duid ll 

Set root as owner for boot files 
 --> chown root /boot/* 

Delay execution by 0.33 seconds 
 --> sleep 0.33 

Delete command number 50 
 --> history -d 50 

Ping amazon.com and print numeric output only 
 --> ping -n amazon.com 

Add a connection with a specific IPv4 DHCP client ID 
 --> nmcli connection add type ethernet con-name "My Ethernet" ifname eth0 ipv4.dhcp-client-id duid 

Assign user7 ownership to /usr/bin/custom 
 --> chown user7 /usr/bin/custom 

Compress the metrics_output.json 
 --> gzip metrics_output.json 

Run htop and show only userland threads 
 --> htop --userland-threads 

Remove and fix install 
 --> sudo dpkg -r package-name; sudo apt-get -f install 

Delete a file called 'wtmp' in /var/log 
 --> rm /var/log/wtmp 

Compress the debug.txt file 
 --> gzip debug.txt 

Traceroute to yahoo.com using only IPv6 addresses 
 --> traceroute -6 yahoo.com 

Run mtr to example.com and show output in XML format with 30 cycles 
 --> mtr --xml -c 30 example.com 

Search for 'localhost' in hosts file 
 --> grep 'localhost' /etc/hosts 

Create partition on /dev/vdb from 1GB to 2GB 
 --> parted /dev/vdb mkpart primary ext4 1GB 2GB 

Run htop and show only processes using more than 100MB RAM 
 --> htop | awk '$10 ~ /[0-9]+/ && $10 > 102400' 

Display memory usage in megabytes 
 --> free -m 

Observe ip a changes 
 --> watch ip a 

Create user vpnclient with no shell access 
 --> useradd -s /sbin/nologin vpnclient 

Remove all partitions on /dev/sdg and start fresh 
 --> parted /dev/sdg mklabel gpt 

Change credentials for user charlie 
 --> passwd charlie 

Traceroute to 8.8.8.8 using UDPLITE protocol 
 --> traceroute -UL 8.8.8.8 

Find gnome config files 
 --> locate gnome 

Show me the 5 largest files in the current directory 
 --> ls -S | head -n 5 

Switch to previous window in tmux 
 --> Ctrl-b p 

Show multicast group memberships 
 --> netstat -g 

Convert text file to uppercase 
 --> dd if=text.txt of=out.txt conv=ucase 

Copy all files in /usr/local/bin to /opt/bin 
 --> cp /usr/local/bin/* /opt/bin/ 

Run mtr to amazon.com and use a packet size of 56 bytes 
 --> mtr -s 56 amazon.com 

Sync files and specify a custom SSH config 
 --> rsync -avz -e 'ssh -F /path/to/ssh_config' source_dir/ user@remote_host:/destination_dir/ 

Query the A record for google.com and display output with line numbers 
 --> host google.com | nl 

Kill the current tmux pane 
 --> Ctrl-b x 

Show help information for the pwd. 
 --> pwd --help 

Check partition label and UUID /dev/sdc7 
 --> blkid /dev/sdc7 

Change to the directory /etc/systemd 
 --> cd /etc/systemd 

Remove all files in /var/log/apt/term.log 
 --> rm /var/log/apt/term.log/* 

Show dropped packets on network interfaces 
 --> ifconfig | grep dropped 

Open partition editor for /dev/sdt 
 --> fdisk /dev/sdt 

Mount USB at /media/usb automatically 
 --> mount /dev/sdu1 /media/usb 

Create a file called 'Africa' in your home 
 --> touch ~/Africa 

Switch to window 0 
 --> Ctrl-b 0 

Reset password of user zara 
 --> passwd zara 

Display memory usage in bytes, wide output 
 --> free -b -w 

Query the A record for yahoo.com using DNS server 9.9.9.9 
 --> host yahoo.com 9.9.9.9 

Inject config variables via env before running script 
 --> env CONFIG_PATH=/etc/config.json script.sh 

Rename user api_runner to api_exec 
 --> usermod -l api_exec api_runner 

Print all lines except the first 
 --> awk 'NR>1' file.txt 

Query MX record for google.com 
 --> dig google.com MX 

Mount a partition /dev/sdh1 with UTF8 encoding 
 --> mount -t vfat -o iocharset=utf8 /dev/sdh1 /mnt/drive 

Generate a detailed, human-readable list of files, sorted by modification time 
 --> ls -lht 

Sleep 100 milliseconds 
 --> sleep 0.1 

Run command without inheriting any variables 
 --> env -i SOME=thing ./app 

Repeat the last used 'ls' command 
 --> !ls 

Kill processes by full path name 
 --> killall /usr/bin/python3 

Run mtr to yahoo.com with 75 cycles in report mode 
 --> mtr -r -c 75 yahoo.com 

Remove app_deploy group 
 --> groupdel app_deploy 

Sync files and specify a custom daemon max connections 
 --> rsync -avz --daemon --max-connections=10 source_dir/ destination_dir/ 

Show only listening UDP ports 
 --> netstat -lu 

Show all connections for a specific address family (e.g., inet) 
 --> netstat -f inet 

List files and show their inode numbers 
 --> ls -i 

Mount a remote NFS share from 192.168.1.10:/export/nfs to /mnt/nfs 
 --> mount -t nfs 192.168.1.10:/export/nfs /mnt/nfs 

Show disk usage for all filesystems, display only the used space 
 --> df -h --output=used 

Replace only on lines starting with 'Error' 
 --> sed '/^Error/s/fail/success/' file.txt 

Query the A record for 8.8.8.8 (reverse lookup) 
 --> host 8.8.8.8 

Find files in /data owned by root and group root 
 --> find /data -user root -a -group root 

Permanently delete one command from memory 
 --> history -d <line_number> 

Show me a detailed, human-readable list of my Pictures folder 
 --> ls -lh ~/Pictures 

Delete a file called 'lastlog' in /var/log 
 --> rm /var/log/lastlog 

Temporarily override environment for one command 
 --> env TEMP=value ./script.sh 

Search for systemd service files 
 --> locate '*.service' 

Add a system user loggerbot 
 --> useradd -r loggerbot 

Assign IP 192.168.1.40 and enable allmulti on eth7 
 --> sudo ifconfig eth7 192.168.1.40 allmulti 

Run intensive script with niceness -1 
 --> sudo nice -n -1 ./intensive.sh 

Query the NAPTR record for yahoo.com 
 --> host -t NAPTR yahoo.com 

Rename devops1 to devops_main 
 --> usermod -l devops_main devops1 

Copy all files in the current directory to /tmp and keep everything and keep ownership 
 --> cp -a --preserve=ownership * /tmp/ 

Display all system information except kernel name and machine hardware name 
 --> uname -arvp 

Make a request with retry delay 
 --> curl --retry 3 --retry-delay 5 http://example.com 

Run tar with niceness +12 
 --> nice -n 12 tar -xzf archive.tar.gz 

Show usernames and remote connections 
 --> who 

List all files with details, human-readable sizes, and sorted by size in reverse 
 --> ls -lShr 

Display a detailed list of all files, sorted by access time, newest first 
 --> ls -laut 

Assign IP 192.168.1.50 and disable allmulti on eth8 
 --> sudo ifconfig eth8 192.168.1.50 -allmulti 

Create alias for docker compose 
 --> alias dcu='docker-compose up' 

Assign ownership of settings.ini to adminuser 
 --> chown adminuser settings.ini 

Ping google.com and set a custom source IP 
 --> ping -I 192.168.1.10 google.com 

Set rita as the new owner of debug.log 
 --> chown rita debug.log 

Locate application logs 
 --> locate app.log 

Traceroute to example.com using interface wlan0 and max TTL 15 
 --> traceroute -i wlan0 -m 15 example.com 

Remove a file called 'test.log' in the parent directory 
 --> rm ../test.log 

Check for local login users 
 --> who | grep tty 

Allow devuser2 to log in again 
 --> passwd -u devuser2 

Allow only owner to read and write 
 --> chmod 600 doc 

Change to the /var/log/apt/term.log directory 
 --> cd /var/log/apt/term.log 

Query the MX record for example.com 
 --> nslookup -query=MX example.com 

Assign ownership to user14 on system.log 
 --> chown user14 system.log 

Set a new password for alice 
 --> passwd alice 

Print label of /dev/sdi4 
 --> blkid /dev/sdi4 

Disable emma's login with password 
 --> passwd -l emma 

Run cron in debug mode 
 --> sudo cron -x 

List everything in /tmp, including hidden files, with details 
 --> ls -la /tmp 

Run mtr to facebook.com with 100 cycles in report mode 
 --> mtr -r -c 100 facebook.com 

Wait for function background execution 
 --> do_something() { sleep 1; }; do_something & wait 

Temporarily disable analytics_user login 
 --> passwd -l analytics_user 

Open multiple files in windows 
 --> vim -o file1.txt file2.txt 

Create group frontend_team 
 --> groupadd frontend_team 

Create a file called 'test_data' in your home 
 --> touch ~/test_data 

Set group leadteam for dashboard.py 
 --> chgrp leadteam dashboard.py 

List only interfaces that are up 
 --> ifconfig -u 

Remove an empty directory called 'config' in /etc 
 --> rmdir /etc/config 

Download all files from a website recursively and convert links for offline viewing 
 --> wget -r -k http://example.com/ 

Delete voice_team group 
 --> groupdel voice_team 

Uninstall gimp 
 --> sudo apt remove gimp 

Remove api_team group 
 --> groupdel api_team 

Reload the cups service 
 --> service cups reload 

Switch to the /sbin directory 
 --> cd /sbin 

See all devices and partitions 
 --> fdisk -l 

Print partition information for /dev/nvme0n1 
 --> parted /dev/nvme0n1 print 

Create a directory named 'downloads' in /mnt/usb 
 --> mkdir /mnt/usb/downloads 

Use env to simulate clean environment 
 --> env -i VAR=1 command 

Create a new tmux session named 'work' 
 --> tmux new -s work 

Print all lines that contain numbers 
 --> awk '/[0-9]/' file.txt 

Find HTML templates 
 --> locate '*.html' 

Set user13 as new owner for payroll.xlsx 
 --> chown user13 payroll.xlsx 

Set tim as new owner of resume.pdf 
 --> chown tim resume.pdf 

Allow only owner to execute 
 --> chmod 100 task.sh 

Find files in /var accessed more recently than /tmp/test.log 
 --> find /var -anewer /tmp/test.log 

Create a file called 'lintian' in your home 
 --> touch ~/lintian 

Compress the scripts folder recursively to scripts.zip 
 --> zip -r scripts.zip scripts 

Show all connections and filter for a specific port (e.g., 80) 
 --> netstat -an | grep ':80' 

Copy all files in the current directory to /tmp and keep everything and keep xattr 
 --> cp -a --preserve=xattr * /tmp/ 

Query NS record for google.com and display only answer section 
 --> dig google.com NS +noall +answer 

Detach screen after running 
 --> Ctrl-a d 

Create a file called 'file.txt' and set its timestamp to 00:00 on Jan 1, 2025 
 --> touch -t 202501010000 file.txt 

Clean up terminal before running next command 
 --> clear 

Print YAML snippet 
 --> echo "key: value" 

Create a directory called 'dev' in /srv 
 --> mkdir /srv/dev 

Check partition table of SATA disk 
 --> fdisk -l /dev/sda 

Set a password for backup_admin 
 --> passwd backup_admin 

Enable firewall 
 --> sudo ufw enable 

Display memory usage in kilobytes with wide output and total, update every 9 seconds, 9 times 
 --> free -k -w -t -s 9 -c 9 

Display memory usage in human-readable format with detailed stats, update every 25 seconds, 7 times 
 --> free -h -l -s 25 -c 7 

Find files in /tmp with more than two hard links 
 --> find /tmp -links +2 

Create a file called 'no_create.txt' only if it exists, do not create new 
 --> touch -c no_create.txt 

Allow unauthenticated 
 --> sudo apt install --allow-unauthenticated nginx 

Create and detach tmux session named 'logs' 
 --> tmux new -d -s logs 

Restore login ability for ethan 
 --> passwd -u ethan 

Start simple http server in Python 
 --> nohup python3 -m http.server & 

Query A record for google.com and set +nocmd 
 --> dig google.com +nocmd 

Compress the Python script app.py 
 --> gzip app.py 

Reset login password for bob_admin 
 --> passwd bob_admin 

Query the SPF record for example.com 
 --> host -t SPF example.com 

Run top and show only processes with a specific command name 
 --> top | grep COMMAND_NAME 

Run python script every 45 minutes 
 --> crontab -e # */45 * * * * python3 /job.py 

Follow file with retry on rename 
 --> tail -F file.log 

Open file and show invisibles 
 --> vim -c 'set list' file.txt 

Change niceness of user session processes 
 --> sudo renice +5 -u $USER 

Monitor process tree 
 --> watch pstree 

Change to the /var/log/Xorg.0.log directory 
 --> cd /var/log/Xorg.0.log 

Find files in /etc where user has execute permission 
 --> find /etc -perm /u+x 

Show kernel messages in raw format 
 --> dmesg -r 

Find .conf files in /srv up to 4 levels deep 
 --> find /srv -maxdepth 4 -name "*.conf" 

Search for SSL certificates 
 --> locate '*.crt' 

Show all processes and grep for 'sshd' 
 --> ps aux | grep sshd 

Run loop with background tasks and wait 
 --> for i in {1..3}; do sleep $i & done; wait 

Sync files and specify a custom daemon group 
 --> rsync -avz --daemon --gid=nogroup source_dir/ destination_dir/ 

Run atop and show only the top 5 CPU-consuming processes 
 --> atop | head -n 10 | tail -n 5 

Change to the directory /etc/skel 
 --> cd /etc/skel 

Delete a file called 'mail.txt' in /var/mail 
 --> rm /var/mail/mail.txt 

Switch to the root directory 
 --> cd / 

Add a VLAN connection 
 --> nmcli connection add type vlan con-name MyVLAN dev eth0 id 100 

Archive all docs and PDFs 
 --> zip documents.zip *.doc *.pdf 

Display memory usage in human-readable format, wide output 
 --> free -h -w 

Trim trailing whitespace 
 --> sed 's/[ 	]*$//' file.txt 

Create a directory called 'tmp' in your home 
 --> mkdir ~/tmp 

Become prod_user 
 --> su prod_user 

Create entire disk partition as ext4 on /dev/sdo 
 --> parted /dev/sdo mkpart primary ext4 0% 100% 

Traceroute to example.com using ICMP echo requests and max TTL 25 
 --> traceroute -I -m 25 example.com 

Extract login times only 
 --> who | awk '{print $3, $4}' 

Run htop and highlight running tasks 
 --> htop --highlight-changes 

Temporarily lock password for backend_admin 
 --> passwd -l backend_admin 

Update password for linuxuser 
 --> passwd linuxuser 

Display all system information except kernel name and kernel version 
 --> uname -armp 

Restart the smbd daemon 
 --> service smbd restart 

Show me a detailed list sorted by extension 
 --> ls -lX 

Query the TLSA record for google.com 
 --> host -t TLSA google.com 

Move all files in /var/spool/cron to /backup/cron 
 --> mv /var/spool/cron/* /backup/cron/ 

List all files and their inodes, sorted by access time 
 --> ls -itu 

Create a file called 'logfile' in /var/log 
 --> touch /var/log/logfile 

Show the man page for ss command 
 --> man ss 

Traceroute to github.com forbidding fragmentation 
 --> traceroute -F github.com 

Connect without pseudo-terminal allocation 
 --> ssh -T user@hostname 

Unmount cloud storage drive 
 --> umount /mnt/cloud 

Enable auto updates 
 --> sudo dpkg-reconfigure unattended-upgrades 

Remove logs before demo 
 --> clear 

Change niceness of alerting agent 
 --> sudo renice +5 -p $(pgrep alertmanager) 

Add a bridge slave connection 
 --> nmcli connection add type ethernet con-name bridge-slave-eth0 ifname eth0 master br0 

Change group name from testers to qa_team 
 --> groupmod -n qa_team testers 

Alias to clone a Git repo 
 --> alias gcl='git clone' 

Sleep between script retries 
 --> sleep 20 

Change GID of builduser to 9000 
 --> usermod -g 9000 builduser 

Remove lina from testers group 
 --> gpasswd -d lina testers 

Use /bin/pwd to display your current directory. 
 --> /bin/pwd 

Delete a file called 'apt.log' in /var/log/apt 
 --> rm /var/log/apt/apt.log 

Use env to print variables before running program 
 --> env VAR=xyz ./program 

Ping github.com with 10 second timeout and 141 times 
 --> ping -W 10 -c 141 github.com 

Unlock account of verify_user 
 --> usermod -U verify_user 

Show only the IP address for eth0 
 --> ifconfig eth0 | grep inet 

Query A record for google.com and set +noshort 
 --> dig google.com +noshort 

Open file and start diff mode between two files 
 --> vim -d file1.txt file2.txt 

Display disk usage for all files and directories, using block size of 5G 
 --> du -B 5G 

Restrict password access for audit_user 
 --> passwd -l audit_user 

Change to maria's user account 
 --> su maria 

Allow only group to write to message.txt 
 --> chmod 020 message.txt 

Show me the files in /bin, sorted by access time 
 --> ls -tu /bin 

Show only MAC addresses of interfaces 
 --> ifconfig | grep ether 

Show disk usage for all filesystems in POSIX format 
 --> df -P 

Create a directory called 'games' in your home 
 --> mkdir ~/games 

View remote user logins 
 --> who | grep pts 

Give sara ownership of /home/sara 
 --> chown sara /home/sara 

Clean up CLI screen 
 --> clear 

Remove unwanted_user from system 
 --> userdel unwanted_user 

Sync files and don't preserve special files 
 --> rsync -avz --no-specials source_dir/ destination_dir/ 

Display kernel version, machine hardware name, and hardware platform 
 --> uname -vmi 

Remove helpdesk_demo account 
 --> userdel helpdesk_demo 

Interactive mode: set query type to MX and look up google.com 
 --> nslookup
set type=MX
google.com 

Recursively move the /srv directory to /backup/srv 
 --> mv /srv /backup/srv/ 

Assign scheduling group to calendar.xlsx 
 --> chgrp scheduling calendar.xlsx 

Create a directory called 'test' in /home/alice 
 --> mkdir /home/alice/test 

Show the full path to the directory you are currently in. 
 --> pwd 

Create a file called 'ref.txt' and set its timestamp to match 'source.txt' 
 --> touch -r source.txt ref.txt 

Restart the computer 
 --> sudo reboot 

Show the inode number and add type indicators for all files 
 --> ls -iF 

Print fields if line starts with 'user:' 
 --> awk '/^user:/ {print $2, $3}' file.txt 

Find files in /home with SUID bit set 
 --> find /home -perm -4000 

Query the A record for github.com with a timeout of 15 seconds 
 --> nslookup -timeout=15 github.com 

Update dev_team group name to software_dev 
 --> groupmod -n software_dev dev_team 

Copy all files in the current directory to /tmp and keep everything and keep permissions 
 --> cp -a -p * /tmp/ 

Display user sessions by login time 
 --> who | sort -k3 

Remove expiredbot 
 --> userdel expiredbot 

Search for 'error' in access.log 
 --> grep 'error' access.log 

Alias for fast directory listing 
 --> alias l='ls -CF' 

Change niceness of processes matching regex 
 --> sudo renice +9 -p $(pgrep -f 'python.*server') 

Insert blank line after every line 
 --> sed G file.txt 

Change to the /lib64 directory 
 --> cd /lib64 

Run atop and show only zombie processes 
 --> atop | grep zombie 

Assign workshop group to tools.json 
 --> chgrp workshop tools.json 

Display all system information except kernel name and hardware platform 
 --> uname -arvm 

Show last 100 bytes 
 --> tail -c 100 file.txt 

Show configuration for all interfaces, including inactive 
 --> ifconfig -a 

Download a file and specify a maximum number of redirects 
 --> wget --max-redirect=5 http://example.com/file.zip 

Open fdisk prompt for /dev/sdd 
 --> fdisk /dev/sdd 

Print block device data 
 --> blkid 

Show all interfaces with their status (UP/DOWN) 
 --> ifconfig -a | grep -E 'UP|DOWN' 

Set execute permission for all shell scripts 
 --> chmod +x *.sh 

Copy all files in the current directory to /tmp and keep everything and keep timestamps 
 --> cp -a --preserve=timestamps * /tmp/ 

Exit master connection 
 --> ssh -O exit user@hostname 

Monitor network interfaces 
 --> watch -n 3 ifconfig 

Sync files and specify a custom daemon pre-xfer exec 
 --> rsync -avz --daemon --pre-xfer-exec=/path/to/script source_dir/ destination_dir/ 

Download a file and mirror a website with no cookies 
 --> wget --mirror --no-cookies http://example.com/ 

Assign chris to own all files in /data 
 --> chown chris /data/* 

See users who are using vim 
 --> w | grep vim 

Move all files in the current directory to /tmp and keep timestamps 
 --> mv --preserve=timestamps * /tmp/ 

Change niceness of a running script by job number 
 --> renice +4 %1 

Add early_access group 
 --> groupadd early_access 

Display memory usage in megabytes with total, update every 15 seconds, 5 times 
 --> free -m -t -s 15 -c 5 

Ping yahoo.com with 128 byte packets and 27 times 
 --> ping -s 128 -c 27 yahoo.com 

Create a directory called 'themes' in your home 
 --> mkdir ~/themes 

Show who is logged in and what they are doing 
 --> w 

Open file at line and column 
 --> vim +call cursor(100,5) file.txt 

Display disk usage for all files and directories, using block size of 8P 
 --> du -B 8P 

Run top and show only processes using more than 100MB RAM 
 --> top -b -n 1 | awk '$10 ~ /[0-9]+/ && $10 > 102400' 

Find files in /var owned by group admin 
 --> find /var -group admin 

View partitions on system disk 
 --> fdisk -l /dev/sda 

Run top and display only the header 
 --> top -b -n 1 | head -n 5 

Traceroute to example.com with max TTL 20 and 6 probes per hop 
 --> traceroute -m 20 -q 6 example.com 

Run htop and display memory meters only 
 --> htop --only-mem 

Create a directory called 'scripts' in the current directory 
 --> mkdir scripts 

Move user rahul's home directory to /home/users/rahul 
 --> usermod -d /home/users/rahul -m rahul 

Print double quotes 
 --> echo 'He said "Hello"' 

Set analysts group for financial_report.pdf 
 --> chgrp analysts financial_report.pdf 

Format drive with new GPT and print layout 
 --> parted /dev/sdm mklabel gpt print 

Display open ports 
 --> watch 'ss -tuln' 

Make jane the owner of all .log files 
 --> chown jane *.log 

Unlock user download_bot 
 --> usermod -U download_bot 

Run a script that modifies system settings 
 --> sudo ./setup.sh 

Traceroute to yahoo.com with debugging enabled 
 --> traceroute -d yahoo.com 

Quick start screen and detach 
 --> screen -dmS quicktop top 

Change group research to research_team 
 --> groupmod -n research_team research 

Display memory usage in bytes with all options, update every 10 seconds, 10 times 
 --> free -b -o -l -w -t -s 10 -c 10 

Display files in the parent directory, sorted by size 
 --> ls -S .. 

Run mtr to 8.8.8.8 and set the number of pings per hop to 13 
 --> mtr -c 13 8.8.8.8 

Initialize msdos partition table 
 --> parted /dev/sda mklabel msdos 

Combine `pwd` with an error message if a directory does not exist. 
 --> if [ ! -d "/some/dir" ]; then echo "Not found, current: $(pwd)"; fi 

Format SD card partition /dev/mmcblk0p2 as vfat 
 --> mkfs.vfat /dev/mmcblk0p2 

Display memory usage in bytes, update every 1 second, 2 times 
 --> free -b -s 1 -c 2 

List active cron jobs by user 
 --> crontab -l -u username 

Change to the parent directory and list its contents 
 --> cd .. && ls 

Add new intern user 
 --> useradd intern 

Make file system on /dev/sdh3 as ntfs 
 --> mkfs.ntfs /dev/sdh3 

Run cron job with environment variables 
 --> crontab -e # PATH=/usr/bin:/bin 

Create a directory called 'bin' in your home 
 --> mkdir ~/bin 

Add team_rocket group 
 --> groupadd team_rocket 

Remove a file called 'config.yaml' in /etc 
 --> rm /etc/config.yaml 

Create a file called 'temp' in /home/erin 
 --> touch /home/erin/temp 

Show help screen 
 --> less -h 

Convert tabs to commas 
 --> awk '{gsub("	", ","); print}' file.txt 

Download a file and mirror a website with output file, document, directory, quiet, debug, and verbose 
 --> wget --mirror --output-file=log.txt --output-document=output.html --directory-prefix=/tmp --quiet --debug --verbose http://example.com/ 

Delete user rahul 
 --> userdel rahul 

Find files in /tmp smaller than 100 bytes 
 --> find /tmp -size -100c 

Ping facebook.com with a timeout of 2 seconds per packet 
 --> ping -W 2 facebook.com 

Query PTR record for 8.8.8.8 and display only answer section 
 --> dig -x 8.8.8.8 +noall +answer 

Exit screen session 
 --> exit 

Create ldap_users group 
 --> groupadd ldap_users 

Download a file and mirror a website with no cache 
 --> wget --mirror --no-cache http://example.com/ 

Enable promiscuous mode on ens33 
 --> sudo ifconfig ens33 promisc 

Open multiple files in vertical splits 
 --> vim -O file1.txt file2.txt 

Show configuration for all active network interfaces 
 --> ifconfig 

Inspect disk partitions of /dev/nvme2n1 
 --> fdisk -l /dev/nvme2n1 

Compress notes.txt into notes.zip 
 --> zip notes.zip notes.txt 

Disable sysadmin password access 
 --> passwd -l sysadmin 

Set engineering group on build.zip 
 --> chgrp engineering build.zip 

Force delete a file called 'lockedfile' in /tmp 
 --> rm -f /tmp/lockedfile 

Verbose output 
 --> sudo apt remove --verbose-versions nginx 

Assign system group to boot.log 
 --> chgrp system boot.log 

Run htop and show only the first 10 processes 
 --> htop | head -n 10 

Become reports user 
 --> su reports 

Display memory usage in gigabytes with total, update every 5 seconds, 6 times 
 --> free -g -t -s 5 -c 6 

Start the smbd service 
 --> service smbd start 

List all TCP sockets, listening and non-listening 
 --> ss -at 

Become builduser 
 --> su builduser 

Truncate file by overwriting with zeroes 
 --> dd if=/dev/zero of=file.txt bs=1K count=1 conv=notrunc 

Activate a network interface (e.g., eth0) 
 --> sudo ifconfig eth0 up 

Connect to a WiFi network 
 --> nmcli device wifi connect MyNetwork 

Create a directory called 'testdir' and enter it 
 --> mkdir testdir && cd testdir 

Unlock guest_temp user 
 --> passwd -u guest_temp 

Find files in /data on the same filesystem 
 --> find /data -mount -type f 

Query the PTR record for 8.8.8.8 
 --> nslookup -query=PTR 8.8.8.8 

Find all console users 
 --> who | grep tty 

Delete mysql_admins 
 --> groupdel mysql_admins 

Query the DNSKEY record for yahoo.com 
 --> host -t DNSKEY yahoo.com 

Show only the RX packets for eth0 
 --> ifconfig eth0 | grep 'RX packets' 

Query DNSKEY record for google.com 
 --> dig google.com DNSKEY 

Create a file called 'info' in your home 
 --> touch ~/info 

Rename 'data.json' to 'data_backup.json' in /srv/www 
 --> mv /srv/www/data.json /srv/www/data_backup.json 

Display kernel release, version, and operating system 
 --> uname -rvo 

Rename 'secure' to 'secure.old' in /var/log 
 --> mv /var/log/secure /var/log/secure.old 

Attach disk with noexec option 
 --> mount -o noexec /dev/sdm1 /mnt 

Ping yahoo.com with 8 second timeout and 17 times 
 --> ping -W 8 -c 17 yahoo.com 

Create an alias for installing packages 
 --> alias install='sudo apt install' 

Open file and prompt at line number 
 --> less +100g file.txt 

Rename 'sa.log' to 'sa.log.old' in /var/log/sa 
 --> mv /var/log/sa/sa.log /var/log/sa/sa.log.old 

Find out which users are online 
 --> who 

Clear out all history entries 
 --> history -c 

Force depends 
 --> sudo dpkg -r --force-depends package-name 

Delete an empty directory named 'backup' in the current folder 
 --> rmdir backup 

Change to the /usr/games directory 
 --> cd /usr/games 

Zip server logs into serverlogs.zip 
 --> zip serverlogs.zip server.log access.log 

Add a connection with a specific IPv4 DHCP reject servers 
 --> nmcli connection add type ethernet con-name "My Ethernet" ifname eth0 ipv4.dhcp-reject-servers "192.168.1.2 192.168.1.3" 

Remove dev_group 
 --> groupdel dev_group 

Find files in /var larger than 100MB 
 --> find /var -size +100M 

Deactivate a connection 
 --> nmcli connection down "My Connection" 

Display inode usage 
 --> watch df -i 

List users and their CPU usage 
 --> w 

List all running services 
 --> systemctl list-units --type=service --state=running 

Check number of open files 
 --> watch 'lsof | wc -l' 

Create crontab entry from stdin 
 --> cat mycron | crontab - 

Search recursively for 'function' in current directory 
 --> grep -r 'function' . 

Show kernel messages in human-readable format 
 --> dmesg -H 

Change root's password 
 --> passwd root 

Show kernel messages related to network 
 --> dmesg | grep -i net 

Set permission to 666 on open_file.txt 
 --> chmod 666 open_file.txt 

Verbose purge 
 --> sudo apt purge --verbose-versions nginx 

Login as automation user 
 --> su automation 

Move all files in the current directory to /tmp and keep everything 
 --> mv --preserve=all * /tmp/ 

Change to the /var/log/clamav directory 
 --> cd /var/log/clamav 

Display memory usage in megabytes, wide output 
 --> free -m -w 

Add mehul to ops group 
 --> gpasswd -a mehul ops 

Run mtr to yahoo.com with IPv6, 75 cycles, interval 2s, and output in raw format 
 --> mtr -6 --raw -c 75 -i 2 yahoo.com 

Change to the /usr/include directory 
 --> cd /usr/include 

Copy all files in /var/log/xrdp to /backup/xrdp 
 --> cp /var/log/xrdp/* /backup/xrdp/ 

Test WebSocket connection 
 --> curl --include --no-buffer --header 'Connection: Upgrade' --header 'Upgrade: websocket' --header 'Sec-WebSocket-Key: x3JJHMbDL1EzLkh9GBhXDw==' --header 'Sec-WebSocket-Version: 13' http://example.com/websocket 

Recursively list all files in this directory and its subdirectories 
 --> ls -R 

Block admin1 from password login 
 --> passwd -l admin1 

Remove user sshbot and its home directory 
 --> userdel -r sshbot 

Display memory usage in kilobytes with total, update every 10 seconds, 4 times 
 --> free -k -t -s 10 -c 4 

Disable password login for alice 
 --> passwd -l alice 

Query the TLSA record for example.com 
 --> host -t TLSA example.com 

Force stop apache2 
 --> systemctl stop apache2 

List files with human-readable sizes 
 --> ls -lh 

Check available partitions on nvme disk 
 --> fdisk -l /dev/nvme0n1 

Ignore missing 
 --> sudo apt autoremove --fix-missing 

Check status of systemd-journald 
 --> systemctl status systemd-journald 

Background npm install and wait 
 --> npm install & wait 

Display detailed low and high memory statistics 
 --> free -l 

Copy all files in the current directory to /tmp and keep everything and prompt before overwrite 
 --> cp -a -i * /tmp/ 

Read email via POP3 
 --> curl -u username:password pop3://mail.example.com/1 

Query the SOA record for github.com 
 --> nslookup -query=SOA github.com 

Run mtr to example.com with IPv4, 25 cycles, interval 1s, and output in XML format 
 --> mtr -4 --xml -c 25 -i 1 example.com 

Open file and start in replace mode 
 --> vim -c 'normal! R' file.txt 

Run script every 2 hours 
 --> crontab -e # 0 */2 * * * /script.sh 

Show all processes as a tree in BSD format 
 --> ps axjf 

Completely delete oldservice account 
 --> userdel -r oldservice 

Forcefully remove mounted share 
 --> umount -f /mnt/share 

Delete miscuser account and files 
 --> userdel -r miscuser 

Create a system user cachebot for caching operations 
 --> useradd -r cachebot 

List all listening TCP and UDP sockets 
 --> ss -tuln 

Run atop and show threads 
 --> atop -y 

Create a directory called 'projects' and a subdirectory '2025' in one command 
 --> mkdir -p projects/2025 

Show most recent journal entries and follow new ones 
 --> journalctl -f 

No prompts 
 --> sudo apt purge -y nginx 

Show disk usage for all filesystems, filter for /dev/sda* devices 
 --> df -h | grep '/dev/sda' 

Delete super_admins group 
 --> groupdel super_admins 

Traceroute to google.com showing version info 
 --> traceroute -V google.com 

Print all users currently using the system 
 --> w 

Assign dev group to app.py 
 --> chgrp dev app.py 

Change alpha_users to early_users 
 --> groupmod -n early_users alpha_users 

Show all processes in BSD format 
 --> ps ax 

Print in background 
 --> echo "Hello" & 

Find login info on pts/2 
 --> who | grep pts/2 

Copy 'notes.txt' from your home to the Desktop 
 --> cp ~/notes.txt ~/Desktop/ 

Use bzip2 to shrink setup.cfg 
 --> bzip2 setup.cfg 

Find files opened on port 22 
 --> lsof -i :22 

Alias to check open ports 
 --> alias openports='netstat -tuln' 

Create a zip named backup.zip containing all CSV files 
 --> zip backup.zip *.csv 

Create a file called 'syslog' in /var/log 
 --> touch /var/log/syslog 

Show kernel messages with local time and delta 
 --> dmesg -e 

Find all .txt files in /home 
 --> find /home -name "*.txt" 

Wait for process with PID stored in a variable 
 --> wait $pid 

Locate javac binary 
 --> locate javac 

Get full block info of /dev/sdi1 
 --> blkid /dev/sdi1 

List all sockets and close a connection to 192.168.1.123:80 
 --> sudo ss --kill dst 192.168.1.123 dport = 80 

Display memory usage in bytes with detailed stats, update every 5 seconds, 3 times 
 --> free -b -l -s 5 -c 3 

Change ownership of file.txt to user1 
 --> chown user1 file.txt 

Find files in /srv not owned by root 
 --> find /srv -not -user root 

Summarize total disk usage for each argument 
 --> du -s /var /etc 

Make a request with compressed response 
 --> curl --compressed http://example.com 

Zip the log directory into logs_backup.zip 
 --> zip -r logs_backup.zip log 

Check optimal alignment for /dev/sdc partition 1 
 --> parted /dev/sdc align-check optimal 1 

Show the list of all previously run commands 
 --> history 

Display disk usage for all files and directories, using block size of 2E 
 --> du -B 2E 

Show broadcast addresses of interfaces 
 --> ifconfig | grep broadcast 

Find files in /home with UID 1000 
 --> find /home -uid 1000 

Filter bash history for sudo commands 
 --> history | grep sudo 

Query A record for google.com with UDP 
 --> dig google.com +notcp 

Remove all files in the Desktop directory 
 --> rm ~/Desktop/* 

Generate SSH key pair with comment 
 --> ssh-keygen -t rsa -C 'user@email.com' 

Compress summary.txt using bzip2 
 --> bzip2 summary.txt 

Show disk usage for all filesystems, display only the filesystem and used space 
 --> df -h --output=source,used 

Run mtr to example.com and use a packet size of 100 bytes 
 --> mtr -s 100 example.com 

Delete the latest command from history 
 --> history -d $(history 1 | awk '{print $1}') 

View process activity by terminal 
 --> w | awk '{print $2, $8}' 

Run atop and show only processes with TTY 
 --> atop | grep -v '?' 

Enable ARP on an interface 
 --> sudo ifconfig eth0 arp 

Display memory usage in bytes, no buffers/cache line 
 --> free -b -o 

Print all lines with numbers 
 --> grep '[0-9]' data.txt 

Add another file to an existing zip 
 --> zip existing.zip newfile.txt 

Show tags index 
 --> less -t tag file.txt 

Remove all files in the /srv directory 
 --> rm /srv/* 

Bind mount /mnt/source to /mnt/target 
 --> mount --bind /mnt/source /mnt/target 

Create a directory called 'logs' in your home 
 --> mkdir ~/logs 

Display disk usage in bytes 
 --> du -b 

Access the webadmin account 
 --> su webadmin 

Disable user william's login 
 --> passwd -l william 

Exclude processes owned by root 
 --> pkill -U alice myapp 

Change to the directory /usr/local/lib64 
 --> cd /usr/local/lib64 

Show all processes for UID 1000 
 --> ps -U 1000 

Run temperature monitor every 2 minutes 
 --> crontab -e # */2 * * * * /temp.sh 

Traceroute to github.com specifying destination port 33434 
 --> traceroute -p 33434 github.com 

Sync files and ignore symlinks 
 --> rsync -avz --links --safe-links source_dir/ destination_dir/ 

List all TCP sockets using IPv6 
 --> ss -6 -t 

Copy all files in the current directory to /tmp and keep everything and show progress 
 --> cp -a -v * /tmp/ 

Change ownership of folder docs to user16 
 --> chown user16 docs 

Show logs for a specific systemd slice 
 --> journalctl _SYSTEMD_SLICE=user-1000.slice 

Replace 'yes' with 'no' only on odd-numbered lines 
 --> sed '1~2s/yes/no/g' file.txt 

Move all files in the current directory to /tmp and show progress 
 --> mv -v * /tmp/ 

Find sessions from specific host 
 --> who | grep 192.168.1.1 

Ping google.com and set packet size to 1500 bytes 
 --> ping -s 1500 google.com 

Sync files and specify a custom daemon outgoing chmod 
 --> rsync -avz --daemon --outgoing-chmod=Du=rwx,go=rx,Fu=rw,go=r source_dir/ destination_dir/ 

Change to the directory pointed to by the symbolic link 'mylink' without following the link 
 --> cd -P mylink 

Rename 'user.log' to 'user.log.old' in /var/log 
 --> mv /var/log/user.log /var/log/user.log.old 

Display all system information except machine hardware name 
 --> uname -asrvpoipn 

Set DEBUG=true and run app.js 
 --> env DEBUG=true node app.js 

Modify login for database_admin 
 --> passwd database_admin 

Kill zombie processes 
 --> pkill -HUP -P 1 

Restore login permissions for dev_ops 
 --> passwd -u dev_ops 

Assign read and execute permissions to everyone on index.html 
 --> chmod a+rx index.html 

Kill by memory usage (approx via sorting) 
 --> ps aux | sort -rk 4 | head -n 5 | awk '{print $2}'| xargs kill 

Change media group for banner.psd 
 --> chgrp media banner.psd 

List all TCP sockets for source port 443 or 80 
 --> ss -nt '( src :443 or src :80 )' 

Double the second column value and print 
 --> awk '{print $2 * 2}' file.txt 

Delete an empty directory named 'downloads' in /mnt/usb 
 --> rmdir /mnt/usb/downloads 

Query DS record for google.com 
 --> dig google.com DS 

Create a file called 'clamav.log' in /var/log/clamav 
 --> touch /var/log/clamav/clamav.log 

Find files in /etc changed more recently than /etc/passwd 
 --> find /etc -cnewer /etc/passwd 

Run mtr to facebook.com and set the number of pings per hop to 18 
 --> mtr -c 18 facebook.com 

Sync files excluding specific patterns 
 --> rsync -avz --exclude='*.log' source_dir/ destination_dir/ 

Include sarah in analytics group 
 --> gpasswd -a sarah analytics 

Change the login shell of user alice to bash 
 --> usermod -s /bin/bash alice 

Create a directory called 'weekly' in /var/log/backup 
 --> mkdir /var/log/backup/weekly 

Mount ISO file with read-write loopback 
 --> mount -o loop,rw image.iso /mnt/iso 

Run mtr to facebook.com and set maximum TTL to 40 
 --> mtr -m 40 facebook.com 

Open file and use ex commands only 
 --> ex file.txt 

Add a connection with a specific IPv4 DHCP wait timeout 
 --> nmcli connection add type ethernet con-name "My Ethernet" ifname eth0 ipv4.dhcp-wait-timeout 30 

Clean visual terminal screen 
 --> clear 

Query A record for google.com and set source IP 192.168.1.1 
 --> dig google.com -b 192.168.1.1 

Unmount CIFS mount from /mnt/cifs 
 --> umount /mnt/cifs 

Display all system information except kernel name and kernel version 
 --> uname -ar 

Make CEO group own strategy.txt 
 --> chgrp CEO strategy.txt 

Display disk usage in megabytes 
 --> du -m 

Traceroute to google.com using only IPv6 and max TTL 20 
 --> traceroute -6 -m 20 google.com 

Empty the terminal buffer 
 --> clear 

Display memory usage in gigabytes 
 --> free -g 

Search config for timeout setting 
 --> grep 'timeout' config.ini 

Show logs for a specific systemd unit (e.g., sshd) 
 --> journalctl -u sshd 

Sleep for 15 seconds 
 --> sleep 15 

Make notes readable by group and user 
 --> chmod ug+r notes 

Form contractors group 
 --> groupadd contractors 

Delete karen account 
 --> userdel karen 

Create a file called 'doc' in your home 
 --> touch ~/doc 

Show dependencies of systemd 
 --> systemctl list-dependencies systemd 

Show all connections and filter for a specific protocol 
 --> netstat -an | grep 'tcp' 

Show all connections with process ID and program name 
 --> sudo netstat -p 

Rename app_reviewers to reviewers_app 
 --> groupmod -n reviewers_app app_reviewers 

Show last lines by find and tail 
 --> find . -name '*.log' -exec tail -n 5 {} \; 

Display memory usage in kilobytes, update every 10 seconds indefinitely 
 --> free -k -s 10 

Create user for testing called dummy with shell disabled 
 --> useradd -s /usr/sbin/nologin dummy 

Compress errorlog.txt using bzip2 
 --> bzip2 errorlog.txt 

Enable account login for guest2 
 --> passwd -u guest2 

Make teachers group for exam_results.csv 
 --> chgrp teachers exam_results.csv 

Display disk usage for all files and directories, using block size of 32M 
 --> du -B 32M 

Open file and set syntax highlighting 
 --> vim -c 'syntax on' file.txt 

Remove staging2 account 
 --> userdel staging2 

Make a new user tester1 with GID 1002 
 --> useradd -g 1002 tester1 

Display disk usage for all files and directories, including hidden ones, in human-readable format 
 --> du -ah 

Copy a file 'history.log' to /var/log/apt 
 --> cp history.log /var/log/apt/ 

Navigate to the previous directory you were in 
 --> cd - 

Mount remote filesystem using SSHFS 
 --> sshfs user@hostname:/remote/path /local/mountpoint 

Make filesystem vfat for /dev/sde6 
 --> mkfs.vfat /dev/sde6 

Create a file called 'sa.log' in /var/log/sa 
 --> touch /var/log/sa/sa.log 

Display all system information except kernel name and kernel release 
 --> uname -avmp 

Traceroute to yahoo.com specifying destination port 33434 
 --> traceroute -p 33434 yahoo.com 

Display memory usage in human-readable format, update every 3 seconds, 5 times 
 --> free -h -s 3 -c 5 

Make user samuel with default shell 
 --> useradd samuel 

Unmount the mounted drive at /mnt/storage 
 --> umount /mnt/storage 

Add a connection with a specific IPv4 DHCP timeout 
 --> nmcli connection add type ethernet con-name "My Ethernet" ifname eth0 ipv4.dhcp-timeout 30 

Display load averages and active users 
 --> w 

Display memory usage in bytes 
 --> free -b 

Update group support_batch1 to support_1 
 --> groupmod -n support_1 support_batch1 

Form simulation_users group 
 --> groupadd simulation_users 

Unmount network share mounted on /mnt/net 
 --> umount /mnt/net 

Restart the mysql service 
 --> service mysql restart 

Set the MTU for an interface 
 --> sudo ifconfig eth0 mtu 1400 

Locate all files named server.js 
 --> locate server.js 

Delete an empty directory named 'bin' in the parent directory 
 --> rmdir ../bin 

Traceroute to google.com using only IPv6 addresses 
 --> traceroute -6 google.com 

Search for jpg images 
 --> locate '*.jpg' 

Connect with hash known hosts 
 --> ssh -o HashKnownHosts=yes user@hostname 

View partitions on external HDD 
 --> fdisk -l /dev/sdb 

Copy a file 'mail.txt' to /var/mail 
 --> cp mail.txt /var/mail/ 

Traceroute to 8.8.8.8 sending packets with ICMP protocol 
 --> traceroute -P icmp 8.8.8.8 

Query the AAAA (IPv6) record for github.com 
 --> host -t AAAA github.com 

Delete trial_user 
 --> userdel trial_user 

Terminate process with PID 1234 
 --> kill 1234 

Ping 8.8.8.8 and suppress output 
 --> ping -q 8.8.8.8 

Make file1 read-only for everyone 
 --> chmod a-wx file1 

Change niceness of all Flatpak processes 
 --> sudo renice +8 -p $(ps -eo pid,cmd | grep /var/lib/flatpak/ | awk '{print $1}') 

Modify a connection to use DHCP 
 --> nmcli connection modify "My Connection" ipv4.method auto 

Lock credentials for data_scientist 
 --> passwd -l data_scientist 

Run atop and record output to a file 
 --> atop -w atop.log 

Run shell with restricted variables 
 --> env -i bash 

Reload the apache2 service 
 --> systemctl reload apache2 

Temporarily disable login for project_user 
 --> passwd -l project_user 

Track files modified today 
 --> watch 'find . -type f -mtime 0' 

Make request and include protocol in output 
 --> curl --include-protocol http://example.com 

Create a directory called 'queue' in /var/spool 
 --> mkdir /var/spool/queue 

Wait for 999 seconds 
 --> sleep 999 

Delete a file called 'fail2ban.log' in /var/log 
 --> rm /var/log/fail2ban.log 

Show all interfaces with their MTU values 
 --> ifconfig -a | grep mtu 

Query the A record for google.com and display only the IP address 
 --> host -t A google.com | awk '/has address/ {print $4}' 

Wait for a shell function launched in background 
 --> f() { sleep 1; }; f & wait 

Display IPs of logged-in users 
 --> who 

Look for words starting with 'net' in logs 
 --> grep -E '\bnet\w*' logs/*.txt 

Update documentation_review to doc_review 
 --> groupmod -n doc_review documentation_review 

Copy all files in /opt to /backup 
 --> find /opt -type f -exec cp {} /backup/ \; 

Remove logbot user and their data 
 --> userdel -r logbot 

Delete qa_user1 from the system 
 --> userdel qa_user1 

List all sockets and filter for CLOSING state 
 --> ss state closing 

Show kernel messages for specific level and facility 
 --> dmesg -l err -f kern 

Traceroute to github.com bypassing routing tables 
 --> traceroute -r github.com 

Lock the guest account 
 --> usermod -L guest 

Display memory usage in gigabytes with total, update every 20 seconds, 6 times 
 --> free -g -t -s 20 -c 6 

Lock account unused_bot 
 --> usermod -L unused_bot 

Become the user tom 
 --> su tom 

Move all files in /var/log/mail.warn to /backup/mailwarn 
 --> mv /var/log/mail.warn/* /backup/mailwarn/ 

Merge directory listings 
 --> cat <(ls /etc) <(ls /usr) 

Make admin the owner of admin.log 
 --> chown admin admin.log 

Set manager as owner of report.pdf 
 --> chown manager report.pdf 

Convert lowercase to uppercase for 'name' 
 --> sed 's/name/NAME/g' file.txt 

Display wget help 
 --> wget --help 

Print the value of the `$PWD` environment variable. 
 --> echo $PWD 

Query the A record for yahoo.com and set search domain to local 
 --> nslookup yahoo.com local 

Copy all files in the current directory to /tmp 
 --> cp * /tmp/ 

Display disk usage for all files in /etc in human-readable format 
 --> du -ah /etc 

Display only the grand total for /var 
 --> du -shc /var 

Copy all files in the current directory to /tmp and keep everything and keep all attributes 
 --> cp -a --preserve=all * /tmp/ 

Follow journal logs 
 --> journalctl -f 

Create a new vfat file system on /dev/sdg7 
 --> mkfs.vfat /dev/sdg7 

Disable password for sys_helper 
 --> passwd -l sys_helper 

Show configuration for all interfaces, including inactive 
 --> ifconfig -a 

Query the A record for github.com with 1 retry 
 --> nslookup -retry=1 github.com 

Create xfs file system on /dev/sdb8 
 --> mkfs.xfs /dev/sdb8 

Compress file1.txt 
 --> gzip file1.txt 

Open multiple files in tabs 
 --> vim -p file1.txt file2.txt 

Change to the /mnt directory 
 --> cd /mnt 

Query A record for google.com and set +noauthority 
 --> dig google.com +noauthority 

Format /dev/sdj1 with ext2 
 --> mkfs.ext2 /dev/sdj1 

Find non-directory files in /var 
 --> find /var -not -type d 

Start smbd service 
 --> systemctl start smbd 

Display memory usage in kilobytes, detailed low and high memory stats 
 --> free -k -l 

Remove an IPv6 address from an interface 
 --> sudo ifconfig eth0 inet6 del 2001:db8::1/64 

Prevent login for mobile_dev 
 --> passwd -l mobile_dev 

Change hostname 
 --> sudo hostnamectl set-hostname newname 

Add jeff to exporters group 
 --> gpasswd -a jeff exporters 

Sync files and specify a custom daemon no detach 
 --> rsync -avz --daemon --no-detach source_dir/ destination_dir/ 

Change to the /run directory 
 --> cd /run 

Copy 'file1.txt' and 'file2.txt' to /tmp 
 --> cp file1.txt file2.txt /tmp/ 

Query AAAA record for google.com 
 --> dig google.com AAAA 

Print UUID and label for /dev/sdb4 
 --> blkid /dev/sdb4 

Create a new file from standard input 
 --> cat > newfile.txt 

Fetch URLs with alphanumeric pattern 
 --> curl http://example.com/file{a,b,c}.txt 

Block designer3's login via password 
 --> passwd -l designer3 

Run top as root 
 --> sudo top 

Open one page at a time 
 --> less -#1 file.txt 

Add a connection with a specific route metric 
 --> nmcli connection add type ethernet con-name "My Ethernet" ifname eth0 ipv4.route-metric 100 

Use gzip to compress the results.csv 
 --> gzip results.csv 

Update the modification time only for 'mod.txt' 
 --> touch -m mod.txt 

Find files in /srv, do not descend into other filesystems 
 --> find /srv -xdev -type f 

Query the AAAA (IPv6) record for google.com 
 --> nslookup -query=AAAA google.com 

Find lines containing digits 
 --> grep '[0-9]' file.txt 

Unlock designer_user 
 --> passwd -u designer_user 

Display memory usage in megabytes with wide output, update every 4 seconds, 2 times 
 --> free -m -w -s 4 -c 2 

Sync files and specify a custom SSH key 
 --> rsync -avz -e 'ssh -i /path/to/private_key' source_dir/ user@remote_host:/destination_dir/ 

Create a directory called 'backup' in /home/bob 
 --> mkdir /home/bob/backup 

Run top and save output to a file 
 --> top -b -n 1 > top_output.txt 

Set comment for developer1 as 'Python Developer' 
 --> usermod -c 'Python Developer' developer1 

Remove all files in /var/log/ufw 
 --> rm /var/log/ufw/* 

Ping github.com with 4 second timeout and 69 times 
 --> ping -W 4 -c 69 github.com 

Download a file and save with a different name 
 --> wget -O newname.zip http://example.com/file.zip 

Change user test_id's UID to 1777 
 --> usermod -u 1777 test_id 

Write image using 2MB block size 
 --> dd if=image.iso of=/dev/sdX bs=2M status=progress 

Query TXT record for google.com 
 --> dig google.com TXT 

Send URL-encoded data 
 --> curl --data-urlencode 'param=value with spaces' http://example.com/api 

Print single quotes 
 --> echo "It's working" 

Show only the TX packets for eth0 
 --> ifconfig eth0 | grep 'TX packets' 

Query the A record for github.com and display output in color 
 --> host github.com | lolcat 

Start data scraping in background 
 --> nohup python scraper.py & 

Show kernel messages from /dev/kmsg 
 --> dmesg -K /dev/kmsg 

Compress the entire game directory 
 --> zip -r game.zip game 

Find 'config' in all .conf files 
 --> grep 'config' *.conf 

Change niceness of sshd process to -10 
 --> sudo renice -10 -p $(pgrep sshd) 

Add new user student with home directory created 
 --> useradd -m student 

Assign a secondary IP to an interface (alias) 
 --> sudo ifconfig eth0:1 192.168.1.101 up 

Make a request with basic authentication 
 --> curl -u username:password http://example.com/api 

Search for ISO images 
 --> locate '*.iso' 

Remove all .jpg files in the Pictures folder 
 --> rm ~/Pictures/*.jpg 

Assign user20 to config.js file 
 --> chown user20 config.js 

Display disk usage in human-readable format 
 --> df -h 

Run echo with a modified USER variable 
 --> env USER=testuser echo $USER 

List all listening UNIX sockets 
 --> ss -lx 

Copy all files in the current directory to /tmp and keep everything and keep mode 
 --> cp -a --preserve=mode * /tmp/ 

Show help information for the `pwd`. 
 --> pwd --help 

Unmount drive mounted with loop option 
 --> umount /mnt/loop 

Display disk usage for all files and directories, using block size of 256G 
 --> du -B 256G 

Search for missing.txt 
 --> locate missing.txt 

Copy all files in the current directory to /tmp and keep everything and keep xattr 
 --> cp -a --preserve=xattr * /tmp/ 

Open file and start in insert mode 
 --> vim +startinsert file.txt 

Add sys_maintenance group 
 --> groupadd sys_maintenance 

Create ai_research group 
 --> groupadd ai_research 

Wait for completion after gzip 
 --> gzip bigfile & wait 

Monitor system every minute 
 --> crontab -e # * * * * * /monitor.sh 

Change niceness of highest memory processes 
 --> for pid in $(ps aux --sort=-%mem | head -n 5 | awk '{print $2}'); do sudo renice +5 $pid; done 

Unmask the telnet service 
 --> systemctl unmask telnet 

Signal by number 
 --> pkill -2 bash 

Revoke read access from group for app.py 
 --> chmod g-r app.py 

Query the A record for example.com and use IPv6 
 --> nslookup -query=AAAA example.com 

Kill tmux window by name 
 --> tmux kill-window -t 1 

Display disk usage summary for each subdirectory in /root 
 --> du -h --max-depth=1 /root 

Show all open IPv4 network connections 
 --> lsof -i 4 

Make a request and show HTTP status code 
 --> curl -w '%{http_code}\n' -s -o /dev/null http://example.com 

Display memory usage in human-readable format with old format, update every 25 seconds, 7 times 
 --> free -h -o -s 25 -c 7 

List all sockets for destination port 5228 or source port mysql 
 --> ss -a dst :5228 or src :mysql 

Track what everyone is doing 
 --> w 

Give me a detailed, recursive list of /var/log 
 --> ls -lR /var/log 

Query the A record for example.com and set search domain to local 
 --> nslookup example.com local 

Create minimal screen session 
 --> screen -dmS temp 

Track top 3 largest files 
 --> watch 'du -ah | sort -rh | head -n 3' 

Backup entire boot sector 
 --> dd if=/dev/sda of=bootsector.bin bs=512 count=1 

Run custom job inside screen 
 --> screen -S job ./job.sh 

Change permissions of a file 
 --> sudo chmod 644 /etc/hosts 

Download all PDF files from a website 
 --> wget -r -A pdf http://example.com/ 

Display all system information except kernel name and machine hardware name 
 --> uname -arv 

Show disk usage for all filesystems, display only the filesystem and total size 
 --> df -h --output=source,size 

Check partition scheme of /dev/mmcblk0p1 
 --> fdisk -l /dev/mmcblk0p1 

Partition manager for USB 
 --> fdisk /dev/sdb 

Remove archived_account 
 --> userdel archived_account 

Ping google.com with a timeout of 1 second per packet 
 --> ping -W 1 google.com 

Change to a directory with spaces in its name called 'My Files' 
 --> cd 'My Files' 

Rename 'history.log' to 'history.log.old' in /var/log/apt 
 --> mv /var/log/apt/history.log /var/log/apt/history.log.old 

Display memory usage in kilobytes with detailed stats, update every 3 seconds, 3 times 
 --> free -k -l -s 3 -c 3 

Show all connections for IPv6 
 --> netstat -6 

Run top and display processes sorted by memory usage 
 --> top -o %MEM 

Show disk usage for all filesystems with type in human-readable format 
 --> df -hT 

Ping facebook.com with 0.5 second interval and 15 packets 
 --> ping -i 0.5 -c 15 facebook.com 

Change to the /tmp directory and print the current directory 
 --> cd /tmp && pwd 

List all available disk partitions 
 --> fdisk -l 

Keep echoing time every 10 seconds 
 --> nohup bash -c 'while true; do date; sleep 10; done' & 

Start bash shell with screen 
 --> screen -S shell bash 

Locate SSH private key 
 --> locate id_rsa 

Unmount the CD-ROM drive 
 --> umount /dev/cdrom 

Open file and highlight search matches 
 --> vim -c 'set hlsearch' file.txt 

Allow only certain users to use cron 
 --> echo 'username' >> /etc/cron.allow 

Run background command in screen 
 --> screen -dmS backup ./backup.sh 

Find users on terminal tty7 
 --> who | grep tty7 

Display detailed user session info 
 --> who 

Look for sshd_config 
 --> locate sshd_config 

Fix broken dependencies 
 --> sudo apt --fix-broken install 

Query the A record for google.com with verbose output 
 --> host -v google.com 

Connect with connection sharing 
 --> ssh -o ControlMaster=auto -o ControlPath=~/.ssh/master-%r@%h:%p user@hostname 

Sync files and specify a custom temp directory 
 --> rsync -avz --temp-dir=/tmp/rsync source_dir/ destination_dir/ 

Go to the Music directory in your home folder 
 --> cd ~/Music 

Change to the directory /usr/share/applications 
 --> cd /usr/share/applications 

Create a file called 'messages' in /var/log 
 --> touch /var/log/messages 

Remove everything after the first space in each line 
 --> sed 's/ .*//' file.txt 

Show verbose configuration for all interfaces 
 --> ifconfig -v 

Open file and highlight column 80 
 --> vim -c 'set colorcolumn=80' file.txt 

Show a recursive list, but only for two levels deep 
 --> ls -R -L 2 

Open file at line and column 
 --> vim +call cursor(100,5) file.txt 

Assign cloud group to compute.tf 
 --> chgrp cloud compute.tf 

Mount an xfs disk on /mnt/storage 
 --> mount -t xfs /dev/sdd1 /mnt/storage 

Sleep 0.09 seconds 
 --> sleep 0.09 

Sleep for 1.5 minutes 
 --> sleep 90 

Copy all files in /var/log/ufw to /backup/ufw 
 --> cp /var/log/ufw/* /backup/ufw/ 

Connect with GSSAPI authentication 
 --> ssh -o GSSAPIAuthentication=yes user@hostname 

Move all files in the current directory to /tmp and keep permissions 
 --> mv --preserve=mode * /tmp/ 

Change password for the new dev 
 --> passwd dev 

Mount encrypted LUKS partition /dev/sdi1 to /mnt/secure 
 --> mount /dev/mapper/secure /mnt/secure 

Assign IP 172.16.0.1 and netmask 255.255.0.0 to eth3 
 --> sudo ifconfig eth3 172.16.0.1 netmask 255.255.0.0 

Display all system information except kernel name and kernel version 
 --> uname -a 

Change default shell to zsh 
 --> sudo chsh -s /usr/bin/zsh 

Query the NS record for yahoo.com 
 --> nslookup -query=NS yahoo.com 

Move all files in /var/log/nginx to /backup/nginx 
 --> mv /var/log/nginx/* /backup/nginx/ 

Change to the /var/tmp directory 
 --> cd /var/tmp 

Wait before system shutdown 
 --> sleep 180 

Observe systemd services 
 --> watch 'systemctl list-units --type=service' 

List jobs in monthly cron directory 
 --> ls /etc/cron.monthly/ 

Create user named beta and add him to sudo group 
 --> useradd -G sudo beta 

Unmount the loop-mounted ISO at /mnt/loop 
 --> umount /mnt/loop 

Create xfs on /dev/sde5 
 --> mkfs.xfs /dev/sde5 

Run job with minimal nice (highest priority) 
 --> sudo nice -n -20 critical.sh 

List all sockets and filter for SYN-SENT state 
 --> ss state syn-sent 

Check what files are open under /etc 
 --> lsof +D /etc 

Format partition /dev/sdf3 to ext3 
 --> mkfs.ext3 /dev/sdf3 

Delete a file called 'news.log' in /var/log/news 
 --> rm /var/log/news/news.log 

Start fdisk session on /dev/vdc 
 --> fdisk /dev/vdc 

View filesystem label of /dev/sdg2 
 --> blkid /dev/sdg2 

Rename the team root_team to root_access 
 --> groupmod -n root_access root_team 

Show all connections with verbose output 
 --> netstat -v 

Access ssh_user 
 --> su ssh_user 

Kill all instances of node.js 
 --> killall node 

Show disk usage for all filesystems, sorted by filesystem name 
 --> df -h | sort -k 1 

Show last lines from STDIN 
 --> echo -e 'a
b
c' | tail -n 2 

Display user login terminals and commands 
 --> w | awk '{print $2, $8}' 

Delete test_id 
 --> userdel test_id 

Ping 1.1.1.1 and set packet size to 512 bytes 
 --> ping -s 512 1.1.1.1 

Copy all files in the current directory to /tmp and keep everything and keep links 
 --> cp -a --preserve=links * /tmp/ 

Sync files and specify a custom log file format 
 --> rsync -avz --log-file-format='%i %n%L' source_dir/ destination_dir/ 

Change creds for developer99 
 --> passwd developer99 

Display memory usage in kilobytes 
 --> free -k 

Clear all command history 
 --> history -c 

Force password update for user lisa 
 --> passwd lisa 

Query A record for google.com and set +nobesteffort 
 --> dig google.com +nobesteffort 

Traceroute to google.com sending 5 probes per hop 
 --> traceroute -q 5 google.com 

Traceroute to yahoo.com with no hostname resolution and max TTL 30 
 --> traceroute -n -m 30 yahoo.com 

Start vim and execute command 
 --> vim +':%s/foo/bar/g' +wq file.txt 

Bring up interface ens33 
 --> sudo ifconfig ens33 up 

Print disk usage of root directory 
 --> sudo du -sh / 

Use `pwd` as part of a `find` to search for `.log` files in your current directory. 
 --> find $(pwd) -name "*.log" 

Show disk usage for all filesystems, display all available columns 
 --> df -h --output=source,fstype,itotal,iused,iavail,ipcent,size,used,avail,pcent,target 

Temporarily lock login access for user jess 
 --> passwd -l jess 

Restore login for temporary_user 
 --> passwd -u temporary_user 

Run mtr to example.com and set the number of pings per hop to 6 
 --> mtr -c 6 example.com 

List the contents of your current directory after showing its path. 
 --> pwd && ls 

List all files in the root directory, including the hidden ones 
 --> ls -a / 

Zip a specific file from downloads 
 --> zip myfile.zip ~/Downloads/targetfile.txt 

Send SIGTERM to process group 100 
 --> kill -TERM -100 

Copy all files in the current directory to /tmp and keep everything and keep all attributes 
 --> cp -a --preserve=all * /tmp/ 

Create user priya with a home directory and bash shell 
 --> useradd -m -s /bin/bash priya 

Burn an ISO to CD 
 --> dd if=linux.iso of=/dev/cdrom bs=2K 

FTP delete file 
 --> curl -X 'DELE file.txt' ftp://ftp.example.com/ 

Delete leena from ux group 
 --> gpasswd -d leena ux 

Locate files ending with .tar.gz 
 --> locate '*.tar.gz' 

Change document.docx owner to linda 
 --> chown linda document.docx 

Add user test_run to automation group 
 --> gpasswd -a test_run automation 

Clear cluttered terminal output 
 --> clear 

Zip multiple folders folder1 and folder2 into folders.zip 
 --> zip -r folders.zip folder1 folder2 

Wait for all background jobs to finish 
 --> wait 

Run top and show only processes with PID greater than 1000 
 --> top -b -n 1 | awk '$1 > 1000' 

Delete legacy_admins 
 --> groupdel legacy_admins 

Change to the /lost+found directory 
 --> cd /lost+found 

Compress camera.jpg using bzip2 
 --> bzip2 camera.jpg 

Free terminal screen before typing 
 --> clear 

Add a connection with a specific route 
 --> nmcli connection add type ethernet con-name "My Ethernet" ifname eth0 ipv4.routes "192.168.2.0/24 192.168.1.254" 

View logs in real time 
 --> tail -f file.log | less +F 

Show all connections and display output with line numbers 
 --> netstat -an | nl 

Find files in /var with GID 100 
 --> find /var -gid 100 

Remove guest1 with all data 
 --> userdel -r guest1 

Gzip user.log file 
 --> gzip user.log 

List files in reverse alphabetical order 
 --> ls -r 

Create a directory called 'test' in /var/spool 
 --> mkdir /var/spool/test 

Kill all processes except sshd 
 --> killall -o sshd 

Display disk usage in human-readable format, excluding /tmp directory 
 --> du -ah --exclude="/tmp" 

Show all interfaces with their IPv4 addresses 
 --> ifconfig -a | grep inet 

Make a team group called release_team 
 --> groupadd release_team 

Sync files and don't preserve permissions 
 --> rsync -avz --no-p source_dir/ destination_dir/ 

Display the current environment 
 --> env 

Kill all processes except sshd in current session 
 --> killall -u $(whoami) --ignore-case -o sshd 

Assign an IP address, netmask, and broadcast to an interface 
 --> sudo ifconfig eth0 192.168.1.100 netmask 255.255.255.0 broadcast 192.168.1.255 

Find files in /data modified after June 10, 2025 
 --> find /data -type f -newermt "2025-06-10" 

Start X server using nohup 
 --> nohup startx & 

Display memory usage in megabytes, update every second indefinitely 
 --> free -m -s 1 

Modify a connection to use static IP 
 --> nmcli connection modify "My Connection" ipv4.method manual 

List only interfaces that are down 
 --> ifconfig -d 

Make team_bangalore group 
 --> groupadd team_bangalore 

Run email notification at 8 PM 
 --> crontab -e # 0 20 * * * /send_email.sh 

Move the user sshguest's home to /nonstandard/sshguest 
 --> usermod -d /nonstandard/sshguest -m sshguest 

Switch to user admin 
 --> su admin 

Run mtr to github.com and show output in report-wide format 
 --> mtr --report-wide github.com 

List files with numeric user and group IDs 
 --> ls -n 

Traceroute to google.com 
 --> traceroute google.com 

Make a request using IPv6 only 
 --> curl -6 http://example.com 

Format the USB at /dev/sdd1 using FAT32 
 --> mkfs.vfat /dev/sdd1 

Copy a file 'boot.log' to /var/log 
 --> cp boot.log /var/log/ 

Switch group legal to legal_team 
 --> groupmod -n legal_team legal 

Create a directory called 'images' in the Desktop directory 
 --> mkdir ~/Desktop/images 

Print home directory 
 --> echo "$HOME" 

Make a request with range (partial content) 
 --> curl -r 0-1023 http://example.com/file.txt 

Change to the /var/log/hp directory 
 --> cd /var/log/hp 

Wait for a job started in subshell 
 --> (sleep 5) & wait 

Ping 1.1.1.1 and print numeric output only 
 --> ping -n 1.1.1.1 

Show all processes without controlling terminals 
 --> ps -x 

Gzip the file output.log 
 --> gzip output.log 

Create UX_designers group 
 --> groupadd UX_designers 

Add a connection with a specific IPv4 DHCP use default route 
 --> nmcli connection add type ethernet con-name "My Ethernet" ifname eth0 ipv4.dhcp-use-default-route yes 

Backup MBR of disk 
 --> dd if=/dev/sda of=mbr_backup.img bs=512 count=1 

Reapply device configuration 
 --> nmcli device reapply eth0 

Copy a file 'syslog' to /var/log 
 --> cp syslog /var/log/ 

Disable all-multicast mode on an interface 
 --> sudo ifconfig eth0 -allmulti 

Vacuum journal logs to keep only 2 weeks of data 
 --> journalctl --vacuum-time=2weeks 

Change to the directory /usr/share/lintian 
 --> cd /usr/share/lintian 

Show only the errors for eth0 
 --> ifconfig eth0 | grep errors 

Change to the /usr/local/share directory 
 --> cd /usr/local/share 

Delete version1_test group 
 --> groupdel version1_test 

Delete mike user 
 --> userdel mike 

Move a file 'test.log' to /var/log and prompt before overwrite 
 --> mv -i test.log /var/log/ 

Alias to navigate to Downloads 
 --> alias dload='cd ~/Downloads' 

Make a user named david with default settings 
 --> useradd david 

Get full partition list 
 --> fdisk -l 

Create kiosk_users group 
 --> groupadd kiosk_users 

Show all interfaces with their status (NOARP) 
 --> ifconfig -a | grep NOARP 

List files in multiple columns, filling rows first 
 --> ls -C 

Set expiration for stag_user to 2025-10-01 
 --> usermod -e 2025-10-01 stag_user 

Run mtr to amazon.com and set maximum TTL to 20 
 --> mtr -m 20 amazon.com 

Move all .log files from /var/log to /backup/logs 
 --> mv /var/log/*.log /backup/logs/ 

Save captured output to file 
 --> tmux save-buffer ~/tmux-buffer.txt 

Make onboarding_batch group 
 --> groupadd onboarding_batch 

Show all network devices 
 --> nmcli device 

Send SIGPROF to PID 4243 
 --> kill -PROF 4243 

Switch to devops user 
 --> su devops 

Show kernel messages related to errors 
 --> dmesg | grep -i error 

Remove webdemo account and home 
 --> userdel -r webdemo 

Run htop with color scheme 4 
 --> htop --color-scheme=4 

Start a screen session and run python3 
 --> screen -S pyenv python3 

List all sockets for IPv6 
 --> ss -6 

Ping yahoo.com with 4 second timeout and 89 times 
 --> ping -W 4 -c 89 yahoo.com 

Show disk usage in gigabytes 
 --> df -BG 

Shutdown after 5 minutes 
 --> sudo shutdown +5 

Search for any sqlite databases 
 --> locate '*.sqlite' 

Display disk usage for all files and directories, using block size of 16G 
 --> du -B 16G 

Remove alpha_user 
 --> userdel alpha_user 

Change to the /var/log/pm-powersave.log directory 
 --> cd /var/log/pm-powersave.log 

Traceroute to github.com using a loose source route gateway 
 --> traceroute -g 192.168.1.1 github.com 

Run mtr to yahoo.com and set the number of pings per hop to 7 
 --> mtr -c 7 yahoo.com 

List all files with details, sorted by modification time, but show access time instead 
 --> ls -lt --time=atime 

Show network interfaces with their RX and TX packet statistics 
 --> ifconfig | grep 'RX packets\|TX packets' 

Query A record for google.com and set query class IN 
 --> dig google.com IN 

Delay script by 10 seconds 
 --> sleep 10 

Create a file called 'log.txt' and set its timestamp to 11:59 PM today 
 --> touch -t $(date +%Y%m%d)2359 log.txt 

Show all interfaces with protocol family icmp 
 --> ifconfig -a icmp 

Sync files with archive mode (preserves permissions, ownership, timestamps) 
 --> rsync -a source_dir/ destination_dir/ 

Change niceness of current shell to +2 
 --> renice +2 $$ 

Form a group junior_engineers 
 --> groupadd junior_engineers 

Find commented lines in a script 
 --> grep '^#' script.sh 

Move a hidden file '.env' to the parent directory 
 --> mv .env ../ 

Add virtual_machines group 
 --> groupadd virtual_machines 

Set mode 644 for webpage.html 
 --> chmod 644 webpage.html 

Make mobile_team group 
 --> groupadd mobile_team 

Show all open ports 
 --> netstat -an | grep 'LISTEN' 

Display memory usage in bytes with total 
 --> free -b -t 

Download a file and enable following FTP links from HTML 
 --> wget --follow-ftp http://example.com/ 

Print last 5 lines of file.txt 
 --> awk '{a[NR]=$0} END {for (i=NR-4;i<=NR;i++) print a[i]}' file.txt 

Revoke read from all 
 --> chmod a-r secret.txt 

Ping 1.1.1.1 with 32 byte packets and 23 times 
 --> ping -s 32 -c 23 1.1.1.1 

Find files in /opt on ext4 filesystem 
 --> find /opt -fstype ext4 

Download a file and specify a timeout for DNS lookup 
 --> wget --dns-timeout=10 http://example.com/file.zip 

Delete a file called 'oldfile.txt' 
 --> rm oldfile.txt 

Show all interfaces with their status (RUNNING) 
 --> ifconfig -a | grep RUNNING 

Configure cron to log errors to file 
 --> echo '0 * * * * /myscript.sh 2>> /tmp/errors.log' | crontab - 

Start the fail2ban service 
 --> service fail2ban start 

Query the CAA record for github.com 
 --> nslookup -type=CAA github.com 

Give bob full ownership of work folder 
 --> chown bob work 

Run mtr to example.com and use TCP protocol 
 --> mtr --tcp example.com 

Login to demo_user account 
 --> su demo_user 

Add dev_infra group 
 --> groupadd dev_infra 

Compress makefile using bzip2 
 --> bzip2 makefile 

Query the CNAME record for www.google.com 
 --> host -t CNAME www.google.com 

Compress letter.doc using bzip2 
 --> bzip2 letter.doc 

Create a file called 'file.txt' and set its timestamp to 00:00 on Jan 1, 2025 
 --> touch -t 202501010000 file.txt 

Delete devbot from the system 
 --> userdel devbot 

Find all .txt files with 4 digits in the name in /var using regex 
 --> find /var -iregex ".*[0-9]{4}\.txt" 

Redirect a file’s contents to another file 
 --> cat file.txt > output.txt 

Create alias to list all installed packages 
 --> alias packages='dpkg --get-selections' 

Send email via SMTP 
 --> curl --mail-from sender@example.com --mail-rcpt recipient@example.com smtp://mail.example.com 

Check disk IO performance 
 --> watch iotop 

Zip the screenshots folder 
 --> zip -r screenshots.zip screenshots 

Change niceness of cupsd daemon 
 --> sudo renice +8 -p $(pgrep cupsd) 

Copy a file 'mail.err' to /var/log 
 --> cp mail.err /var/log/ 

Open file and prompt at pattern 
 --> less +/pattern file.txt 

Watch cron job logs in real-time 
 --> tail -f /var/log/syslog | grep CRON 

Traceroute to 8.8.8.8 using only IPv6 and max TTL 30 
 --> traceroute -6 -m 30 8.8.8.8 

Traceroute to google.com using interface eth0 
 --> traceroute -i eth0 google.com 

Change niceness of processes with specific cgroup 
 --> sudo renice +4 -p $(cat /sys/fs/cgroup/mygroup/cgroup.procs) 

Use su for test-runner 
 --> su test-runner 

Monitor Apache status 
 --> watch apachectl status 

Query the PTR record for 208.67.222.222 
 --> nslookup -query=PTR 208.67.222.222 

Add the research group 
 --> groupadd research 

Remove all files in /var/log/ppp 
 --> rm /var/log/ppp/* 

Traceroute to yahoo.com using ICMP echo requests 
 --> traceroute -I yahoo.com 

List the oldest file in the current directory 
 --> ls -tr | head -n 1 

Show all mounted filesystems with types 
 --> mount -l 

Assign patrick ownership of db.sqlite 
 --> chown patrick db.sqlite 

List all hidden files and folders in my home directory with details 
 --> ls -ld ~.* 

Execute every weekday at 10 AM 
 --> crontab -e # 0 10 * * 1-5 command 

Mount device with label BACKUP to /backup 
 --> mount LABEL=BACKUP /backup 

Check the smbd status 
 --> service smbd status 

List all sockets for destination IP range 192.168.0.0/16 
 --> ss dst 192.168.0.0/16 

Ping 1.1.1.1 with 4 second timeout and 49 times 
 --> ping -W 4 -c 49 1.1.1.1 

Change to the directory pointed to by the symbolic link 'mylink' and follow the link 
 --> cd -L mylink 

Print fields in reverse order 
 --> awk '{for(i=NF;i>=1;i--) printf $i" "; print ""}' file.txt 

Create new group developers 
 --> sudo groupadd developers 

Sync files with a size limit (max 1MB) 
 --> rsync -avz --max-size=1m source_dir/ destination_dir/ 

Form firmware_team group 
 --> groupadd firmware_team 

Run htop and show only root's processes 
 --> htop -u root 

Add a bond slave connection 
 --> nmcli connection add type ethernet con-name bond-slave-eth0 ifname eth0 master bond0 

List just the file named 'bashrc' in my home directory, with details 
 --> ls -l ~/.bashrc 

Change to the /var/log/btmp directory 
 --> cd /var/log/btmp 

Change owner of home directory to newuser 
 --> chown newuser /home/newuser 

Connect and disable strict host key checking 
 --> ssh -o StrictHostKeyChecking=no user@hostname 

Give root ownership of grub.cfg 
 --> chown root grub.cfg 

Assign IP 10.10.10.1 and broadcast 10.10.10.255 to eth2 
 --> sudo ifconfig eth2 10.10.10.1 broadcast 10.10.10.255 

Create read_only_users group 
 --> groupadd read_only_users 

Display memory usage in gigabytes with all options, update every 13 seconds, 13 times 
 --> free -g -o -l -w -t -s 13 -c 13 

Create a directory called 'Europe' in your home 
 --> mkdir ~/Europe 

Change niceness of specific child processes 
 --> sudo renice +5 -p $(pgrep -P $(pgrep mydaemon)) 

Display all system information except kernel name and machine hardware name 
 --> uname -ar 

Send SIGTSTP to PID 2829 
 --> kill -TSTP 2829 

Query the A record for github.com using DNS server 8.20.247.20 
 --> host github.com 8.20.247.20 

Show all systemd journal logs 
 --> journalctl 

Find who is logged in with the most CPU usage 
 --> w | sort -k9 -n | tail -1 

Show all connections with wide output (do not truncate addresses) 
 --> netstat -W 

List all UDP sockets using IPv4 
 --> ss -4 -u 

Show all processes and pipe to most for scrolling 
 --> ps aux | most 

Watch for new processes 
 --> watch 'ps -e' 

List partition UUIDs with blkid 
 --> blkid 

Download a file and wait 10 seconds between retries 
 --> wget --wait=10 http://example.com/file.zip 

Run top and display threads instead of processes 
 --> top -H 

Kill a specific window 
 --> tmux kill-window -t 2 

Display version information for the free command 
 --> free --version 

Traceroute to 8.8.8.8 with IPv6 source address 
 --> traceroute -S 2001:db8::1 8.8.8.8 

Alias to edit crontab 
 --> alias crontabedit='crontab -e' 

Mount disk /dev/sda3 in read-only mode at /mnt/ro 
 --> mount -o ro /dev/sda3 /mnt/ro 

Copy 'script.sh' to /usr/local/bin and keep the same name 
 --> cp script.sh /usr/local/bin/ 

Delete an empty directory called 'backup' inside /etc/ssl 
 --> rmdir /etc/ssl/backup 

Set the MTU for an interface 
 --> sudo ifconfig eth0 mtu 1400 

Show only the IP address for eth0 
 --> ifconfig eth0 | grep inet 

Download a file and specify a proxy username and password 
 --> wget --proxy-user=USER --proxy-password=PASS http://example.com/file.zip 

Follow Docker logs 
 --> docker logs -f container_name 

Show the configuration of a wireless interface (e.g., wlan0) 
 --> ifconfig wlan0 

Query CNAME record for www.google.com with +short output 
 --> dig www.google.com CNAME +short 

Query A record for google.com using DNS server 1.1.1.1 
 --> dig @1.1.1.1 google.com 

Query CNAME record for www.google.com 
 --> dig www.google.com CNAME 

Zip up project source and docs folders 
 --> zip -r project.zip source docs 

Unlock user sessionlogger 
 --> usermod -U sessionlogger 

Delay execution by 90 seconds 
 --> sleep 90 

Run disk check monthly 
 --> crontab -e # 0 1 1 * * /disk_check.sh 

Copy a file 'messages' to /var/log 
 --> cp messages /var/log/ 

Display memory usage in megabytes, update every 6 seconds indefinitely 
 --> free -m -s 6 

Run yarn install with niceness +8 
 --> nice -n 8 yarn install 

Delete xavier and his home directory 
 --> userdel -r xavier 

Pipe last lines to less 
 --> tail file.txt | less 

Run job every 10 minutes 
 --> crontab -e # */10 * * * * /script.sh 

Run htop and show only stopped processes 
 --> htop | grep ' T ' 

Observe swap memory usage 
 --> watch 'free | grep Swap' 

Who is using nano editor 
 --> w | grep nano 

Use gzip for file data.out 
 --> gzip data.out 

Remove early_users group 
 --> groupdel early_users 

Display memory usage in gigabytes with wide output, update every 20 seconds, 6 times 
 --> free -g -w -s 20 -c 6 

Make request with TCP keep-alive 
 --> curl --keepalive-time 60 http://example.com 

Change niceness of process group 200 to +3 
 --> sudo renice +3 -g 200 

Install build tools 
 --> sudo apt install build-essential 

See commands executed in early morning 
 --> history | grep 05: 

Display kernel name, release, and processor type 
 --> uname -srp 

Pause for 404 seconds 
 --> sleep 404 

Compress zipped_file.tar with gzip 
 --> gzip zipped_file.tar 

Number all output lines 
 --> cat -n file.txt 

Make all shell scripts executable 
 --> chmod +x *.sh 

Set home directory for alice2 to /opt/users/alice2 
 --> usermod -d /opt/users/alice2 -m alice2 

Disable WWAN radio 
 --> nmcli radio wwan off 

Run mtr to github.com with 150 cycles in report mode 
 --> mtr -r -c 150 github.com 

Display terminal lines of users 
 --> who 

Display memory usage with old format and total 
 --> free -o -t 

Reload apache2 configuration 
 --> service apache2 reload 

Enable login credentials for demo_user 
 --> passwd -u demo_user 

Add key to SSH agent 
 --> ssh-add ~/.ssh/private_key 

Print IFS variable 
 --> echo "$IFS" 

Quit if file fits one screen 
 --> less -X file.txt 

Run ping on multiple hosts and wait 
 --> ping -c 1 google.com & ping -c 1 bing.com & wait 

Run mtr to 8.8.8.8 with UDP, 50 cycles, interval 1s, and output in CSV format 
 --> mtr --udp --csv -c 50 -i 1 8.8.8.8 

Change sysadmins to system_admins 
 --> groupmod -n system_admins sysadmins 

Copy a file 'kern.log' to /var/log 
 --> cp kern.log /var/log/ 

Query the A record for yahoo.com and display output with line numbers 
 --> host yahoo.com | nl 

Display memory usage in bytes with total, update every 5 seconds, 3 times 
 --> free -b -t -s 5 -c 3 

Disable allmulti on enp0s3 
 --> sudo ifconfig enp0s3 -allmulti 

Find empty directories in /data 
 --> find /data -type d -a -empty 

Show logs for a specific priority and follow in real time 
 --> journalctl -p err -f 

Zip the file example.py and data.csv 
 --> zip files.zip example.py data.csv 

Change niceness of specific socket listener 
 --> sudo renice +5 -p $(lsof -i:80 -t) 

Run training script overnight 
 --> nohup python train.py & 

Add user guestX with login shell /bin/false 
 --> useradd -s /bin/false guestX 

Show all open TCP ports 
 --> netstat -tan | grep 'LISTEN' 

Run SSH tunnel persistently 
 --> nohup ssh -N -L 8080:localhost:80 user@host & 

Append all commands to history file 
 --> history -a && history -w 

Traceroute to google.com using TCP SYN packets and destination port 80 
 --> traceroute -T -p 80 google.com 

Gzip the tarball.tar 
 --> gzip tarball.tar 

Run docker build and wait 
 --> docker build . & wait 

Download a file using active FTP 
 --> wget --no-ftp-pasv ftp://example.com/file.zip 

Show collisions on network interfaces 
 --> ifconfig | grep collisions 

Create a directory called 'logs' in /var/tmp 
 --> mkdir /var/tmp/logs 

Move all files in /etc to /backup/etc 
 --> mv /etc/* /backup/etc/ 

Install python3-pip 
 --> sudo apt install python3-pip 

Deactivate a network interface (e.g., eth0) 
 --> sudo ifconfig eth0 down 

Print exit status 
 --> echo "Exit status: $?" 

Display memory usage in gigabytes, update every 10 seconds indefinitely 
 --> free -g -s 10 

Display memory usage in gigabytes with total, update every 20 seconds, 6 times 
 --> free -g -t -s 20 -c 6 

Unmount data drive from /mnt/data 
 --> umount /mnt/data 

Print idle users only 
 --> w | awk '$5 ~ /[0-9]+/ {print $1}' 

Traceroute to 8.8.8.8 without resolving IP addresses to hostnames 
 --> traceroute -n 8.8.8.8 

Create a file called 'future.txt' and set its timestamp to next week 
 --> touch -d 'next week' future.txt 

Query the DS record for github.com 
 --> nslookup -type=DS github.com 

Display all system information except kernel name and kernel release 
 --> uname -avmpi 

Query the A record for example.com and display output in lowercase 
 --> host example.com | tr '[:upper:]' '[:lower:]' 

Print fs type and UUID for /dev/sdg7 
 --> blkid /dev/sdg7 

Change shell of user paul to /bin/zsh 
 --> usermod -s /bin/zsh paul 

Download a file and mirror a website with output file, document, directory, and quiet 
 --> wget --mirror --output-file=log.txt --output-document=output.html --directory-prefix=/tmp --quiet http://example.com/ 

Show only the RX packets for eth0 
 --> ifconfig eth0 | grep 'RX packets' 

Create a directory called 'linda' in your home 
 --> mkdir ~/linda 

Compress results.csv with bzip2 
 --> bzip2 results.csv 

Install multiple .debs 
 --> sudo dpkg -i pkg1.deb pkg2.deb 

Show me what's in /var, but only list the directories 
 --> ls -d /var/* 

Download a file to a specific directory 
 --> wget -P /tmp http://example.com/file.zip 

Show logs with priority error or higher 
 --> journalctl -p err 

Display memory usage in human-readable format with detailed stats, update every 25 seconds, 7 times 
 --> free -h -l -s 25 -c 7 

Bring down interface ens33 
 --> sudo ifconfig ens33 down 

Find files in /srv smaller than 10MB 
 --> find /srv -size -10M -type f 

Show the full path to the directory you are currently in. 
 --> pwd 

Display the status of docker 
 --> systemctl status docker 

Lock engineer3 credentials 
 --> passwd -l engineer3 

Login as system user logs 
 --> su logs 

Squeeze multiple adjacent blank lines 
 --> cat -s file.txt 

Use bzip2 for mynotes.txt 
 --> bzip2 mynotes.txt 

Compress function.java with bzip2 
 --> bzip2 function.java 

Query the SOA record for github.com 
 --> host -t SOA github.com 

Copy all files in the current directory to /tmp and keep context 
 --> cp --preserve=context * /tmp/ 

Run a job at 11 PM on weekdays 
 --> crontab -e # 0 23 * * 1-5 /nightly.sh 

Give user25 ownership of scripts folder 
 --> chown user25 scripts 

Copy partition image to USB 
 --> dd if=partition.img of=/dev/sdb bs=4M status=progress 

Show non-printing characters 
 --> cat -v file.txt 

Check current user sessions 
 --> who 

Display memory usage in bytes, update every 10 seconds indefinitely 
 --> free -b -s 10 

Restart smbd service 
 --> systemctl restart smbd 

Remove all files in /var/log/installer 
 --> rm /var/log/installer/* 

Run atop and show only sleeping processes 
 --> atop | grep sleeping 

Display all system information except kernel name and hardware platform 
 --> uname -arvmp 

Run mtr to github.com and set the number of pings per hop to 24 
 --> mtr -c 24 github.com 

Create a zip from .env and config.json 
 --> zip settings.zip .env config.json 

Move all files in the current directory to /tmp and show progress 
 --> mv -v * /tmp/ 

Display disk usage for all files and directories, using block size of 512K 
 --> du -B 512K 

Attach ISO image file disk.iso to /mnt/iso 
 --> mount -o loop disk.iso /mnt/iso 

Display kernel name, release, and hardware platform 
 --> uname -sri 

Start sleep and notify completion 
 --> sleep 2 & wait; echo 'done' 

Show all radio switches status 
 --> nmcli radio all 

List all sockets with SELinux security contexts 
 --> ss -Z 

Disable password login for timothy 
 --> passwd -l timothy 

Show disk usage for all filesystems, display only the filesystem and mount point 
 --> df -h --output=source,target 

Add a group named testers 
 --> groupadd testers 

Make request using NTLM authentication 
 --> curl --ntlm -u username:password http://example.com 

Connect with custom SSH directory 
 --> ssh -o ControlPath=~/.ssh/custom/master-%r@%h:%p user@hostname 

Show the processor type 
 --> uname -p 

Delete a file called 'Xorg.0.log' in /var/log 
 --> rm /var/log/Xorg.0.log 

Search history for a command containing 'tar' 
 --> history | grep tar 

Give me a detailed list of files in the parent directory, sorted by size 
 --> ls -lS .. 

Delete verify_user 
 --> userdel verify_user 

Copy all files in the current directory to /tmp and keep ownership 
 --> cp --preserve=ownership * /tmp/ 

Gzip system.dmp 
 --> gzip system.dmp 

Detach ISO from /media/iso 
 --> umount /media/iso 

Print date and user from CSV 
 --> awk -F',' '{print $1, $3}' records.csv 

Make user27 the owner of index.html 
 --> chown user27 index.html 

Change to the /var/backups directory 
 --> cd /var/backups 

List all .conf files in the /etc directory 
 --> ls /etc/*.conf 

Change UID of user logbot to 2100 
 --> usermod -u 2100 logbot 

Enter partition editor for /dev/nvme1n1 
 --> fdisk /dev/nvme1n1 

List open files by nginx process 
 --> lsof -c nginx 

Find vim configuration files 
 --> locate .vimrc 

Alias to run make 
 --> alias mk='make' 

Change shell of user gautham to /bin/fish 
 --> usermod -s /bin/fish gautham 

Create a file called 'bin' in your home 
 --> touch ~/bin 

Check all active terminals 
 --> who 

Create a bot user statusbot with UID 3030 
 --> useradd -u 3030 statusbot 

Zip all files except images 
 --> zip -r archive.zip . -x images/* 

Edit sources list with nano 
 --> sudo nano /etc/apt/sources.list 

Run alert script every 30 minutes 
 --> crontab -e # */30 * * * * /alert.sh 

Find files in /opt not ending with .tmp (case-insensitive) 
 --> find /opt -not -iname "*.tmp" 

Unmount test partition 
 --> umount /mnt/test 

Copy all files in the current directory to /tmp and keep everything and keep everything 
 --> cp -a -a * /tmp/ 

Show all interfaces with their hardware addresses 
 --> ifconfig -a | grep ether 

Skip the header and print second column 
 --> awk 'NR > 1 {print $2}' file.csv 

Stop the postfix service 
 --> service postfix stop 

Run mtr to google.com with TCP, 200 cycles, interval 1s, and output in JSON format 
 --> mtr --tcp --json -c 200 -i 1 google.com 

Lock bob_admin's login method 
 --> passwd -l bob_admin 

Query the A record for github.com and set search domain to local 
 --> nslookup github.com local 

Schedule job at 6 PM only in December 
 --> crontab -e # 0 18 * 12 * /december.sh 

Get recent shell commands 
 --> history 

Launch monitoring script with nohup 
 --> nohup ./monitor.sh & 

Test SSL certificate 
 --> curl -vI https://example.com 2>&1 | grep -E 'certificate|SSL' 

Connect with user known hosts file 
 --> ssh -o UserKnownHostsFile=~/.ssh/known_hosts2 user@hostname 

Clear all text on shell 
 --> clear 

Display disk usage for all files in /root, excluding .ssh directories 
 --> du -h --exclude=".ssh" /root 

Remove ignoring errors 
 --> sudo dpkg -r --ignore-depends=libc6 package-name 

List all lines with word 'usb' in logs 
 --> grep -w 'usb' *.log 

Allow group and others to execute service.sh 
 --> chmod go+x service.sh 

Screen for automation script 
 --> screen -S autoscript ./auto.sh 

Find all files in /home/user that start with 'report' 
 --> find /home/user -type f -name "report*" 

Alias top with tree view 
 --> alias htop='htop' 

Find UUID of /dev/sda2 
 --> blkid /dev/sda2 

Make audit the owner of access.log 
 --> chown audit access.log 

Open file and start in command mode 
 --> vim -c '' file.txt 

Assign compliance group to policies.pdf 
 --> chgrp compliance policies.pdf 

List usernames with session info 
 --> who 

Show kernel messages in JSON format 
 --> dmesg -J 

Show all processes in tree format with threads 
 --> ps -ejH 

List files opened by user 'john' 
 --> lsof -u john 

Enable dev1 again 
 --> passwd -u dev1 

Make database group for export.sql 
 --> chgrp database export.sql 

Mount encrypted disk with luksOpen and mount 
 --> cryptsetup luksOpen /dev/sdx1 secure && mount /dev/mapper/secure /mnt/secure 

Unmount everything under /mnt 
 --> umount /mnt/* 

Display disk usage for all files and directories, using block size of 1Q 
 --> du -B 1Q 

Get list of all services 
 --> systemctl list-units --type=service 

Query A record for google.com with tries 3 
 --> dig google.com +tries=3 

Use fdisk to look at structure of /dev/vdj 
 --> fdisk -l /dev/vdj 

Copy all files in /var/spool/cron to /backup/cron 
 --> cp /var/spool/cron/* /backup/cron/ 

Print the lines from line 5 to line 10 
 --> awk 'NR>=5 && NR<=10' file.txt 

Extract list of ttys in use 
 --> w | awk '{print $2}' | sort | uniq 

Show configuration for a specific interface (e.g., eth0) 
 --> ifconfig eth0 

Show only TCP connections 
 --> netstat -t 

Find Postgres configuration files 
 --> locate postgresql.conf 

Move home directory of shiva to /opt/shiva and update path 
 --> usermod -d /opt/shiva -m shiva 

Highlight results for 'network' 
 --> grep --color=auto 'network' *.log 

Kill screen by session ID 
 --> screen -X -S 1234.pts-0.hostname quit 

Assign IP 192.168.0.10 and netmask 255.255.255.128 to eth1 
 --> sudo ifconfig eth1 192.168.0.10 netmask 255.255.255.128 

Show open files for process named chrome 
 --> lsof -c chrome 

Count how many users are logged in 
 --> w -h | wc -l 

Remove user george from the server 
 --> userdel george 

Display disk usage for all files and directories, using block size of 500 
 --> du -B 500 

Move all files in /var/log/apt/term.log to /backup/apt-term 
 --> mv /var/log/apt/term.log/* /backup/apt-term/ 

Become tomcat user 
 --> su tomcat 

Start MySQL service 
 --> sudo systemctl start mysql 

Delete ramesh user completely 
 --> userdel -r ramesh 

Run sync in background with niceness +9 
 --> nice -n 9 rsync -a /src /dst & 

Add user frank with comment 'Database Admin' 
 --> useradd -c 'Database Admin' frank 

Change to the /opt directory 
 --> cd /opt 

Display open files for user ID 1000 
 --> lsof -u 1000 

Query the SOA record for example.com 
 --> nslookup -query=SOA example.com 

Check disk usage in /home 
 --> watch du -sh /home/* 

Show only the errors for eth0 
 --> ifconfig eth0 | grep errors 

Connect with compression enabled 
 --> ssh -C user@hostname 

Show last 5 lines of find output 
 --> find . -type f | tail -n 5 

Query A record for google.com and set +answer 
 --> dig google.com +answer 

Schedule a script to run every day at 5 AM 
 --> crontab -e # 0 5 * * * /path/to/script.sh 

Start with empty terminal window 
 --> clear 

Show logs for a specific command name 
 --> journalctl _COMM=sshd 

Compress the index.html file with gzip 
 --> gzip index.html 

Delete reporter1 
 --> userdel reporter1 

Keep an eye on netstat output 
 --> watch netstat -tulpn 

Create a sparse file 
 --> dd if=/dev/zero of=sparse.img bs=1 count=0 seek=1G 

Change the third line to 'REPLACED' 
 --> sed '3c\REPLACED' file.txt 

Make group research_2025 
 --> groupadd research_2025 

Display disk usage in gigabytes for /opt 
 --> du -BG /opt 

Move to the Documents folder inside the current directory 
 --> cd Documents 

Create a directory called 'backup' in /home/alice 
 --> mkdir /home/alice/backup 

Locate all docx documents 
 --> locate '*.docx' 

Open file allowing colors 
 --> LESS='-R' less file.txt 

Launch bash with FOO=bar 
 --> env FOO=bar bash 

Replace commas with spaces in each line 
 --> awk '{gsub(",", " "); print}' file.txt 

Start cron service using service command 
 --> sudo service cron start 

Assign ui group to layout.sketch 
 --> chgrp ui layout.sketch 

Include josh in debug group 
 --> gpasswd -a josh debug 

Kill by name on remote host via SSH 
 --> ssh user@host 'killall mydaemon' 

Run sudo command with clean environment 
 --> sudo env -i command 

Start screen for CPU benchmark 
 --> screen -S benchmark stress --cpu 4 

Copy all files in the current directory to /tmp and keep everything and do not overwrite existing files 
 --> cp -a -n * /tmp/ 

Display memory usage in megabytes with total 
 --> free -m -t 

Switch to window 1 
 --> Ctrl-b 1 

Create a file called 'downloads' in your home 
 --> touch ~/downloads 

Ping yahoo.com with 8192 byte packets and 39 times 
 --> ping -s 8192 -c 39 yahoo.com 

Remove devqa from regression group 
 --> gpasswd -d devqa regression 

Search for bin folder 
 --> locate /bin 

Show all processes in BSD user format 
 --> ps aux 

Change to the directory /usr/share/kde4 
 --> cd /usr/share/kde4 

Remove cloud_user 
 --> userdel cloud_user 

Force detach /mnt/netdrive 
 --> umount -f /mnt/netdrive 

Find commented-out IP addresses 
 --> grep '^#.*[0-9]\+\.[0-9]\+\.[0-9]\+\.[0-9]\+' config.txt 

Who is using nano editor 
 --> w | grep nano 

Traceroute to google.com using interface wlan0 and max TTL 20 
 --> traceroute -i wlan0 -m 20 google.com 

Make 'gl' show git log 
 --> alias gl='git log' 

Query the TXT record for yahoo.com 
 --> host -t TXT yahoo.com 

Run top and show only root's processes 
 --> top -u root 

Give user and group execute permissions on backup.sh 
 --> chmod ug+x backup.sh 

Traceroute to example.com forbidding fragmentation 
 --> traceroute -F example.com 

Ping with record route option (root required) 
 --> ping -R google.com 

Query the A record for google.com and display output with both timestamp and color 
 --> date; host google.com | lolcat 

Create a directory called 'share' in /usr/local 
 --> mkdir /usr/local/share 

Mount ISO with read-only option 
 --> mount -o loop,ro file.iso /mnt/iso 

Test cron job manually 
 --> /bin/bash /myscript.sh 

Execute command every weekday 
 --> crontab -e # 0 9 * * 1-5 /weekday.sh 

Use fdisk to view partitions on /dev/sdv 
 --> fdisk -l /dev/sdv 

Sort users by terminal 
 --> w | sort -k2 

Change to the /var/log/fontconfig.log directory 
 --> cd /var/log/fontconfig.log 

Open file and source vimrc 
 --> vim -u ~/.vimrc file.txt 

Create linux-swap partition on /dev/sdd from 8GB to 10GB 
 --> parted /dev/sdd mkpart primary linux-swap 8GB 10GB 

Show kernel messages and filter for CPU 
 --> dmesg | grep -i cpu 

Open vim in compatible mode 
 --> vim -C file.txt 

Unmount bind mount at /mnt/www 
 --> umount /mnt/www 

Ping example.com with verbose output 
 --> ping -v example.com 

Change backend to backend_team 
 --> groupmod -n backend_team backend 

Change database team group for config.cnf 
 --> chgrp database config.cnf 

Set permissions recursively to 644 
 --> chmod -R 644 folder 

Send SIGSTOP to PID range 2000–2005 
 --> for pid in {2000..2005}; do kill -STOP $pid; done 

Re-enable password login for roger 
 --> passwd -u roger 

Start SSH agent 
 --> ssh-agent bash 

Change to the /var/log/dmesg directory 
 --> cd /var/log/dmesg 

Force delete all files in the Downloads directory 
 --> rm -f ~/Downloads/* 

Traceroute to github.com using UDP port 53 
 --> traceroute -U github.com 

Display kernel name and version 
 --> uname -sv 

Query the TLSA record for github.com 
 --> host -t TLSA github.com 

Sort by second column numerically 
 --> awk '{print $2, $0}' file.txt | sort -n 

Run mtr to google.com and set interval to 0.1 second 
 --> mtr -i 0.1 google.com 

Display your current directory and store it in a variable for later use in a script. 
 --> current_dir=$(pwd) 

Query SOA record for google.com and display only answer section 
 --> dig google.com SOA +noall +answer 

Follow file with time stamp 
 --> tail -f file.log | ts 

Add a connection with a specific IPv4 DHCP vendor class identifier 
 --> nmcli connection add type ethernet con-name "My Ethernet" ifname eth0 ipv4.dhcp-vendor-class-identifier "MyVendor" 

Set ux group for wireframe.fig 
 --> chgrp ux wireframe.fig 

Create a file called 'log.txt' and set its timestamp to 7:00 AM today 
 --> touch -t $(date +%Y%m%d)0700 log.txt 

Display disk usage for files larger than 1MB 
 --> du --threshold=1M 

Move all files in the current directory to /tmp and keep context 
 --> mv --preserve=context * /tmp/ 

Find hidden files in home directory 
 --> locate /home/.* 

Get a summary of all terminal sessions 
 --> w 

Interactive mode: set query type to NS and look up example.com 
 --> nslookup
set type=NS
example.com 

Query the CNAME record for www.github.com and grep for github 
 --> host -t CNAME www.github.com | grep github 

Query the A record for example.com with 5 retries 
 --> nslookup -retry=5 example.com 

Copy all files in the current directory to /tmp and keep everything and keep ownership 
 --> cp -a --preserve=ownership * /tmp/ 

Use su for debuguser 
 --> su debuguser 

Print disk usage 
 --> echo "Disk: $(df -h /)" 

Transfer file using SCP with compression 
 --> scp -C file.txt user@hostname:/remote/path/ 

Set up file system ext2 on /dev/sdi4 
 --> mkfs.ext2 /dev/sdi4 

Show line numbers 
 --> less -N file.txt 

Delete eng_team group 
 --> groupdel eng_team 

Run fdisk in interactive mode on /dev/vdb 
 --> fdisk /dev/vdb 

Display all system information except kernel name and hardware platform 
 --> uname -a 

Compress all markdown and HTML files 
 --> zip web_docs.zip *.md *.html 

Format external HDD /dev/sdd6 to exfat 
 --> mkfs.exfat /dev/sdd6 

Change default shell of ankit to /bin/bash 
 --> usermod -s /bin/bash ankit 

Change to the /var/log/lightdm directory 
 --> cd /var/log/lightdm 

Make a bootable SD card from image 
 --> dd if=raspbian.img of=/dev/mmcblk0 bs=4M status=progress 

Detach from the current tmux session 
 --> Ctrl-b d 

Pause for 2.5 minutes 
 --> sleep 150 

Update user access for hr_staff 
 --> passwd hr_staff 

Traceroute to github.com sending packets with ICMP protocol 
 --> traceroute -P icmp github.com 

Delete batch1_training group 
 --> groupdel batch1_training 

Display memory usage in human-readable format, update every 5 seconds indefinitely 
 --> free -h -s 5 

Become tomcat user 
 --> su tomcat 

Display memory usage in bytes, update every second indefinitely 
 --> free -b -s 1 

Mount VFAT USB to /mnt/usbdrive 
 --> mount -t vfat /dev/sdg1 /mnt/usbdrive 

Change shell of archive to /bin/sh 
 --> usermod -s /bin/sh archive 

Open file and set shiftwidth=4 
 --> vim -c 'set shiftwidth=4' file.txt 

Create a file called 'yesterday.txt' and set its timestamp to yesterday 
 --> touch -d 'yesterday' yesterday.txt 

Log current system user activity 
 --> w 

Assign students group to enrollment.db 
 --> chgrp students enrollment.db 

Download a file with a specific referer 
 --> wget --referer=http://google.com http://example.com/file.zip 

Copy all files in the /mnt directory to /backup/mnt 
 --> cp /mnt/* /backup/mnt/ 

Copy all files in the current directory to /tmp and keep everything and keep timestamps 
 --> cp -a --preserve=timestamps * /tmp/ 

List users and their CPU usage 
 --> w 

Assign IP 192.168.56.101 to ens33 
 --> sudo ifconfig ens33 192.168.56.101 

Ping amazon.com with 4 second timeout and 11 times 
 --> ping -W 4 -c 11 amazon.com 

Assign ownership of folder to john 
 --> chown john folder 

List all UDP sockets with SELinux security contexts 
 --> ss -u -a -Z 

Run htop and show only processes with user 'www-data' 
 --> htop -u www-data 

Get count of GUI logins 
 --> who | grep :0 | wc -l 

Query SOA record for google.com with +short output 
 --> dig google.com SOA +short 

Create cron job to run every hour 
 --> echo '0 * * * * /path/to/script.sh' | crontab - 

Make a 512MB partition on /dev/sdc 
 --> parted /dev/sdc mkpart primary ext4 0% 512MB 

Show all processes sorted by CPU usage 
 --> ps -eo pid,ppid,cmd,%cpu,%mem --sort=-%cpu 

Create a directory called 'archive' in /var/mail 
 --> mkdir /var/mail/archive 

Recreate image from chunks 
 --> cat part_* > big.img 

Print the first column of the file data.txt 
 --> awk '{print $1}' data.txt 

Change to the directory /usr/share/doc-base 
 --> cd /usr/share/doc-base 

Check system-wide cron jobs 
 --> cat /etc/crontab 

Show multicast group memberships 
 --> ifconfig | grep MULTICAST 

Query the TXT record for yahoo.com and grep for v=spf1 
 --> host -t TXT yahoo.com | grep 'v=spf1' 

Create a file called 'backup.txt' and set its timestamp to match 'original.txt' 
 --> touch -r original.txt backup.txt 

What's in my Downloads folder? Show me a detailed list. 
 --> ls -l ~/Downloads 

Enable user login for vpn_client 
 --> passwd -u vpn_client 

Create a file called 'share' in your home 
 --> touch ~/share 

Interactive mode: set query type to ANY and look up example.com 
 --> nslookup
set type=ANY
example.com 

Remove a hidden file called '.env' in your home 
 --> rm ~/.env 

Show all running processes in jobs format 
 --> ps -ej 

Extract all host IPs 
 --> who | awk '{print $5}' 

Use su to switch to developer 
 --> su developer 

Gzip filename.txt 
 --> gzip filename.txt 

Traceroute to 8.8.8.8 using a loose source route gateway 
 --> traceroute -g 192.168.1.1 8.8.8.8 

Set nancy as owner for project directory 
 --> chown nancy project 

Change niceness of processes using network on port 22 
 --> sudo renice +5 -p $(lsof -i:22 -t) 

Copy all files in /var/log/lightdm to /backup/lightdm 
 --> cp /var/log/lightdm/* /backup/lightdm/ 

Alias to see network interfaces 
 --> alias net='ip a' 

Show label of /dev/sdh3 
 --> blkid /dev/sdh3 

Show only the interface flags for eth0 
 --> ifconfig eth0 | grep flags 

Change niceness of all processes by user bob to -5 
 --> sudo renice -5 -u bob 

Clear command history from memory 
 --> history -c 

Add a 12-second delay 
 --> sleep 12 

Start script1 and script2 and wait for both 
 --> ./script1.sh & ./script2.sh & wait 

Zip everything inside the folder my_folder into zipped_folder.zip 
 --> zip -r zipped_folder.zip my_folder 

Show the routing table with numeric addresses 
 --> netstat -rn 

Restart sshd service with force 
 --> systemctl restart sshd 

Create a file called 'yesterday.txt' and set its timestamp to yesterday 
 --> touch -d 'yesterday' yesterday.txt 

Create a file called 'no_create.txt' only if it exists 
 --> touch -c no_create.txt 

Query the A record for yahoo.com with 10 retries 
 --> nslookup -retry=10 yahoo.com 

Install zip tool 
 --> sudo apt install zip 

Change to the /var/log/mail.warn directory 
 --> cd /var/log/mail.warn 

Sync files and specify a custom daemon address 
 --> rsync -avz --daemon --address=192.168.1.100 source_dir/ destination_dir/ 

Zip scripts and results directories 
 --> zip -r job.zip scripts results 

Make group content_creators 
 --> groupadd content_creators 

Download a file with a timeout of 10 seconds 
 --> wget --timeout=10 http://example.com/file.zip 

Find files in /home owned by user alice 
 --> find /home -user alice 

Create user sshguest with disabled shell 
 --> useradd -s /usr/sbin/nologin sshguest 

Reset authentication for user nick 
 --> passwd nick 

Change to the directory /etc/init.d 
 --> cd /etc/init.d 

Run mtr to 8.8.8.8 and display ASN info 
 --> mtr --aslookup 8.8.8.8 

Delete sysops_team group 
 --> groupdel sysops_team 

Show help 
 --> dpkg -r --help 

Examine disk layout of /dev/sdc1 
 --> fdisk -l /dev/sdc1 

Mount debugfs on /sys/kernel/debug 
 --> mount -t debugfs none /sys/kernel/debug 

Change to the directory pointed to by the symbolic link 'mylink' and follow the link 
 --> cd -L mylink 

Bring down interface enp0s3 
 --> sudo ifconfig enp0s3 down 

Query the CAA record for google.com 
 --> nslookup -type=CAA google.com 

Ping google.com with 512 byte packets and 10 times 
 --> ping -s 512 -c 10 google.com 

Show all interfaces with protocol family udp 
 --> ifconfig -a udp 

Stop docker service 
 --> sudo systemctl stop docker 

Make new ext4 partition on /dev/sda starting at 100MiB to 1GiB 
 --> parted /dev/sda mkpart primary ext4 100MiB 1GiB 

Locate files inside Downloads directory 
 --> locate Downloads 

Format device /dev/sdb4 using ext3 
 --> mkfs.ext3 /dev/sdb4 

Clear previous logs and commands 
 --> clear 

Remove user_audit 
 --> groupdel user_audit 

Print path and size of all files in /tmp 
 --> find /tmp -type f -printf "%p %s\n" 

Query A record for google.com and set +authority 
 --> dig google.com +authority 

Watch changes in system time 
 --> watch date +%T 

Run mtr to facebook.com and set the number of pings per hop to 11 
 --> mtr -c 11 facebook.com 

Add demo_user to ssh group 
 --> usermod -aG ssh demo_user 

Run backup script and ignore terminal hangups 
 --> nohup ./backup.sh & 

Display the second column of file.csv 
 --> awk -F',' '{print $2}' file.csv 

Ping yahoo.com with 2 second interval and 5 packets 
 --> ping -i 2 -c 5 yahoo.com 

Create a file called 'mail.txt' in /var/mail 
 --> touch /var/mail/mail.txt 

Query A record for google.com and set +nonssearch 
 --> dig google.com +nonssearch 

Remove ui_ux group from the system 
 --> groupdel ui_ux 

Remove all files in /var/log/audit 
 --> rm /var/log/audit/* 

Query A record for google.com and set +answer 
 --> dig google.com +answer 

Download a file and mirror a website with output file and directory 
 --> wget --mirror --output-file=log.txt --directory-prefix=/tmp http://example.com/ 

Run top with a custom delay of 3 seconds 
 --> top -d 3 

Interactive mode: set debug mode and look up google.com 
 --> nslookup
set debug
google.com 

Show only interfaces with IPv4 addresses 
 --> ifconfig | grep inet 

Download a file and specify a timeout for connect 
 --> wget --connect-timeout=10 http://example.com/file.zip 

Create user admin2 and add to wheel group 
 --> useradd -G wheel admin2 

Look for PYTHONPATH in env 
 --> env | grep PYTHONPATH 

Change to the directory /usr/share/zoneinfo/Asia 
 --> cd /usr/share/zoneinfo/Asia 

Fetch UUID for sdb5 
 --> blkid /dev/sdb5 

Simulate auto-remove 
 --> sudo apt autoremove --simulate 

Find all named pipes in /tmp 
 --> find /tmp -type p 

Rename security_team to infosec_team 
 --> groupmod -n infosec_team security_team 

Change niceness of journald daemon 
 --> sudo renice +8 -p $(pgrep systemd-journal) 

Kill multiple names in one command 
 --> killall httpd mysqld 

Run script with cron and redirect output 
 --> echo '0 * * * * /script.sh >> /var/log/script.log 2>&1' | crontab - 

Show first line of every file in /data 
 --> find /data -type f -exec head -n 1 {} \; 

Display all system information except kernel name and operating system 
 --> uname -arnvmoip 

Switch to user sam with login shell 
 --> su - sam 

Find number of logged in users 
 --> who | wc -l 

Delete a file called 'boot.log' in /var/log 
 --> rm /var/log/boot.log 

Run curl with proxy set 
 --> env http_proxy=http://proxy curl example.com 

Query the CAA record for github.com 
 --> host -t CAA github.com 

Delete beta_user with home dir 
 --> userdel -r beta_user 

Copy all files in the current directory to /tmp and keep timestamps 
 --> cp --preserve=timestamps * /tmp/ 

Connect with verbose output for debugging 
 --> ssh -v user@hostname 

Multiple background tasks with wait 
 --> cmd1 & cmd2 & wait 

Update password of test_account 
 --> passwd test_account 

Query A record for google.com and set +noadflag 
 --> dig google.com +noadflag 

Change to the /var/log/boot directory 
 --> cd /var/log/boot 

Query the SRV record for _sip._tcp.google.com 
 --> nslookup -query=SRV _sip._tcp.google.com 

Display memory usage in megabytes, update every 15 seconds indefinitely 
 --> free -m -s 15 

Remove write permission from file.txt 
 --> chmod -w file.txt 

Allow devuser2 to log in again 
 --> passwd -u devuser2 

Run system update every night 
 --> crontab -e # 0 2 * * * /update.sh 

Open file and highlight column 80 
 --> vim -c 'set colorcolumn=80' file.txt 

Find files in /tmp up to 3 levels deep 
 --> find /tmp -maxdepth 3 -type f 

Re-run previous grep command 
 --> !grep 

Concatenate outputs of commands 
 --> cat <(echo line1) <(echo line2) 

Change to the /dev directory 
 --> cd /dev 

Find files in /data larger than 1GB 
 --> find /data -size +1G -type f 

Run mtr to github.com and use a packet size of 10000 bytes 
 --> mtr -s 10000 github.com 

Zip up the directory project into project.zip 
 --> zip -r project.zip project 

Create a file called 'boot.log' in /var/log 
 --> touch /var/log/boot.log 

Create mac_users group 
 --> groupadd mac_users 

Rename 'aptitude.log' to 'aptitude.log.old' in /var/log/aptitude 
 --> mv /var/log/aptitude/aptitude.log /var/log/aptitude/aptitude.log.old 

Restart the ufw firewall 
 --> service ufw restart 

Change graphics_team to visual_team 
 --> groupmod -n visual_team graphics_team 

List all available boots 
 --> journalctl --list-boots 

List files and sort them by last access time 
 --> ls -lu 

Delete a file called 'aptitude.log' in /var/log/aptitude 
 --> rm /var/log/aptitude/aptitude.log 

Change to the directory /usr/share/locale 
 --> cd /usr/share/locale 

Run job only in January 
 --> crontab -e # 0 0 * 1 * command 

Ensure cron logs are enabled 
 --> grep cron /etc/rsyslog.d/50-default.conf 

Lock the password for user john 
 --> passwd -l john 

Make security group for firewall.log 
 --> chgrp security firewall.log 

Remove sudo command from history 
 --> history | grep -n sudo 

Query the A record for example.com and display debug information 
 --> nslookup -debug example.com 

Restart docker service 
 --> service docker restart 

Delete appbuilder_user 
 --> userdel appbuilder_user 

Create a fat32 partition from 0% to 100% on /dev/sdf 
 --> parted /dev/sdf mkpart primary fat32 0% 100% 

Display kernel release, machine hardware name, and processor type 
 --> uname -rmp 

Show all interfaces with their status (PROMISC) 
 --> ifconfig -a | grep PROMISC 

Create the devops group 
 --> groupadd devops 

Create a new window in tmux 
 --> Ctrl-b c 

Check if log files are in use 
 --> lsof /var/log/* 

Compress the image.png file using bzip2 
 --> bzip2 image.png 

Change niceness of all Firefox processes 
 --> sudo renice +5 -p $(pgrep firefox) 

Run atop and show only the last 10 lines 
 --> atop | tail -n 10 

Alias to extract .tar.gz 
 --> alias untar='tar -xvzf' 

Edit cron job for root user 
 --> sudo crontab -e -u root 

Zip python scripts from scripts/ folder 
 --> zip scripts.zip scripts/*.py 

Display the 10 smallest directories in /home 
 --> du -h /home | sort -h | head -10 

Erase the terminal output 
 --> clear 

Show file type for all files in /data 
 --> find /data -type f -exec file {} \; 

Remove engineering_ops 
 --> groupdel engineering_ops 

Delete debug_team 
 --> groupdel debug_team 

Show all interfaces with their error statistics 
 --> ifconfig -a | grep errors 

Query the A record for yahoo.com and display debug information 
 --> nslookup -debug yahoo.com 

Split tmux window horizontally 
 --> Ctrl-b " 

Create a file called 'log.txt' and set its timestamp to 11:59 PM today 
 --> touch -t $(date +%Y%m%d)2359 log.txt 

Form a legal group 
 --> groupadd legal 

Display disk usage for all files and directories, excluding directories matching a pattern 
 --> du --exclude="/tmp/*" 

Change to the /var/log/yum.log directory 
 --> cd /var/log/yum.log 

Display disk usage for all files and directories, including hidden ones, in bytes 
 --> du -ab 

Locate USB device mounts 
 --> locate /media 

Set comment of user vera to 'Temporary Staff' 
 --> usermod -c 'Temporary Staff' vera 

Dry run to list processes that would be killed 
 --> killall -v -s TERM --dry-run myapp 

Find USB rules configuration 
 --> locate *.rules 

Move all files in /var/log/hp to /backup/hp 
 --> mv /var/log/hp/* /backup/hp/ 

Run top and filter by process state 'Z' (zombie) 
 --> top | grep Z 

Add testuser to app group 
 --> gpasswd -a testuser app 

Reset partition table on SSD /dev/nvme1n1 
 --> parted /dev/nvme1n1 mklabel gpt 

Run data analysis with niceness +7 
 --> nice -n 7 python3 analysis.py 

Make env group owner of pollution_data.csv 
 --> chgrp env pollution_data.csv 

Move all files in /var/log/alternatives.log to /backup/alternatives 
 --> mv /var/log/alternatives.log/* /backup/alternatives/ 

Assign owner of file1.txt to user9 
 --> chown user9 file1.txt 

Run top and update every 2 seconds 
 --> top -d 2 

Run mtr to facebook.com and set interval to 1 second 
 --> mtr -i 1 facebook.com 

Display files sorted by their ctime, newest first 
 --> ls -ltc 

Update frontend group to ui_team 
 --> groupmod -n ui_team frontend 

Send SIGCONT to all sleep processes 
 --> pkill -CONT sleep 

Add user testadmin with no group 
 --> useradd -N testadmin 

Kill all processes as superuser 
 --> sudo killall nginx 

Query the A record for example.com and display output in color 
 --> host example.com | lolcat 

Ping google.com with a pattern of abcd 
 --> ping -p abcd google.com 

Locate files inside /usr/share 
 --> locate /usr/share 

Remove visual_team group 
 --> groupdel visual_team 

Send SIGCONT to a stopped PID 2425 
 --> kill -CONT 2425 

Display kernel release, version, and machine hardware name 
 --> uname -rvm 

Unmount mounted archive 
 --> umount /mnt/archive 

Allow read and execute for others on script.js 
 --> chmod o+rx script.js 

Assign netmask 255.255.255.0 to enp0s3 
 --> sudo ifconfig enp0s3 netmask 255.255.255.0 

Show the login terminal of all users 
 --> who 

Print the command history 
 --> history 

Use gzip for analysis.xlsx 
 --> gzip analysis.xlsx 

Find kernel modules 
 --> locate '*.ko' 

Copy all files in /var/log/pm-powersave.log to /backup/pmpowersave 
 --> cp /var/log/pm-powersave.log/* /backup/pmpowersave/ 

Create a user dev1 with no password and no home 
 --> useradd -M -s /usr/sbin/nologin dev1 

Query the MX record for example.com with verbose output 
 --> host -v -t MX example.com 

Display disk usage for all files and directories, using block size of 4E 
 --> du -B 4E 

Change niceness of all Chrome processes 
 --> sudo renice +5 -p $(pgrep chrome) 

Use gzip to compress graph.svg 
 --> gzip graph.svg 

Display history with only command names 
 --> history | awk '{$1=""; print $0}' 

Open file and use system clipboard 
 --> vim -c 'set clipboard+=unnamedplus' file.txt 

Print usernames and their sessions 
 --> who 

Move all files in the parent directory to the current directory 
 --> mv ../* . 

Traceroute to 8.8.8.8 with AS lookups enabled 
 --> traceroute -A 8.8.8.8 

Execute training.py with nohup 
 --> nohup python training.py & 

Ping google.com with 3 second timeout and 87 times 
 --> ping -W 3 -c 87 google.com 

Remove user nologin_guest 
 --> userdel nologin_guest 

Show me a detailed list of files, sorted naturally by version number 
 --> ls -lv 

Display kernel version, processor type, and hardware platform 
 --> uname -vpi 

Create a directory called 'sounds' in your home 
 --> mkdir ~/sounds 

Make a GET request silently (no progress bar) 
 --> curl -s http://example.com 

Change login key for deployuser 
 --> passwd deployuser 

Run htop and show full command line for each process 
 --> htop --show-commandline 

Make user netadmin and set shell to /bin/sh 
 --> useradd -s /bin/sh netadmin 

Display all tmux key bindings 
 --> Ctrl-b ? 

Unmask the telnet.socket 
 --> systemctl unmask telnet.socket 

Query the NS record for example.com 
 --> host -t NS example.com 

Show all connections and display output in color 
 --> netstat -an | lolcat 

Change to the directory /usr/share/perl5 
 --> cd /usr/share/perl5 

Clean terminal buffer and screen 
 --> clear 

Display memory usage in megabytes with old format and total, update every 2 seconds, 2 times 
 --> free -m -o -t -s 2 -c 2 

Verify cron script permissions 
 --> ls -l /etc/cron.daily/ 

Show all connections and continuously update every second 
 --> netstat -c 

Observe number of active cron jobs 
 --> watch 'ps aux | grep cron' 

Show TCP connections with PID and program name 
 --> sudo netstat -tp 

Remove user emily from group developers 
 --> gpasswd -d emily developers 

Compress the session.dat file using bzip2 
 --> bzip2 session.dat 

Show command history related to ssh 
 --> history | grep ssh 

Hold task for 0.6 seconds 
 --> sleep 0.6 

Locate boot logs 
 --> locate boot.log 

Delete all files in the /mnt directory 
 --> rm /mnt/* 

Recursively move the /home/user directory to /backup/home-user 
 --> mv /home/user /backup/home-user/ 

Restart MySQL 
 --> sudo systemctl restart mysql 

Change niceness of java processes by name 
 --> sudo renice +5 -n $(pgrep java) 

Scan and show UUID for /dev/sda4 
 --> blkid /dev/sda4 

Display memory usage in gigabytes, update every 15 seconds indefinitely 
 --> free -g -s 15 

Restart the rsyslog service 
 --> systemctl restart rsyslog 

Remove without prompts 
 --> sudo apt remove -y nginx 

Rename 'Xorg.0.log' to 'Xorg.0.log.old' in /var/log 
 --> mv /var/log/Xorg.0.log /var/log/Xorg.0.log.old 

Find all variables starting with LC_ 
 --> env | grep '^LC_' 

Track background jobs 
 --> watch jobs 

Update mentors group to mentorship_team 
 --> groupmod -n mentorship_team mentors 

Open file and enable cursorcolumn 
 --> vim -c 'set cursorcolumn' file.txt 

Delete old_developer account 
 --> userdel old_developer 

Remove all keys from SSH agent 
 --> ssh-add -D 

Create a directory called 'temp' in /home/bob 
 --> mkdir /home/bob/temp 

Make a simple GET request to a URL 
 --> curl http://example.com 

Delete loadtest_user 
 --> userdel loadtest_user 

List all sockets and filter for FIN-WAIT-2 state 
 --> ss state fin-wait-2 

Open file and highlight search matches 
 --> vim -c 'set hlsearch' file.txt 

Download all files from a website recursively 
 --> wget -r http://example.com/ 

Print line if third field is either 'yes' or 'no' 
 --> awk '$3 == "yes" || $3 == "no"' data.txt 

Simulate removal 
 --> sudo apt remove --simulate nginx 

Use gzip on log.txt 
 --> gzip log.txt 

Change authentication of ci_runner 
 --> passwd ci_runner 

Remove all files in /var/log/fsck 
 --> rm /var/log/fsck/* 

Start the postgresql service 
 --> systemctl start postgresql 

Change to the /var/crash directory 
 --> cd /var/crash 

Show all interfaces with their status (MULTICAST) 
 --> ifconfig -a | grep MULTICAST 

Run mtr to example.com and set maximum TTL to 100 
 --> mtr -m 100 example.com 

Hold process for 7 seconds 
 --> sleep 7 

Generate SSH key pair with specific filename 
 --> ssh-keygen -t rsa -f ~/.ssh/mykey 

Restart the cron service 
 --> service cron restart 

List files with details and sort by change time (ctime) 
 --> ls -lc 

Traceroute to google.com with max TTL 10 
 --> traceroute -m 10 google.com 

Delete .bak files in /data older than 7 days 
 --> find /data -type f -name "*.bak" -mtime +7 -exec rm {} \; 

Remove and purge config 
 --> sudo apt remove --purge nginx 

Display memory usage in gigabytes, update every 10 seconds, 3 times 
 --> free -g -s 10 -c 3 

Change to the /lib directory 
 --> cd /lib 

Display all system information except kernel name and hardware platform 
 --> uname -arvmpoip 

Access ssh_user 
 --> su ssh_user 

Monitor tail of compressed file 
 --> zcat file.gz | tail -f 

Force kill by exact match name 
 --> killall -9 -e myapp 

Modify login for officeadmin 
 --> passwd officeadmin 

Remove internalbot account 
 --> userdel internalbot 

Add a logging wrapper to cron job 
 --> echo '0 * * * * /myscript.sh >> /var/log/mylog.log' | crontab - 

Move all files in /var/log/exim4 to /backup/exim4 
 --> mv /var/log/exim4/* /backup/exim4/ 

Print all files in /srv and sort the list 
 --> find /srv -type f -print | sort 

Convert IPv4 address dots to underscores 
 --> sed 's/\./_/g' ips.txt 

Make support the group owner of logs folder 
 --> chgrp support logs 

Print all rows where field 3 contains 'pass' 
 --> awk '$3 ~ /pass/' file.txt 

Create a hidden file called '.env' in your home directory 
 --> touch ~/.env 

Show kernel messages with buffer size 1M 
 --> dmesg -s 1048576 

Query the A record for example.com and display the command used 
 --> echo 'host example.com'; host example.com 

Restore login for docker_ops 
 --> passwd -u docker_ops 

Block deployuser from accessing system with password 
 --> passwd -l deployuser 

Customize tmux status bar 
 --> set -g status-bg black 

Run a Python script every day at 8 AM 
 --> crontab -e # 0 8 * * * /usr/bin/python3 /home/user/script.py 

Check cron job errors 
 --> grep -i cron /var/log/syslog | grep -i error 

Make request with HTTP/3 
 --> curl --http3 https://example.com 

Create a file named 'data.csv' in /var/log 
 --> touch /var/log/data.csv 

Display machine hardware name, processor type, and hardware platform 
 --> uname -mpi 

Stop the fail2ban service 
 --> service fail2ban stop 

Copy all files in the current directory to /tmp and prompt before overwrite 
 --> cp -i * /tmp/ 

Print unique users logged in 
 --> who | awk '{print $1}' | sort | uniq 

Sync files and specify a custom daemon chroot 
 --> rsync -avz --daemon --chroot source_dir/ destination_dir/ 

Assign ownership of script.sh to sysuser 
 --> chown sysuser script.sh 

Add a connection with a specific interface name 
 --> nmcli connection add type ethernet con-name "My Ethernet" ifname eth0 

Gzip tutorial.py file 
 --> gzip tutorial.py 

See users from specific terminal 
 --> who | grep tty1 

Connect and execute a single command 
 --> ssh user@hostname 'ls -la' 

Background a while loop and wait 
 --> while true; do sleep 1; done & wait 

Display disk usage for all files in /var, excluding backup directory 
 --> du -a --exclude="/var/backup" /var 

Download a file and retry up to 5 times 
 --> wget --tries=5 http://example.com/file.zip 

Copy all files in the current directory to /tmp and keep everything and force overwrite 
 --> cp -a -f * /tmp/ 

Give owner full access to report.doc 
 --> chmod u+rwx report.doc 

Add customer_support group 
 --> groupadd customer_support 

Run htop and display only the last 10 lines 
 --> htop | tail -n 10 

Alias to show listening ports 
 --> alias ports='sudo lsof -i -P -n | grep LISTEN' 

Follow file and filter by grep 
 --> tail -f file.log | grep ERROR 

Display all system information except network node hostname 
 --> uname -asrvmoip 

Query the A record for facebook.com and display the command used 
 --> echo 'host facebook.com'; host facebook.com 

Display disk usage for files smaller than 10K in /etc 
 --> du --threshold=-10K /etc 

Give editor full control of article.docx 
 --> chown editor article.docx 

Blank out the terminal 
 --> clear 

Print all users currently using the system 
 --> w 

Change login name from quinn to quinn_123 
 --> usermod -l quinn_123 quinn 

Duplicate output via tee 
 --> cat file.txt | tee copy.txt 

Monitor user sessions 
 --> watch w 

Display kernel version, machine hardware name, and processor type 
 --> uname -vmp 

Move all files in /var/log recursively to /backup/logs 
 --> mv /var/log/* /backup/logs/ 

Restart the fail2ban service 
 --> service fail2ban restart 

Verbose debug output 
 --> sudo apt update -o Debug::pkgProblemResolver=yes 

Make request without keep-alive 
 --> curl -H 'Connection: close' http://example.com 

Rename voice_test group to voice_team 
 --> groupmod -n voice_team voice_test 

Create a file called 'lib' in your home 
 --> touch ~/lib 

Show all connections for a specific interface (e.g., eth0) 
 --> netstat -i eth0 

Run atop and show only processes with memory usage > 100MB 
 --> atop | awk '$10 > 102400' 

Copy a file named 'My File.txt' with spaces to /home/user 
 --> cp 'My File.txt' /home/user/ 

Inspect and modify partitions on /dev/sdi 
 --> parted /dev/sdi 

Make 'la' show all files including hidden ones 
 --> alias la='ls -A' 

Display memory usage in gigabytes, wide output 
 --> free -g -w 

Show logs in cat format (message only) 
 --> journalctl -o cat 

Mount disk using options rw,sync 
 --> mount -o rw,sync /dev/sdn1 /mnt/sync 

Configure the local loopback interface 
 --> sudo ifconfig lo 127.0.0.1 up 

Run mtr to google.com and show output in JSON format with 10 cycles 
 --> mtr --json -c 10 google.com 

Run mtr to example.com and set the number of pings per hop to 60 
 --> mtr -c 60 example.com 

List all sockets for source port mysql 
 --> ss src :mysql 

Run mtr to github.com with ASN lookup, 150 cycles, and output in report-wide format 
 --> mtr --aslookup --report-wide -c 150 github.com 

Create a file called 'no_create.txt' only if it exists, do not create new 
 --> touch -c no_create.txt 

Unmount previously mounted ISO image 
 --> umount /mnt/iso 

Find files with the name settings.py 
 --> locate settings.py 

Become user root with login shell 
 --> su - root 

Ping example.com and set packet size to 100 bytes 
 --> ping -s 100 example.com 

Create team_delta group 
 --> groupadd team_delta 

Start parted on disk /dev/sda 
 --> parted /dev/sda 

Print current partition scheme 
 --> parted /dev/sda print 

View UUID of /dev/sdg1 
 --> blkid /dev/sdg1 

Print first column from all .log files 
 --> awk '{print $1}' *.log 

Copy all files in /var/log/journal to /backup/journal 
 --> cp /var/log/journal/* /backup/journal/ 

Display UUID and fs type of /dev/sdg4 
 --> blkid /dev/sdg4 

Add user deploy to wheel group 
 --> usermod -aG wheel deploy 

Add new group called security_ops 
 --> groupadd security_ops 

Create a file called 'test' and set its timestamp to Jan 1, 2020 
 --> touch -t 202001010000 test 

Create a file called 'file.txt' and set its timestamp to 12:00 on June 18, 2025 
 --> touch -t 202506181200 file.txt 

Find config files in /opt 
 --> locate /opt/*.conf 

Restrict employee45's password login 
 --> passwd -l employee45 

Align columns 
 --> cat file.txt | column -t 

Show current user load 
 --> w 

Alias to open nautilus file explorer 
 --> alias open='nautilus .' 

Connect with local port forwarding 
 --> ssh -L 8080:localhost:80 user@hostname 

Move all files in /var/log/mail.info to /backup/mailinfo 
 --> mv /var/log/mail.info/* /backup/mailinfo/ 

Replace newlines with commas 
 --> sed ':a;N;$!ba;s/\n/,/g' file.txt 

Find non-empty files in /data 
 --> find /data -not -empty 

Give me a detailed list of /usr/lib, sorted by access time 
 --> ls -ltu /usr/lib 

Display all system information except kernel name and network node hostname 
 --> uname -arvmpio 

Compress testfile.txt using bzip2 
 --> bzip2 testfile.txt 

Run spark job with nohup 
 --> nohup spark-submit job.py & 

Ping yahoo.com with 4 second timeout and 29 times 
 --> ping -W 4 -c 29 yahoo.com 

Use screen to run a long simulation 
 --> screen -S sim python simulate.py 

Change to the directory /etc/ssl 
 --> cd /etc/ssl 

Use fdisk to manage /dev/vdd 
 --> fdisk /dev/vdd 

Open file and go to last edit position 
 --> vim +lastfile file.txt 

Create user tom in the group developers 
 --> useradd -g developers tom 

Locate all pdf files 
 --> locate '*.pdf' 

Remove an empty directory named 'photos' in the Pictures folder 
 --> rmdir ~/Pictures/photos 

Remove vpn_guest and clean up home 
 --> userdel -r vpn_guest 

Change to the directory /usr/share/xfce4 
 --> cd /usr/share/xfce4 

Track what everyone is doing 
 --> w 

Query the A record for 1.1.1.1 (reverse lookup) 
 --> host 1.1.1.1 

Show logs between two dates 
 --> journalctl --since "2025-06-18" --until "2025-06-19 18:00" 

Check if nginx is active 
 --> systemctl is-active nginx 

Restrict ci_runner password login 
 --> passwd -l ci_runner 

Flush terminal display 
 --> clear 

Start a failing service 'failtest' 
 --> service failtest start 

Query the A record for facebook.com 
 --> host facebook.com 

Sleep for 3.14 seconds 
 --> sleep 3.14 

Download a file and append to a log file (append mode) 
 --> wget -a download.log http://example.com/file.zip 

Print all positional parameters as single string 
 --> echo "$*" 

Make a request with custom headers 
 --> curl -H 'Authorization: Bearer token123' http://example.com/api 

Change credentials of webuser 
 --> passwd webuser 

Stop postfix email service 
 --> service postfix stop 

Change to the /etc directory 
 --> cd /etc 

Ping 1.1.1.1 with 2 second timeout and 145 times 
 --> ping -W 2 -c 145 1.1.1.1 

Display memory usage in terabytes 
 --> free --tera 

Get blkid info of swap partition /dev/sdc2 
 --> blkid /dev/sdc2 

Send command to screen session 
 --> screen -S mysession -X stuff 'ls\n' 

Add user tim with UID 8000 and bash shell 
 --> useradd -u 8000 -s /bin/bash tim 

Remove an empty directory called 'media' in /mnt 
 --> rmdir /mnt/media 

Show process details for PID 1154 with group, nice, start, elapsed time 
 --> ps -p 1154 -o pid,ppid,fgroup,ni,lstart,etime 

Delete content_mgr and remove home 
 --> userdel -r content_mgr 

Show open files for PID 5678 
 --> lsof -p 5678 

Login to testing user account 
 --> su testing 

Display disk usage for all files and directories, using block size of 256M 
 --> du -B 256M 

Display memory usage in megabytes with old format and wide output, update every 7 seconds, 7 times 
 --> free -m -o -w -s 7 -c 7 

Create floppy disk image 
 --> dd if=/dev/fd0 of=floppy.img bs=1440k 

Open file and enable wildmenu 
 --> vim -c 'set wildmenu' file.txt 

Create a new user devuser for development tasks 
 --> useradd devuser 

Display memory usage in kilobytes with all options, update every 11 seconds, 11 times 
 --> free -k -o -l -w -t -s 11 -c 11 

List jobs in hourly cron directory 
 --> ls /etc/cron.hourly/ 

Query A record for google.com and set +nostats 
 --> dig google.com +nostats 

Enable user login for vpn_client 
 --> passwd -u vpn_client 

Change students2025 to final_years 
 --> groupmod -n final_years students2025 

Create a file called 'log.txt' and set its timestamp to 7:00 AM today 
 --> touch -t $(date +%Y%m%d)0700 log.txt 

Change niceness of all ssh connections from this host 
 --> sudo renice +5 -p $(ss -tnp | grep ESTAB | awk '{print $6}' | cut -d',' -f2) 

Install cron package 
 --> sudo apt install cron 

Ping github.com with 3 second timeout and 9 times 
 --> ping -W 3 -c 9 github.com 

Create a file called 'doc-base' in your home 
 --> touch ~/doc-base 

Delay script by 0.6 seconds 
 --> sleep 0.6 

Show statistics for TCP only 
 --> netstat -st 

View system cron logs 
 --> grep CRON /var/log/syslog 

Cancel scheduled shutdown 
 --> sudo shutdown -c 

Delete anusha 
 --> userdel anusha 

Start the cron service 
 --> service cron start 

Traceroute to yahoo.com using ICMP echo requests and max TTL 35 
 --> traceroute -I -m 35 yahoo.com 

Replace multiple tabs with one tab 
 --> sed 's/\t\+/	/g' file.txt 

Make devops the group for container.yml 
 --> chgrp devops container.yml 

Stop the cups service 
 --> systemctl stop cups 

Mount squashfs image file 
 --> mount -t squashfs -o loop image.squashfs /mnt/squash 

Change comment for user sneha to 'Documentation Lead' 
 --> usermod -c 'Documentation Lead' sneha 

Compress test_data.json with gzip 
 --> gzip test_data.json 

Track number of failed login attempts 
 --> watch 'grep "Failed password" /var/log/auth.log' 

Follow multiple files 
 --> tail -f file1.log file2.log 

Search for .bash_profile 
 --> locate .bash_profile 

Copy all files in the current directory to /tmp and keep everything and keep links 
 --> cp -a --preserve=links * /tmp/ 

Flush terminal interface 
 --> clear 

Create persistent reverse tunnel 
 --> ssh -fNR 2222:localhost:22 user@remotehost 

Remove junior_dev group 
 --> groupdel junior_dev 

Change niceness of all root processes to +15 
 --> sudo renice +15 -u root 

Start vim in read-only mode 
 --> vim -R file.txt 

Show only usernames 
 --> who | awk '{print $1}' 

Delete user arya from beta group 
 --> gpasswd -d arya beta 

Show configuration for a specific interface (e.g., eth0) 
 --> ifconfig eth0 

Alias to remove all docker containers 
 --> alias dclean='docker rm $(docker ps -a -q)' 

Make a POST request with data 
 --> curl -X POST -d 'name=value' http://example.com/api 

Change niceness of Docker container processes 
 --> sudo renice +5 -p $(docker inspect -f '{{.State.Pid}}' mycontainer) 

Check exported shell variables 
 --> env 

Open file with percent progress 
 --> less -P%f%t file.txt 

Query A record for google.com and set source IP ::1 
 --> dig google.com -b ::1 

Check the status of cron service using service command 
 --> service cron status 

Traceroute to github.com with wait time 2 seconds and 6 probes per hop 
 --> traceroute -w 2 -q 6 github.com 

Wait until background compilation completes 
 --> gcc file.c & wait 

Find the word 'error' in the file log.txt 
 --> grep 'error' log.txt 

Connect and allocate tty 
 --> ssh -t user@hostname 'top' 

Connect with batch mode (no prompts) 
 --> ssh -B user@hostname 

Run atop in batch mode and save output to file 
 --> atop -b > atop_output.txt 

Configure the local loopback interface 
 --> sudo ifconfig lo 127.0.0.1 up 

Copy all files in /tmp to the current directory 
 --> cp /tmp/* . 

Use bzip2 to compress data.json 
 --> bzip2 data.json 

Move all files in /tmp to /tmp/old 
 --> find /tmp -type f -exec mv {} /tmp/old/ \; 

Ping amazon.com with 65507 byte packets and 45 times 
 --> ping -s 65507 -c 45 amazon.com 

Rename support to tech_support 
 --> groupmod -n tech_support support 

Delete infosec_team group 
 --> groupdel infosec_team 

Start a script with sudo and wait 
 --> sudo ./admin_script.sh & wait 

Download a file and skip existing files 
 --> wget -nc http://example.com/file.zip 

Download a file and mirror a website with compression 
 --> wget --mirror --compression=auto http://example.com/ 

Copy a file 'draft.txt' to /home/alice/Documents 
 --> cp draft.txt /home/alice/Documents/ 

Move all files in the /media directory to /backup/media 
 --> mv /media/* /backup/media/ 

Remove ci_cd_pipeline group 
 --> groupdel ci_cd_pipeline 

Create a directory called 'var' in your home 
 --> mkdir ~/var 

Make request using Negotiate authentication 
 --> curl --negotiate -u : http://example.com 

Download a file and set wait between downloads to 1 second 
 --> wget --wait=1 -r http://example.com/ 

Assign broadcast 192.168.56.255 to ens33 
 --> sudo ifconfig ens33 broadcast 192.168.56.255 

Move user rootclone's home to /admin/rootclone 
 --> usermod -d /admin/rootclone -m rootclone 

Compress all files in /srv using gzip 
 --> find /srv -type f -exec gzip {} \; 

Run Python script in background and wait 
 --> python3 app.py & wait 

Open file and disable swapfile 
 --> vim -n file.txt 

Move to the pane on the left 
 --> Ctrl-b ← 

Set TEMP=123 for a python script 
 --> env TEMP=123 python script.py 

Query the TXT record for google.com 
 --> nslookup -query=TXT google.com 

Re-execute systemd to reload configs 
 --> systemctl daemon-reexec 

Display memory usage in gigabytes with all options, update every 13 seconds, 13 times 
 --> free -g -o -l -w -t -s 13 -c 13 

Count total number of commands used 
 --> history | wc -l 

Show GUI session users 
 --> who | grep :0 

Remove partition 1 from /dev/sdb 
 --> parted /dev/sdb rm 1 

Change translators group to language.txt 
 --> chgrp translators language.txt 

Resize current pane upwards 
 --> Ctrl-b :resize-pane -U 5 

Start SFTP with specific port 
 --> sftp -P 2222 user@hostname 

Run docker command as root 
 --> sudo docker ps 

Show the kernel name 
 --> uname -s 

Send enter key to pane 
 --> tmux send-keys -t dev C-m 

Make user22 the owner of run.sh 
 --> chown user22 run.sh 

Create a file called 'script.sh' in /usr/local/bin 
 --> touch /usr/local/bin/script.sh 

Print information of current users 
 --> who 

Query A record for google.com and set +notopdown 
 --> dig google.com +notopdown 

Pause for 0.03 seconds 
 --> sleep 0.03 

Query A record for google.com with bufsize 4096 
 --> dig google.com +bufsize=4096 

Query the A record for github.com and use TCP instead of UDP 
 --> nslookup -vc github.com 

Sleep for 6.9 seconds 
 --> sleep 6.9 

Change niceness of mail services 
 --> sudo renice +5 -p $(pgrep postfix) $(pgrep smbd) 

Make hr team the group of leave.xls 
 --> chgrp hr leave.xls 

Go to line 100 
 --> less +100 file.txt 

Test API endpoint availability 
 --> curl -f -s -o /dev/null http://example.com/api/health 

Create a file called 'apt.log' in /var/log/apt 
 --> touch /var/log/apt/apt.log 

Query A record for google.com and show query time 
 --> dig google.com +stats 

Query the A record for google.com and display output with timestamp 
 --> date; host google.com 

Rename internal_tools to tools_internal 
 --> groupmod -n tools_internal internal_tools 

List all files recursively, with details, sorted by modification time 
 --> ls -lRt 

Create a group called alpha_users 
 --> groupadd alpha_users 

Force old conffile 
 --> sudo dpkg -i --force-confold package.deb 

Query A record for google.com and set +question 
 --> dig google.com +question 

Highlight current window 
 --> setw -g window-status-current-bg blue 

Find directories in /data at least 4 levels deep 
 --> find /data -mindepth 4 -type d 

Alias to flush DNS cache 
 --> alias flushdns='sudo systemd-resolve --flush-caches' 

Traceroute to example.com using interface eth0 
 --> traceroute -i eth0 example.com 

Move home for ghost to /tmp/ghost 
 --> usermod -d /tmp/ghost -m ghost 

Ping yahoo.com with 2 second timeout and 65 times 
 --> ping -W 2 -c 65 yahoo.com 

Query the A record for yahoo.com and display output with timestamp 
 --> date; host yahoo.com 

Create a file called 'log.txt' and set its timestamp to yesterday 
 --> touch -d 'yesterday' log.txt 

Delete test_group7 
 --> groupdel test_group7 

Traceroute to yahoo.com forbidding fragmentation 
 --> traceroute -F yahoo.com 

Assign IP 192.168.1.40 and enable allmulti on eth7 
 --> sudo ifconfig eth7 192.168.1.40 allmulti 

Copy public key to remote server 
 --> ssh-copy-id user@hostname 

Run grep recursively with niceness +6 
 --> nice -n 6 grep -R 'TODO' . 

Run make command detached 
 --> nohup make build & 

Persist update check in background 
 --> nohup ./check_updates.sh & 

Display memory usage in gigabytes, wide output 
 --> free -g -w 

Mount using fstab entry 
 --> mount /mnt/data 

Unmount USB attached to /mnt/usb 
 --> umount /mnt/usb 

Ping facebook.com with 5 second timeout and 150 times 
 --> ping -W 5 -c 150 facebook.com 

Switch to qa account 
 --> su qa 

Login as guest user 
 --> su guest 

Create alias to launch VS Code 
 --> alias code='code .' 

Change niceness of system service processes 
 --> sudo renice +3 -p $(systemctl show -p MainPID --value sshd.service) 

Remove legacy_user and delete all data 
 --> userdel -r legacy_user 

Display memory usage in gigabytes with total 
 --> free -g -t 

Create a directory called 'opt' in your home 
 --> mkdir ~/opt 

Add graphics_team group 
 --> groupadd graphics_team 

Make owner of image.jpg as user19 
 --> chown user19 image.jpg 

Copy all files in /var/log/zypper.log to /backup/zypper 
 --> cp /var/log/zypper.log/* /backup/zypper/ 

Show disk usage for all filesystems, display only the filesystem and usage percentage 
 --> df -h --output=source,pcent 

Print time from log entries 
 --> awk '{print $2}' access.log 

Find non-empty files in /tmp 
 --> find /tmp -not -size 0 

Create a file called 'file.txt' and set its timestamp to 12:00 on June 18, 2025 
 --> touch -t 202506181200 file.txt 

Rename 'boot.log' to 'boot.log.old' in /var/log 
 --> mv /var/log/boot.log /var/log/boot.log.old 

Alias 'q' to exit terminal 
 --> alias q='exit' 

Send SIGINT to PID 91011 
 --> kill -2 91011 

Sync files and specify a custom daemon module 
 --> rsync -avz rsync://user@host/module/ destination_dir/ 

Show statistics for ICMP only 
 --> netstat -s -p icmp 

Display memory usage in megabytes with old format, update every 15 seconds, 5 times 
 --> free -m -o -s 15 -c 5 

Show the network node hostname 
 --> uname -n 

Copy all files in the current directory to /tmp and keep everything and keep mode 
 --> cp -a --preserve=mode * /tmp/ 

Use su for appadmin 
 --> su appadmin 

Download a file and specify a certificate password 
 --> wget --certificate-type=PEM --private-key=key.pem --ca-certificate=ca.pem --ask-password https://example.com/file.zip 

Lock system_admin password 
 --> passwd -l system_admin 

Assign admin2 to it_admin group 
 --> gpasswd -a admin2 it_admin 

Bring down interface ens33 
 --> sudo ifconfig ens33 down 

Traceroute to google.com sending packets with ICMP protocol 
 --> traceroute -P icmp google.com 

Execute daemon manually 
 --> nohup ./daemon.sh & 

Unmount tmpfs mounted on /mnt/tmp 
 --> umount /mnt/tmp 

Mount SSHFS with compression 
 --> sshfs -o compression=yes user@hostname:/remote/path /local/mountpoint 

Start a new session named backup 
 --> screen -S backup 

Show all network connections 
 --> lsof -i 

Show statistics for all protocols 
 --> netstat -s 

Run fdisk to inspect /dev/sdz 
 --> fdisk /dev/sdz 

Add a connection with a specific IPv4 DHCP reject servers 
 --> nmcli connection add type ethernet con-name "My Ethernet" ifname eth0 ipv4.dhcp-reject-servers "192.168.1.2 192.168.1.3" 

Create ci_jobs group 
 --> groupadd ci_jobs 

Display who is doing what on the system 
 --> w 

Find all files in /home but skip .git directories 
 --> find /home -path "*/.git" -prune -o -type f -print 

Kill Python scripts in virtualenv 
 --> pkill -f '/venv/bin/python' 

Update frontend group to ui_team 
 --> groupmod -n ui_team frontend 

Traceroute to yahoo.com starting with TTL 5 
 --> traceroute -f 5 yahoo.com 

Open file and set listchars 
 --> vim -c 'set listchars=tab:>-,trail:-' file.txt 

Make mary the owner of slides.pptx 
 --> chown mary slides.pptx 

Change login name of rajeev to rajeev_k 
 --> usermod -l rajeev_k rajeev 

Delete alpha_team 
 --> groupdel alpha_team 

Detach from tmux safely 
 --> Ctrl-b d 

Show PATH using env 
 --> env | grep PATH 

Copy all files in the current directory to /tmp and keep everything and force overwrite 
 --> cp -a -f * /tmp/ 

Display memory usage in bytes, update every 30 seconds indefinitely 
 --> free -b -s 30 

Follow kernel ring buffer 
 --> dmesg --follow 

Search for exact word 'disk' in syslog 
 --> grep -w 'disk' /var/log/syslog 

Show kernel messages with delta timestamps 
 --> dmesg --time-format=delta 

Show logs with explanations (catalog) 
 --> journalctl -x 

Apply bzip2 to the markdown file index.md 
 --> bzip2 index.md 

Only print lines ending with semicolon 
 --> sed -n '/;$/p' file.txt 

Move files larger than 1GB in /opt to /mnt/bigfiles 
 --> find /opt -type f -size +1G -exec mv {} /mnt/bigfiles/ \; 

Set up exfat file system on /dev/sdi7 
 --> mkfs.exfat /dev/sdi7 

Query the CNAME record for www.example.com 
 --> host -t CNAME www.example.com 

Traceroute to 8.8.8.8 with debugging enabled 
 --> traceroute -d 8.8.8.8 

Send command to tmux session 
 --> tmux send-keys -t logs 'ls -l' C-m 

Check disk label of /dev/sde3 
 --> blkid /dev/sde3 

Form devtest_users group 
 --> groupadd devtest_users 

Add a connection with a specific IPv4 DHCP iaid 
 --> nmcli connection add type ethernet con-name "My Ethernet" ifname eth0 ipv4.dhcp-iaid mac 

Strip padding from binary 
 --> dd if=input.bin of=output.bin bs=512 count=1 conv=notrunc 

Delete lines 5 through 10 
 --> sed '5,10d' file.txt 

Recursively copy the /home/user directory to /backup/home-user 
 --> cp -r /home/user /backup/home-user/ 

Remove alpha2 
 --> userdel alpha2 

Add a connection with multiple routes 
 --> nmcli connection add type ethernet con-name "My Ethernet" ifname eth0 ipv4.routes "192.168.2.0/24 192.168.1.254, 10.0.0.0/8 192.168.1.1" 

Run htop inside tmux 
 --> tmux new -s sys htop 

Assign the group marketing to campaign.docx 
 --> chgrp marketing campaign.docx 

Copy key using specific port 
 --> ssh-copy-id -p 2222 user@hostname 

Run nginx start script safely 
 --> nohup ./start_nginx.sh & 

List all raw sockets 
 --> ss -w 

Apply 755 on a directory recursively 
 --> chmod -R 755 /srv/www 

Copy a file 'archive.tar.gz' to /opt and preserve attributes 
 --> cp -a archive.tar.gz /opt/ 

Copy all .txt files to the backup directory 
 --> cp *.txt backup/ 

Change to the /var/log/fail2ban.log directory 
 --> cd /var/log/fail2ban.log 

Ping google.com and use IPv6 only 
 --> ping -6 google.com 

Allow downgrades 
 --> sudo apt update --allow-downgrades 

Create a file called 'future.txt' and set its timestamp to next month 
 --> touch -d 'next month' future.txt 

Show dropped packets on network interfaces 
 --> ifconfig | grep dropped 

Apply bzip2 to export.csv 
 --> bzip2 export.csv 

Add testers_2025 group 
 --> groupadd testers_2025 

Compress a file called rawdata.csv 
 --> gzip rawdata.csv 

Change to the /var/log/mail.err directory 
 --> cd /var/log/mail.err 

Change shell of nologinuser to /usr/sbin/nologin 
 --> usermod -s /usr/sbin/nologin nologinuser 

Move all files in /var/tmp to /backup/tmp and force overwrite 
 --> mv -f /var/tmp/* /backup/tmp/ 

Rename designers group to ui_ux 
 --> groupmod -n ui_ux designers 

Check who is using a file /etc/passwd 
 --> lsof /etc/passwd 

Bind mount /var/www to /mnt/www 
 --> mount --bind /var/www /mnt/www 

Traceroute to example.com with max TTL 10 
 --> traceroute -m 10 example.com 

Zip the images and thumbnails folders together 
 --> zip -r pics.zip images thumbnails 

Create project_alpha group 
 --> groupadd project_alpha 

See who is using tty3 
 --> who | grep tty3 

Show disk usage for all filesystems, display only the filesystem and available inodes 
 --> df -h --output=source,iavail 

Ping github.com and set source IP address 
 --> ping -I wlan0 github.com 

Perform sync via script 
 --> nohup ./sync_data.sh & 

Show disk usage for all filesystems, display only the available space 
 --> df -h --output=avail 

Query A record for google.com and use only IPv4 
 --> dig google.com -4 

Download a file and use no directories 
 --> wget -nd http://example.com/file.zip 

Display users with login time 
 --> who 

Delete previous terminal commands 
 --> history -c 

Create a new group called developers 
 --> groupadd developers 

Show only the MTU for eth0 
 --> ifconfig eth0 | grep mtu 

Disable mail notifications for cron job 
 --> crontab -e # MAILTO='' 

Run mtr to github.com and set interval to 2 seconds 
 --> mtr -i 2 github.com 

Change to the /var/spool directory 
 --> cd /var/spool 

Show all processes with user-defined columns 
 --> ps -eo user,pid,pcpu,pmem,comm 

Give execute to all and remove write 
 --> chmod a+x-w script.sh 

Show disk usage for all filesystems, display only the filesystem and type 
 --> df -h --output=source,fstype 

Ping facebook.com and set source IP address 
 --> ping -I eth0 facebook.com 

Print user and process info together 
 --> w 

Move a file 'output.txt' to /tmp and overwrite if exists 
 --> mv -f output.txt /tmp/ 

Remove final_project group 
 --> groupdel final_project 

Show interfaces that are down 
 --> ifconfig -d 

Schedule command every Tuesday at 7 PM 
 --> crontab -e # 0 19 * * 2 /cmd.sh 

Run sleep command with nohup 
 --> nohup sleep 1000 & 

Install nginx 
 --> sudo apt install nginx 

Display memory usage in megabytes, update every second indefinitely 
 --> free -m -s 1 

Traceroute to example.com using ICMP echo requests 
 --> traceroute -I example.com 

Check SSH service status 
 --> sudo systemctl status ssh 

Force remove 
 --> sudo dpkg -r --force-all package-name 

Show NetworkManager networking state 
 --> nmcli networking 

Create a directory called 'logs' and another called 'tmp' at the same time 
 --> mkdir logs tmp 

Move all files in the current directory to /tmp and prompt before overwrite 
 --> mv -i * /tmp/ 

Unlock the account of user julie 
 --> usermod -U julie 

Sync files and filter using patterns from a file 
 --> rsync -avz --filter='merge filter_rules.txt' source_dir/ destination_dir/ 

Create a file called 'no_create.txt' only if it exists, do not create new 
 --> touch -c no_create.txt 

Search for 'main' in all files in /home 
 --> find /home -type f -print | xargs grep "main" 

Create swap partition between 4GB and 8GB 
 --> parted /dev/sdd mkpart primary linux-swap 4GB 8GB 

Connect with login name override 
 --> ssh -l username hostname 

Build file system using xfs on /dev/sdb6 
 --> mkfs.xfs /dev/sdb6 

Add user guest1 and do not create home directory 
 --> useradd -M guest1 

Use prompt string 
 --> LESS='-Pmyprompt>' less file.txt 

Display all system information except kernel name and machine hardware name 
 --> uname -a 

Ping facebook.com with 9 second timeout and 19 times 
 --> ping -W 9 -c 19 facebook.com 

Scan partition UUIDs 
 --> blkid 

Reset credentials for staging_user 
 --> passwd staging_user 

Print the DISPLAY variable from env 
 --> env | grep DISPLAY 

See users who are using vim 
 --> w | grep vim 

Show logs for a specific executable 
 --> journalctl _EXE=/usr/bin/bash 

Find all block devices in /data 
 --> find /data -type b 

Match only processes with TTY 
 --> pkill -t pts/1 bash 

Download file to specific directory 
 --> curl -o /tmp/downloaded_file.zip http://example.com/file.zip 

Copy all files in the current directory to /tmp and keep everything and force overwrite 
 --> cp -a -f * /tmp/ 

Query the SOA record for yahoo.com 
 --> nslookup -query=SOA yahoo.com 

Show me a long listing format of the current directory, sorted by file extension. 
 --> ls -lX 

Remove an empty directory called 'cache' in /var 
 --> rmdir /var/cache 

Delete guestacc from the server 
 --> userdel guestacc 

Create alias for rebooting 
 --> alias reboot='sudo reboot' 

Remove an empty directory called 'docs' in /usr/share 
 --> rmdir /usr/share/docs 

Show all processes for a specific terminal 
 --> ps -t tty1 

Connect to a WiFi network with password 
 --> nmcli device wifi connect MyNetwork password "mypassword" 

Query the CAA record for example.com 
 --> nslookup -type=CAA example.com 

Traceroute to google.com starting with TTL 5 
 --> traceroute -f 5 google.com 

Create a job for restarting service daily 
 --> crontab -e # 0 4 * * * systemctl restart myservice 

Create a file called 'themes' in your home 
 --> touch ~/themes 

Display kernel version and machine hardware name 
 --> uname -vm 

Add user junaid to sandbox group 
 --> gpasswd -a junaid sandbox 

Gzip the markdown file README.md 
 --> gzip README.md 

Edit SSH config file 
 --> sudo nano /etc/ssh/sshd_config 

Print label of /dev/sdg3 
 --> blkid /dev/sdg3 

List only interfaces that are up 
 --> ifconfig -u 

Query ANY record for google.com 
 --> dig google.com ANY 

Check label and UUID of /dev/sdi7 
 --> blkid /dev/sdi7 

Print process list 
 --> echo "$(ps)" 

Format nvme disk partition /dev/nvme1n1p1 to ext4 
 --> mkfs.ext4 /dev/nvme1n1p1 

Show help 
 --> dpkg -i --help 

Compress jsonfile.json using bzip2 
 --> bzip2 jsonfile.json 

List all TCP sockets in the LAST-ACK state 
 --> ss -t state last-ack 

Create a directory called 'backup' inside /etc/ssl 
 --> mkdir /etc/ssl/backup 

Run script only on 15th of each month 
 --> crontab -e # 0 0 15 * * /monthly_task.sh 

Change to the directory /usr/share/backgrounds 
 --> cd /usr/share/backgrounds 

Query TXT record for google.com with +short output 
 --> dig google.com TXT +short 

Alias for launching Firefox 
 --> alias ff='firefox' 

Query A record for google.com with +short output 
 --> dig google.com +short 

Mount disk with barrier=0 
 --> mount -o barrier=0 /dev/sdv1 /mnt 

Remove testuser and clean up everything 
 --> userdel -r testuser 

Change to the /var/log/sa directory 
 --> cd /var/log/sa 

Open file and start in insert mode 
 --> vim +startinsert file.txt 

Delete a file called 'db.sqlite3' in the current directory 
 --> rm db.sqlite3 

Pause for 3 hours 
 --> sleep 10800 

Remove mobile_dev group 
 --> groupdel mobile_dev 

Add Linux_users group 
 --> groupadd Linux_users 

Create a file called 'future.txt' and set its timestamp to next month 
 --> touch -d 'next month' future.txt 

Make vfat system on USB stick /dev/sdi2 
 --> mkfs.vfat /dev/sdi2 

Use bzip2 to shrink the doc.doc file 
 --> bzip2 doc.doc 

Attach the filesystem of /dev/sdc1 to /mnt/usb 
 --> mount /dev/sdc1 /mnt/usb 

Disable docker_runner's login password 
 --> passwd -l docker_runner 

Pause for 8.8 seconds 
 --> sleep 8.8 

Display all system information except kernel name and network node hostname 
 --> uname -arvm 

Unblock api_user 
 --> passwd -u api_user 

List all TCP sockets in the LISTEN state 
 --> ss -t state listen 

Print partition table of /dev/sdb non-interactively 
 --> parted -s /dev/sdb print 

Restrict login via password for edge_admin 
 --> passwd -l edge_admin 

Run mtr to yahoo.com and use UDP protocol 
 --> mtr --udp yahoo.com 

Delete user guest 
 --> sudo userdel guest 

Remove spaces from end of lines 
 --> sed 's/ *$//' file.txt 

Disable ARP on ens33 
 --> sudo ifconfig ens33 -arp 

Find previous npm commands 
 --> history | grep npm 

Kill all processes matching pattern 'python' 
 --> killall -r 'python.*' 

Zip the videos directory 
 --> zip -r videos.zip videos 

Block password login for xavier 
 --> passwd -l xavier 

Ping amazon.com with 5 second timeout and 131 times 
 --> ping -W 5 -c 131 amazon.com 

Create a file called 'America' in your home 
 --> touch ~/America 

Run a command with default niceness (+10) 
 --> nice -n 10 mycommand 

Check cups printing service status 
 --> service cups status 

Temporarily prevent linuxuser from logging in 
 --> passwd -l linuxuser 

Run top and show all available columns 
 --> top -w512 

Query A record for google.com and display authority section 
 --> dig google.com +noall +authority 

Assign IP 192.168.1.50 and disable allmulti on eth8 
 --> sudo ifconfig eth8 192.168.1.50 -allmulti 

Run mtr to amazon.com with 300 cycles, interval 2s, and output in split format 
 --> mtr --split -c 300 -i 2 amazon.com 

Compress yourfile.txt 
 --> gzip yourfile.txt 

Give me a detailed list of files in my home directory 
 --> ls -l ~ 

Display disk usage for all files and directories, using block size of 2G 
 --> du -B 2G 

Remove julia from the docker group 
 --> gpasswd -d julia docker 

Update password for linuxuser 
 --> passwd linuxuser 

Open vim with custom encoding 
 --> vim +'set fileencoding=utf-8' file.txt 

Copy all .conf files in /srv to /backup 
 --> find /srv -type f -name "*.conf" -exec cp {} /backup/ \; 

Make request and show help 
 --> curl --help 

Display memory usage in gigabytes with total 
 --> free -g -t 

List jobs in daily cron directory 
 --> ls /etc/cron.daily/ 

Access sandbox account 
 --> su sandbox 

Query the A record for yahoo.com and display output in lowercase and color 
 --> host yahoo.com | tr '[:upper:]' '[:lower:]' | lolcat 

Pipeline to tar extraction 
 --> cat archive.tar.gz | tar xz 

Switch to operator account 
 --> su operator 

Show entries where rsync was used 
 --> history | grep rsync 

List root user's crontab 
 --> sudo crontab -l 

Delete java_team group 
 --> groupdel java_team 

Temporarily disable password login for root 
 --> passwd -l root 

Copy a file 'test.log' to /var/log and prompt before overwrite 
 --> cp -i test.log /var/log/ 

Show inode usage for all filesystems 
 --> df -i 

Disable ARP on an interface 
 --> sudo ifconfig eth0 -arp 

Query the A record for google.com and use TCP instead of UDP 
 --> nslookup -vc google.com 

Open fdisk for partitioning 
 --> fdisk /dev/sda 

Reset the access key for sysadmin 
 --> passwd sysadmin 

Create a file called 'backgrounds' in your home 
 --> touch ~/backgrounds 

Display help for the free command 
 --> free --help 

Find all error log files with digits in /var using regex 
 --> find /var -regex ".*/error_[0-9]+\.log" 

Run top and show only the top 5 memory-consuming processes 
 --> top -b -o %MEM -n 1 | head -n 17 | tail -n 5 

Traceroute to example.com 
 --> traceroute example.com 

Temporarily change environment for a command 
 --> env VAR1=value1 VAR2=value2 some_command 

Display all session variables 
 --> env 

Query the DS record for google.com 
 --> host -t DS google.com 

Connect without agent forwarding 
 --> ssh -a user@hostname 

Display disk usage for all files and directories, using block size of 8G 
 --> du -B 8G 

Create a user with login shell /bin/false 
 --> useradd -s /bin/false dummyuser 

Display disk usage with last access time 
 --> du --time=atime 

Edit the crontab file 
 --> sudo crontab -e 

Make a GET request and save with original filename 
 --> curl -O http://example.com/file.zip 

Unmount system files from /proc 
 --> umount /proc 

Query the PTR record for 8.8.8.8 and grep for google 
 --> host -t PTR 8.8.8.8 | grep google 

Print the line number and the line 
 --> awk '{print NR, $0}' file.txt 

Query the SPF record for google.com 
 --> host -t SPF google.com 

Find all matches of 'def' in Python files 
 --> grep 'def' *.py 

Reset shell password for docker_runner 
 --> passwd docker_runner 

Alias to checkout a Git branch 
 --> alias gco='git checkout' 

Perform health check on multiple endpoints 
 --> curl -f -s -o /dev/null -w '%{http_code} %{url_effective}\n' http://api1.example.com/health http://api2.example.com/health 

Query A record for google.com and set +all 
 --> dig google.com +all 

Export shell history to a file 
 --> history > history.txt 

Ping amazon.com with 128 byte packets and 9 times 
 --> ping -s 128 -c 9 amazon.com 

Delete a file called 'syslog' in /var/log 
 --> rm /var/log/syslog 

Run mtr to github.com and set maximum TTL to 255 
 --> mtr -m 255 github.com 

Access logs_viewer account 
 --> su logs_viewer 

Create an xfs file system on /dev/sdc1 
 --> mkfs.xfs /dev/sdc1 

Enable fail2ban service 
 --> systemctl enable fail2ban 

Recursively copy the /mnt directory to /backup/mnt 
 --> cp -r /mnt /backup/mnt/ 

Sync files and specify a custom daemon incoming chmod 
 --> rsync -avz --daemon --incoming-chmod=Du=rwx,go=rx,Fu=rw,go=r source_dir/ destination_dir/ 

Check if line starts with a digit 
 --> awk '/^[0-9]/' file.txt 

List all sockets with summary statistics 
 --> ss -s 

Open file and set autoindent 
 --> vim -c 'set autoindent' file.txt 

Download a file and disable following FTP links from HTML 
 --> wget --no-follow-ftp http://example.com/ 

Assign user2 ownership of notes.txt 
 --> chown user2 notes.txt 

Compress the image.png using gzip 
 --> gzip image.png 

List all files in my home folder, including hidden ones 
 --> ls -a ~ 

Change the last line to 'End of file' 
 --> sed '$c\End of file' file.txt 

Display all system information except kernel name and kernel release 
 --> uname -a 

Create a new ext4 filesystem on disk /dev/sdf1 
 --> mkfs.ext4 /dev/sdf1 

Add a user mike with home directory /srv/mike 
 --> useradd -m -d /srv/mike mike 

Find commands being run by each user 
 --> w | awk '{print $1, $8}' 

Assign an IP address to an interface 
 --> sudo ifconfig eth0 192.168.1.100 

Change to the /var/log/mail.info directory 
 --> cd /var/log/mail.info 

Add user emily and set her home to /home/emcustom 
 --> useradd -m -d /home/emcustom emily 

Find files in /var/log modified in the last 24 hours 
 --> find /var/log -mtime -1 

Create a file called 'yum.log' in /var/log 
 --> touch /var/log/yum.log 

Display memory usage in megabytes, update every 10 seconds indefinitely 
 --> free -m -s 10 

Rename 'samba.log' to 'samba.log.old' in /var/log/samba 
 --> mv /var/log/samba/samba.log /var/log/samba/samba.log.old 

Mount readonly partition /dev/sdz1 
 --> mount -o ro /dev/sdz1 /mnt 

Make request with keep-alive 
 --> curl -H 'Connection: keep-alive' http://example.com 

Query A record for google.com and show TTLs 
 --> dig google.com +ttlid 

Query the CNAME record for www.github.com 
 --> nslookup -query=CNAME www.github.com 

List all sockets and filter for TIME-WAIT state 
 --> ss state time-wait 

Purge nginx 
 --> sudo apt purge nginx 

Move all .jpg files from Pictures to Desktop 
 --> mv ~/Pictures/*.jpg ~/Desktop/ 

Assign permission 750 to deploy.sh 
 --> chmod 750 deploy.sh 

Print first field in uppercase 
 --> awk '{print toupper($1)}' file.txt 

Delete specific command from history file 
 --> history -d 75 

Locate files with .bak extension 
 --> locate '*.bak' 

Create a directory called 'cache' in /var 
 --> mkdir /var/cache 

Display top CPU consuming processes 
 --> watch 'ps aux --sort=-%cpu | head' 

Make a DELETE request 
 --> curl -X DELETE http://example.com/api/resource/123 

Make terminal display empty 
 --> clear 

Start stress test in background 
 --> nohup stress --cpu 2 --timeout 60 & 

Display disk usage summary for each subdirectory in /var/log 
 --> du -h --max-depth=1 /var/log 

Move all files in /var/log/wtmp to /backup/wtmp 
 --> mv /var/log/wtmp/* /backup/wtmp/ 

Become staging account 
 --> su staging 

Create a zip from the notebook.ipynb 
 --> zip notebook.zip notebook.ipynb 

Use gzip on log_2020.log 
 --> gzip log_2020.log 

Rename training_batch_1 to batch1_training 
 --> groupmod -n batch1_training training_batch_1 

Display memory usage in terabytes 
 --> free --tera 

Remove old data from the shell window 
 --> clear 

Kill all Xorg processes 
 --> killall Xorg 

Copy all files in the current directory to /tmp and keep everything and show progress 
 --> cp -a -v * /tmp/ 

Remove group testers 
 --> sudo groupdel testers 

Copy a file 'Xorg.failsafe.log' to /var/log 
 --> cp Xorg.failsafe.log /var/log/ 

Assign events team to plan.md 
 --> chgrp events plan.md 

Initialize a new NTFS partition on /dev/sde1 
 --> mkfs.ntfs /dev/sde1 

Set ownership of /etc/hosts to user alex 
 --> chown alex /etc/hosts 

Query PTR record for 8.8.8.8 with +short output 
 --> dig -x 8.8.8.8 +short 

Run R script detached from terminal 
 --> nohup Rscript analysis.R & 

Log in as user alice 
 --> su alice 

Unblock the test_user account 
 --> passwd -u test_user 

Run job with highest niceness 
 --> nice -n 20 script.sh 

Enable promiscuous mode on ens33 
 --> sudo ifconfig ens33 promisc 

List all sockets and filter for LAST-ACK state 
 --> ss state last-ack 

Display memory usage in human-readable format with wide output and total, update every 4 seconds, 4 times 
 --> free -h -w -t -s 4 -c 4 

Open file and enable wildmenu 
 --> vim -c 'set wildmenu' file.txt 

Print all partition tables with fdisk 
 --> fdisk -l 

Move all files in the current directory to /tmp and keep all attributes 
 --> mv --preserve=all * /tmp/ 

Monitor system clock 
 --> watch date 

Move all files in /var/log/ufw to /backup/ufw 
 --> mv /var/log/ufw/* /backup/ufw/ 

Suppress raw-control-chars 
 --> less -r file.txt 

Search for requirements.txt 
 --> locate requirements.txt 

Zip data directory recursively 
 --> zip -r data.zip data 

Display memory usage in gigabytes, no buffers/cache line 
 --> free -g -o 

Alias shutdown command 
 --> alias poweroff='sudo shutdown -h now' 

Ping facebook.com and set TTL to 10 
 --> ping -t 10 facebook.com 

Run mtr to 8.8.8.8 and show output in CSV format with 20 cycles 
 --> mtr --csv -c 20 8.8.8.8 

Transfer from remote to local using SCP 
 --> scp user@hostname:/remote/file.txt /local/path/ 

Create a directory called '2025' inside /srv/www 
 --> mkdir /srv/www/2025 

Rename group qa to qa_engineers 
 --> groupmod -n qa_engineers qa 

Track /var usage 
 --> watch 'du -sh /var/*' 

Delete an empty directory called 'lib' in /usr/local 
 --> rmdir /usr/local/lib 

Find video files 
 --> locate '*.mkv' 

Include katie in dev_team group 
 --> gpasswd -a katie dev_team 

Kill all ffmpeg processes 
 --> killall ffmpeg 

Open parted interface for /dev/sdk 
 --> parted /dev/sdk 

Run mtr to example.com with 25 cycles in report mode 
 --> mtr -r -c 25 example.com 

Show last entries of dstat 
 --> dstat 1 5 | tail 

Deny all incoming traffic 
 --> sudo ufw default deny incoming 

Make request using Digest authentication 
 --> curl --digest -u username:password http://example.com 

Change to a directory called 'test' in the current directory 
 --> cd test 

Schedule job at 11:30 PM daily 
 --> crontab -e # 30 23 * * * /path/to/script.sh 

Launch a ping and let it keep running 
 --> nohup ping 8.8.8.8 > ping.log 2>&1 & 

Add ravi to backend group 
 --> gpasswd -a ravi backend 

Query the DS record for yahoo.com 
 --> host -t DS yahoo.com 

Query A record for google.com and set +recurse 
 --> dig google.com +recurse 

Redirect output to file 
 --> echo "Hello" > file.txt 

Copy all files in /var/log/pm-powersave to /backup/pm-powersave 
 --> cp /var/log/pm-powersave/* /backup/pm-powersave/ 

Enable swap file 
 --> sudo swapon /swapfile 

Run htop and display swap meters only 
 --> htop --only-swap 

Monitor memory usage with free 
 --> watch free -h 

Modify the password of user sam 
 --> passwd sam 

Sleep for 77 seconds 
 --> sleep 77 

Clear up the screen space 
 --> clear 

Show me the files in ~, sorted by last access time, with oldest first 
 --> ls -ltur ~ 

Rename user yuki to yuki23 
 --> usermod -l yuki23 yuki 

Remove analytics_group 
 --> groupdel analytics_group 

Copy all files in the current directory to /tmp and keep everything and keep everything 
 --> cp -a -a * /tmp/ 

Gzip archive.zip 
 --> gzip archive.zip 

Find all cron-related processes 
 --> ps aux | grep cron 

Compress largefile.iso with bzip2 
 --> bzip2 largefile.iso 

Gzip python_code.py 
 --> gzip python_code.py 

Erase scrollback content 
 --> clear 

Build ext4 fs on /dev/sdd7 
 --> mkfs.ext4 /dev/sdd7 

Open with XSS safe handling 
 --> less -R file.txt 

Query the DNSKEY record for github.com 
 --> nslookup -type=DNSKEY github.com 

Start shell with VAR1=value1 and no other env 
 --> env -i VAR1=value1 bash 

Sync files with a bandwidth limit (1MB/s) 
 --> rsync -avz --bwlimit=1000 source_dir/ destination_dir/ 

Query the TXT record for example.com 
 --> host -t TXT example.com 

Copy all files in the current directory to /tmp and keep everything and prompt before overwrite 
 --> cp -ai * /tmp/ 

Create a directory called 'America' in your home 
 --> mkdir ~/America 

Create a file called 'kern.log' in /var/log 
 --> touch /var/log/kern.log 

Run mtr to yahoo.com and set maximum TTL to 5 
 --> mtr -m 5 yahoo.com 

Execute top and persist after logout 
 --> nohup top & 

Download and extract response headers only 
 --> curl -D headers.txt -o /dev/null -s http://example.com 

Query the A record for yahoo.com and display output in color 
 --> host yahoo.com | lolcat 

Start tmux session with shell script 
 --> tmux new -s backup './backup.sh' 

Make a POST request with JSON data 
 --> curl -X POST -H 'Content-Type: application/json' -d '{"key":"value"}' http://example.com/api 

Sync files and specify a custom compression level 
 --> rsync -avz --compress-level=9 source_dir/ destination_dir/ 

Ping yahoo.com 50 times with 1 second interval 
 --> ping -c 50 -i 1 yahoo.com 

Run atop and show only userland threads 
 --> atop -U 

Compress model.pkl using bzip2 
 --> bzip2 model.pkl 

Ping facebook.com with 1 second timeout and 103 times 
 --> ping -W 1 -c 103 facebook.com 

Find shell scripts with 'bash' header 
 --> grep '^#!/bin/bash' *.sh 

Start Python REPL with screen 
 --> screen -S repl python3 

Change to the /usr/lib directory 
 --> cd /usr/lib 

Mount ISO with offset 
 --> mount -o loop,offset=512 file.iso /mnt/iso 

Ping google.com with 1 second timeout and 63 times 
 --> ping -W 1 -c 63 google.com 

Print idle users only 
 --> w | awk '$5 ~ /[0-9]+/ {print $1}' 

Show detailed information about a specific device 
 --> nmcli device show eth0 

Display partitions on disk /dev/sdb 
 --> fdisk -l /dev/sdb 

Sleep 0.4 seconds 
 --> sleep 0.4 

Create a file called 'no_create.txt' only if it exists 
 --> touch -c no_create.txt 

Show all connections with numeric user IDs 
 --> netstat --numeric-users 

Query A record for google.com and set +fail 
 --> dig google.com +fail 

Run weather fetch every morning 
 --> crontab -e # 30 7 * * * /get_weather.sh 

Delete all files in /home/user/Downloads 
 --> rm /home/user/Downloads/* 

Switch to finance account 
 --> su finance 

Display disk usage in apparent size 
 --> du --apparent-size 

Print current environment snapshot 
 --> env 

Add a WireGuard connection 
 --> nmcli connection add type wireguard con-name MyWireGuard ifname wg0 ipv4.method manual ipv4.addresses 10.0.0.2/24 

List active connections 
 --> nmcli connection show --active 

Force dependencies 
 --> sudo dpkg -i --force-depends package.deb 

Delete shiva from users 
 --> userdel shiva 

Add user testagent and assign bash shell 
 --> useradd -s /bin/bash testagent 

Change graphics_team to visual_team 
 --> groupmod -n visual_team graphics_team 

Reload the ssh configuration 
 --> service ssh reload 

Ping google.com with 0.2 second interval and 20 packets 
 --> ping -i 0.2 -c 20 google.com 

Reload tmux configuration 
 --> tmux source-file ~/.tmux.conf 

Delete rootclone 
 --> userdel rootclone 

Run atop and show only the top 5 disk-consuming processes 
 --> atop | grep DSK | head -n 5 

Move 'resume.pdf' to your home directory 
 --> mv resume.pdf ~/ 

Display disk usage for all files in /etc up to depth 2 
 --> du -a --max-depth=2 /etc 

Change prefix key in tmux config 
 --> set-option -g prefix C-a 

Count how many are idle 
 --> w | awk '$5 ~ /[0-9]+/ {print $1}' | wc -l 

Insert a line before line 2 
 --> sed '2i\Inserted line' file.txt 

List environment variables in CI pipeline 
 --> env 

Create a directory called 'public_html' in your home 
 --> mkdir ~/public_html 

Reattach to named session 'ml' 
 --> tmux attach -t ml 

Rename 'btmp' to 'btmp.old' in /var/log 
 --> mv /var/log/btmp /var/log/btmp.old 

Show all environment variables 
 --> env 

Force new conffile 
 --> sudo dpkg -i --force-confnew package.deb 

Add type indicators (like / for directories) to the file list 
 --> ls -F 

Move all files in the current directory to /tmp and keep xattr 
 --> mv --preserve=xattr * /tmp/ 

Lock the account for testapi 
 --> usermod -L testapi 

Check load average visually 
 --> watch cat /proc/loadavg 

Query SOA record for google.com 
 --> dig google.com SOA 

Check if NetworkManager is active 
 --> service NetworkManager status 

Clean previous outputs in console 
 --> clear 

Install build-essential 
 --> sudo apt install build-essential 

Traceroute to example.com using UDP port 53 
 --> traceroute -U example.com 

Show disk usage for filesystems of type ext4 
 --> df -t ext4 

Copy a file 'fail2ban.log' to /var/log 
 --> cp fail2ban.log /var/log/ 

Show all connections with user IDs 
 --> netstat -e 

Traceroute to yahoo.com using interface wlan0 and max TTL 25 
 --> traceroute -i wlan0 -m 25 yahoo.com 

Count how many terminals in use 
 --> who | awk '{print $2}' | sort | uniq | wc -l 

List who is using tty8 
 --> who | grep tty8 

Reset terminal to blank state 
 --> clear 

Open partition table for disk /dev/sda 
 --> fdisk /dev/sda 

Copy a file 'testfile' to /srv/www and prompt before overwrite 
 --> cp -i testfile /srv/www/ 

Create a directory called 'private' in your home 
 --> mkdir ~/private 

Change user neil's shell to nologin 
 --> usermod -s /usr/sbin/nologin neil 

List all sockets and filter for LISTEN state 
 --> ss state listen 

Kill by elapsed time >1h 
 --> ps -eo pid,etimes,comm | awk '$2>3600{print $1}'| xargs kill 

Replace all 'foo' with 'bar' in-place 
 --> sed -i 's/foo/bar/g' file.txt 

Create mentors group 
 --> groupadd mentors 

Sleep for 11 minutes 
 --> sleep 660 

Display memory usage in bytes, update every 5 seconds, 5 times 
 --> free -b -s 5 -c 5 

Remove emma from devtools group 
 --> gpasswd -d emma devtools 

Remove all shell display content 
 --> clear 

Create a swap partition on /dev/sdg 
 --> parted /dev/sdg mkpart primary linux-swap 2GiB 4GiB 

Show only UDP connections 
 --> netstat -u 

Remove all files in /var/log/unattended-upgrades 
 --> rm /var/log/unattended-upgrades/* 

Kill processes using older than given age 
 --> killall -o nginx 

Query SRV record for _sip._tcp.google.com 
 --> dig _sip._tcp.google.com SRV 

Query the A record for google.com and display the command used 
 --> echo 'host google.com'; host google.com 

Add test.txt to myarchive.zip 
 --> zip myarchive.zip test.txt 

Change to the /var/log/messages directory 
 --> cd /var/log/messages 

Remove devtest2 from the system 
 --> userdel devtest2 

Delete a file called 'messages' in /var/log 
 --> rm /var/log/messages 

Remove all access from others to archive.tar.gz 
 --> chmod o= archive.tar.gz 

Run mtr to github.com and set the number of pings per hop to 16 
 --> mtr -c 16 github.com 

Display processor type and operating system 
 --> uname -po 

Change to the directory /etc/cron.d 
 --> cd /etc/cron.d 

Add a connection with a specific IPv4 DHCP required options 
 --> nmcli connection add type ethernet con-name "My Ethernet" ifname eth0 ipv4.dhcp-required-options "1 3 6 15" 

Alias to archive folder 
 --> alias tarzip='tar -czvf' 

Comment out lines starting with 'option' 
 --> sed '/^option/s/^/#/' file.txt 

Restrict file.log to read-only by owner 
 --> chmod 400 file.log 

Print the last column of each line 
 --> awk '{print $NF}' data.txt 

Add kyle to firmware group 
 --> gpasswd -a kyle firmware 

Change docs.pdf group to editors 
 --> chgrp editors docs.pdf 

Print host IPs 
 --> echo "$(hostname -I)" 

Stop the ufw firewall service 
 --> systemctl stop ufw 

Create a file called 'log.txt' and set its timestamp to 11:59 PM today 
 --> touch -t $(date +%Y%m%d)2359 log.txt 

Print current shell environment 
 --> env 

Display all system information except kernel name and operating system 
 --> uname -arvmpi 

Display memory usage with wide output and total 
 --> free -w -t 

Display all system information except kernel name and kernel release 
 --> uname -a 

Assign IP 10.0.2.15 to enp0s3 
 --> sudo ifconfig enp0s3 10.0.2.15 

Monitor memory usage with htop 
 --> watch htop 

After changing to `/var/log`, display your location. 
 --> cd /var/log && pwd 

Update user access for hr_staff 
 --> passwd hr_staff 

Run mtr to github.com and display numeric IP addresses only 
 --> mtr -n github.com 

Include user avni in qa group 
 --> gpasswd -a avni qa 

Rename 'boot.log' to 'boot.log.old' in /var/log 
 --> mv /var/log/boot.log /var/log/boot.log.old 

Re-enable login for firewall_mgr 
 --> passwd -u firewall_mgr 

Run yum update with niceness +5 
 --> sudo nice -n 5 yum update 

Show disk usage for all filesystems, display only the filesystem, type, and used space 
 --> df -h --output=source,fstype,used 

Alias to list hidden files 
 --> alias lh='ls -d .*' 

Change niceness of database processes 
 --> sudo renice +5 -p $(pgrep mysqld) 

Delete spark_team 
 --> groupdel spark_team 

Display disk usage for all files and directories, using block size of 4G 
 --> du -B 4G 

Reset the command line view 
 --> clear 

Show the configuration of interface ens33 
 --> ifconfig ens33 

Display memory usage in kilobytes, wide output 
 --> free -k -w 

Query the SOA record for google.com 
 --> nslookup -query=SOA google.com 

Show help for netstat 
 --> netstat -h 

Run atop and show only processes with high memory usage 
 --> atop | grep MEM 

Check if firewalld is active 
 --> systemctl is-active firewalld 

Query the A record for github.com and display debug information 
 --> nslookup -debug github.com 

Sync files and specify a custom daemon pid file 
 --> rsync -avz --daemon --pid-file=/var/run/rsyncd.pid source_dir/ destination_dir/ 

Search logs for 'error' ignoring case 
 --> grep -i 'error' logs/*.log 

Create a file called 'linda' in your home 
 --> touch ~/linda 

Change user xavier's shell to /sbin/nologin 
 --> usermod -s /sbin/nologin xavier 

Delete a file called 'mail.log' in /var/log 
 --> rm /var/log/mail.log 

List the last 5 commands 
 --> history | tail -n 5 

Add a delay of 9 seconds 
 --> sleep 9 

Edit system-wide cron jobs 
 --> sudo nano /etc/crontab 

Download a file and bypass proxy 
 --> wget -e use_proxy=no http://example.com/file.zip 

Ping 1.1.1.1 with 2 second timeout and 85 times 
 --> ping -W 2 -c 85 1.1.1.1 

Make web group owner of index.html 
 --> chgrp web index.html 

Login to root shell 
 --> su - 

Compress report.xlsx using bzip2 
 --> bzip2 report.xlsx 

Add hannah to research group 
 --> gpasswd -a hannah research 

Stop smbd service 
 --> systemctl stop smbd 

Assign social group to announcement.doc 
 --> chgrp social announcement.doc 

Create system user servicebot with custom home 
 --> useradd -r -m -d /opt/servicebot servicebot 

Move all files in /var/log/zypper.log to /backup/zypper 
 --> mv /var/log/zypper.log/* /backup/zypper/ 

Run mtr to amazon.com with 300 cycles in report mode 
 --> mtr -r -c 300 amazon.com 

Print date and message from log file 
 --> awk '{print $1, $5}' log.txt 

Gzip the file named demo 
 --> gzip demo 

Set translators group to translation.txt 
 --> chgrp translators translation.txt 

What files are in /var/spool? Show me all of them. 
 --> ls -a /var/spool 

Change to the directory /usr/share/zoneinfo/America 
 --> cd /usr/share/zoneinfo/America 

Copy all .log files from /var/log to /backup/logs 
 --> cp /var/log/*.log /backup/logs/ 

Download a file using passive FTP 
 --> wget --ftp-pasv ftp://example.com/file.zip 

Set shell of sde1 to /bin/zsh 
 --> usermod -s /bin/zsh sde1 

Find system logs 
 --> locate syslog 

Query the A record for example.com using DNS server 9.9.9.9 
 --> nslookup example.com 9.9.9.9 

Connect with keep-alive messages 
 --> ssh -o ServerAliveInterval=60 user@hostname 

Ping google.com with 1 second timeout and 123 times 
 --> ping -W 1 -c 123 google.com 

Traceroute to github.com with AS lookups enabled 
 --> traceroute -A github.com 

Show all interfaces with their status (ALLMULTI) 
 --> ifconfig -a | grep ALLMULTI 

Delete two empty directories called 'logs' and 'tmp' at the same time 
 --> rmdir logs tmp 

Add elena to logreaders group 
 --> gpasswd -a elena logreaders 

Download a file and mirror a website with no verbose 
 --> wget --mirror --no-verbose http://example.com/ 

Mount ISO to /mnt/cdrom with loopback 
 --> mount -o loop /home/user/image.iso /mnt/cdrom 

Show logs for the last 24 hours 
 --> journalctl --since '24 hours ago' 

Re-enable login for support_staff 
 --> passwd -u support_staff 

Stop the docker service 
 --> service docker stop 

Print info of all storage partitions 
 --> blkid 

Clone a connection 
 --> nmcli connection clone "My Connection" "My Connection Clone" 

Display kernel release and version 
 --> uname -rv 

Ping github.com with 6 second timeout and 93 times 
 --> ping -W 6 -c 93 github.com 

Query the A record for yahoo.com and display output with both timestamp and color 
 --> date; host yahoo.com | lolcat 

View w command usage 
 --> w 

Assign karen to audit group 
 --> gpasswd -a karen audit 

Add networking group 
 --> groupadd networking 

Display memory usage in kilobytes, update every 10 seconds indefinitely 
 --> free -k -s 10 

Run mtr to google.com with TCP, 200 cycles, interval 0.25s, and output in JSON format 
 --> mtr --tcp --json -c 200 -i 0.25 google.com 

Display disk usage for all files in /etc up to depth 1 
 --> du -a --max-depth=1 /etc 

Clear tmux scrollback history 
 --> tmux clear-history 

Create group management 
 --> groupadd management 

Make vikas the new owner of temp files 
 --> chown vikas temp/* 

Bring up interface enp0s3 
 --> sudo ifconfig enp0s3 up 

Connect to a hidden WiFi network 
 --> nmcli device wifi connect MyHiddenNetwork password "mypassword" hidden yes 

View blkid info of /dev/sdd4 
 --> blkid /dev/sdd4 

Add a VPN connection (L2TP) 
 --> nmcli connection add type vpn con-name MyL2TP vpn-type l2tp ifname eth0 vpn.data "gateway=vpn.example.com,user=myuser" 

Check PATH variable and others 
 --> env 

Monitor tail of bzipped file 
 --> bzcat file.bz2 | tail -f 

Remove a hidden empty directory called '.config' in your home 
 --> rmdir ~/.config 

Add an InfiniBand connection 
 --> nmcli connection add type infiniband con-name MyIB ifname ib0 

Show disk usage for all filesystems, sorted by available space 
 --> df -h | sort -k 4 -h 

Delete an empty directory called 'backup_2025' in /var/backups 
 --> rmdir /var/backups/backup_2025 

Display all system information except kernel release 
 --> uname -asvmoipn 

Change the group content_creators to media_team 
 --> groupmod -n media_team content_creators 

Run htop and show only processes with PPID 1 
 --> htop | awk '$5 == 1' 

Show kernel messages with color auto 
 --> dmesg --color=auto 

Wait for 250 seconds 
 --> sleep 250 

Update and show upgradable 
 --> sudo apt update && apt list --upgradable 

Change to the directory /usr/local/opt 
 --> cd /usr/local/opt 

Sleep between retries 
 --> sleep 5 

Trim leading whitespace 
 --> sed 's/^[ 	]*//' file.txt 

Remove all files in /var/log/wtmp 
 --> rm /var/log/wtmp/* 

Ping github.com with 4 second timeout and 129 times 
 --> ping -W 4 -c 129 github.com 

Activate a connection 
 --> nmcli connection up "My Connection" 

Create a file called 'no_create.txt' only if it exists, do not create new 
 --> touch -c no_create.txt 

Move all files in the current directory to /tmp and show progress 
 --> mv -v * /tmp/ 

Add maya to research_team group 
 --> gpasswd -a maya research_team 

Unlock login for cloud_user 
 --> passwd -u cloud_user 

Change GID of user george to 2000 
 --> usermod -g 2000 george 

Make a zip from random folder 
 --> zip -r random.zip random 

Generate SSH key pair (RSA) 
 --> ssh-keygen -t rsa -b 4096 

Create an ISO image from CD-ROM 
 --> dd if=/dev/cdrom of=cd_image.iso bs=2048 

Run top and show absolute path for command column 
 --> top -c 

Get partition type of /dev/sdb2 
 --> blkid /dev/sdb2 

Assign developer as owner of main.cpp 
 --> chown developer main.cpp 

Remove a secondary IP from an interface (alias) 
 --> sudo ifconfig eth0:1 down 

Traceroute to 8.8.8.8 using only IPv6 addresses 
 --> traceroute -6 8.8.8.8 

Test a script with LOG_LEVEL=debug 
 --> env LOG_LEVEL=debug ./test.sh 

Flush DNS cache 
 --> sudo systemd-resolve --flush-caches 

Switch to apache user 
 --> su apache 

Show last lines of tar listing 
 --> tar tzf archive.tar.gz | tail 

Show all connections for a specific protocol (e.g., udp) 
 --> netstat -p udp 

Delete an empty directory called 'test_logs' in the current directory 
 --> rmdir test_logs 

Send SIGWINCH to PID 4445 
 --> kill -WINCH 4445 

Copy all files in /var/log/mail.info to /backup/mailinfo 
 --> cp /var/log/mail.info/* /backup/mailinfo/ 

Execute echo with HELLO=world 
 --> env HELLO=world echo $HELLO 

Show kernel messages related to device sda 
 --> dmesg | grep -i sda 

Unmount squashfs mounted image 
 --> umount /mnt/squash 

Traceroute to example.com using TCP SYN packets 
 --> traceroute -T example.com 

Use bzip2 for api.txt 
 --> bzip2 api.txt 

List UUIDs of all block devices 
 --> blkid 

Traceroute to example.com with debugging enabled 
 --> traceroute -d example.com 

Ping 1.1.1.1 with 1000 byte packets and 8 times 
 --> ping -s 1000 -c 8 1.1.1.1 

Watch for new kernel messages 
 --> watch dmesg | tail 

Kill processes named cat ignoring case 
 --> killall -i cat 

Run server.js using node in background 
 --> nohup node server.js & 

Remove using wildcard 
 --> sudo dpkg -r 'mysql*' 

Copy all files in /var/log/mail.warn to /backup/mailwarn 
 --> cp /var/log/mail.warn/* /backup/mailwarn/ 

Rename 'lastlog' to 'lastlog.old' in /var/log 
 --> mv /var/log/lastlog /var/log/lastlog.old 

Gzip the file that stores feedback.txt 
 --> gzip feedback.txt 

List all sockets and filter for ESTABLISHED state 
 --> ss state established 

Prevent login for docker_admin 
 --> passwd -l docker_admin 

Change to the parent directory and list its contents 
 --> cd .. && ls 

Query the MX record for example.com and display only mail servers 
 --> host -t MX example.com | awk '{print $7}' 

Open interactive fdisk session for /dev/vda 
 --> fdisk /dev/vda 

List all established ssh connections 
 --> ss -o state established '( dport = :ssh or sport = :ssh )' 

Check for root user entry 
 --> grep '^root:' /etc/passwd 

Alias to show Git branches 
 --> alias gb='git branch' 

Repeat command starting with ssh 
 --> !ssh 

Find all .jpg files (case-insensitive) in current directory and subdirectories 
 --> find . -iname "*.jpg" 

Print only the lines containing the word 'error' 
 --> awk '/error/' log.txt 

Restrict password login for account manager 
 --> passwd -l manager 

Query the MX record for google.com 
 --> host -t MX google.com 

Traceroute to example.com using only IPv4 addresses 
 --> traceroute -4 example.com 

Remove an empty directory called 'cron' in /var/spool 
 --> rmdir /var/spool/cron 

Query A record for google.com with TCP 
 --> dig google.com +tcp 

Change niceness of Xorg process 
 --> sudo renice +5 -p $(pgrep Xorg) 

Sync files and specify a custom daemon hosts allow 
 --> rsync -avz --daemon --hosts-allow=192.168.1.0/24 source_dir/ destination_dir/ 

Gzip the JavaScript file main.js 
 --> gzip main.js 

Restrict login via password for ops_user 
 --> passwd -l ops_user 

Alias to show CPU info 
 --> alias cpuinfo='lscpu' 

Create a group called staging_team 
 --> groupadd staging_team 

Send Ctrl+C to pane 
 --> tmux send-keys -t dev C-c 

Add all permissions to user only 
 --> chmod u+rwx file1 

Query A record for yahoo.com 
 --> dig yahoo.com 

List active tmux clients 
 --> tmux list-clients 

Unmount using the device path 
 --> umount /dev/sdc1 

Disable WiFi radio 
 --> nmcli radio wifi off 

Show kernel messages from a specific facility 
 --> dmesg --facility=daemon 

Add user leon to analytics group 
 --> gpasswd -a leon analytics 

Show only the dropped packets for eth0 
 --> ifconfig eth0 | grep dropped 

Allow login for pm_lead 
 --> passwd -u pm_lead 

Display memory usage in kilobytes 
 --> free -k 

Set guest group to welcome_note.txt 
 --> chgrp guest welcome_note.txt 

Display kernel name, processor type, and hardware platform 
 --> uname -spi 

Unmount a test ISO file 
 --> umount /mnt/testiso 

Remove all cron jobs for a user 
 --> crontab -r -u username 

Rename 'yum.log' to 'yum.log.old' in /var/log 
 --> mv /var/log/yum.log /var/log/yum.log.old 

Continuously check disk space every 2 seconds 
 --> watch -n 2 df -h 

Add app_reviewers group 
 --> groupadd app_reviewers 

Run atop and show only processes with priority 20 
 --> atop | awk '$17 == 20' 

Query A record for google.com and set +nssearch 
 --> dig google.com +nssearch 

Apply bzip2 to the spreadsheet.xls file 
 --> bzip2 spreadsheet.xls 

Display disk usage in human-readable format 
 --> du -h 

Show the configuration for interface enp0s3 
 --> ifconfig enp0s3 

Partition disk /dev/sdr using fdisk 
 --> fdisk /dev/sdr 

Show when each command was run 
 --> HISTTIMEFORMAT="%d/%m/%y %T " history 

Compare each file in /tmp to /tmp/compare.txt 
 --> find /tmp -type f -exec diff {} /tmp/compare.txt \; 

Query A record for google.com and set query class HS 
 --> dig google.com HS 

Remove all files in /var/log/maillog 
 --> rm /var/log/maillog/* 

Change to the /var/log/postgresql directory 
 --> cd /var/log/postgresql 

Traceroute to github.com using only IPv4 and max TTL 40 
 --> traceroute -4 -m 40 github.com 

List all UDP sockets in the UNCONN state 
 --> ss -u state unconn 

Sync files and keep partially transferred files 
 --> rsync -avz --partial source_dir/ destination_dir/ 

Move all files in /var/log/apache2 to /backup/apache2 
 --> mv /var/log/apache2/* /backup/apache2/ 

Get login terminals sorted 
 --> who | awk '{print $2}' | sort 

Check partition info for /dev/sdi 
 --> blkid /dev/sdi 

Switch to apache user 
 --> su apache 

Login as user arya 
 --> su arya 

Recursively copy the entire /etc directory to /backup/etc 
 --> cp -r /etc /backup/etc/ 

Clean terminal before screen recording 
 --> clear 

Traceroute to yahoo.com using UDPLITE protocol 
 --> traceroute -UL yahoo.com 

Show interface statistics with extended information 
 --> netstat -ie 

Copy all files in the current directory to /tmp and keep everything and keep permissions 
 --> cp -a -p * /tmp/ 

Add a connection with a specific IPv4 DHCP hostname flags 
 --> nmcli connection add type ethernet con-name "My Ethernet" ifname eth0 ipv4.dhcp-hostname-flags "fqdn" 

Start mysql service now 
 --> systemctl start mysql 

Rename security_team to infosec_team 
 --> groupmod -n infosec_team security_team 

Query the TXT record for github.com and use short output 
 --> host -t TXT github.com | awk -F'"' '{print $2}' 

Mount an external drive 
 --> sudo mount /dev/sdb1 /mnt 

Delete unusedaccount 
 --> userdel unusedaccount 

Display all system information except kernel name and processor type 
 --> uname -arv 

Create a file called 'ref.txt' and set its timestamp to match 'source.txt' 
 --> touch -r source.txt ref.txt 

Mount remote directory over sshfs 
 --> sshfs user@host:/remote /mnt/remote 

Run htop and sort by CPU usage 
 --> htop --sort-key=CPU% 

Run Gradle build with niceness +6 
 --> nice -n 6 gradle build 

View logs from screen session 
 --> less screenlog.0 

Change niceness of root session processes 
 --> sudo renice +5 -u root 

Add jackie to documentation group 
 --> gpasswd -a jackie documentation 

Clean console before running script 
 --> clear 

Query A record for google.com with recursion desired 
 --> dig google.com +rd 

Temporarily lock sam's password 
 --> passwd -l sam 

Traceroute to github.com using interface wlan0 and max TTL 30 
 --> traceroute -i wlan0 -m 30 github.com 

Show me only the directories in my current location 
 --> ls -d */ 

Gzip the SQL dump dump.sql 
 --> gzip dump.sql 

Unmount overlay filesystem from /mnt/overlay 
 --> umount /mnt/overlay 

Copy file with progress bar 
 --> dd if=source.dat of=dest.dat bs=4M status=progress 

Create a file called 'special.txt' and set its timestamp to 8:00 AM today 
 --> touch -t $(date +%Y%m%d)0800 special.txt 

Display memory usage in gigabytes, update every 8 seconds indefinitely 
 --> free -g -s 8 

Move a file 'archive.tar.gz' to /opt and overwrite without prompt 
 --> mv -f archive.tar.gz /opt/ 

Display memory usage in megabytes with all options, update every 12 seconds, 12 times 
 --> free -m -o -l -w -t -s 12 -c 12 

Run mtr to yahoo.com in report mode with 10 cycles 
 --> mtr -r -c 10 yahoo.com 

Run ls with a fake PATH 
 --> env PATH=/fake/bin ls 

Open file and disable swapfile 
 --> vim -n file.txt 

Change to the directory /etc/profile.d 
 --> cd /etc/profile.d 

Add design_review group 
 --> groupadd design_review 

Become prod_user 
 --> su prod_user 

Add user alex and expire the account on 2025-12-31 
 --> useradd -e 2025-12-31 alex 

Display kernel name, version, and operating system 
 --> uname -svo 

Make an OPTIONS request 
 --> curl -X OPTIONS http://example.com 

Get a summary of all terminal sessions 
 --> w 

Run top and sort by virtual memory size 
 --> top -o VIRT 

Change graphics_team to graphics_ops 
 --> groupmod -n graphics_ops graphics_team 

Run Go app with ENV vars 
 --> env DB_USER=root DB_PASS=secret go run main.go 

Display help for du command 
 --> du --help 

Rename 'messages' to 'messages.old' in /var/log 
 --> mv /var/log/messages /var/log/messages.old 

Get block data for /dev/sdb7 
 --> blkid /dev/sdb7 

Send SIGSEGV to PID 6263 
 --> kill -SEGV 6263 

Show TCP connections and continuously update every second 
 --> netstat -ct 

Display disk usage summary for each subdirectory in /bin 
 --> du -h --max-depth=1 /bin 

Make a zip archive of all files starting with temp 
 --> zip temp_files.zip temp* 

Add a new WiFi connection 
 --> nmcli connection add type wifi con-name "My WiFi" ifname wlan0 ssid MyNetwork 

Remove vue_devs 
 --> groupdel vue_devs 

Display memory usage with old format and total 
 --> free -o -t 

Use screen for persistent command 
 --> screen -S longtask sleep 1000 

Highlight matching 'root' in passwd file 
 --> grep --color=auto 'root' /etc/passwd 

Sleep 0.25 seconds 
 --> sleep 0.25 

Compress the source.cpp file 
 --> gzip source.cpp 

Login as custom user 'builder' 
 --> su builder 

Run mtr to amazon.com and show output in split format 
 --> mtr --split amazon.com 

Delete a directory called 'archive' in /opt 
 --> rm -r /opt/archive 

Sync files and store backups in a separate directory 
 --> rsync -avz --backup --backup-dir=/path/to/backups source_dir/ destination_dir/ 

Make a zip archive from codebase folder 
 --> zip -r codebase.zip codebase 

Form QA_leads group 
 --> groupadd QA_leads 

Change to the directory /usr/share/mime 
 --> cd /usr/share/mime 

Change to the /var/tmp directory 
 --> cd /var/tmp 

Display the shell command history 
 --> history 

Query A record for google.com and set +ttl 
 --> dig google.com +ttl 

Ping facebook.com with 5 second timeout and 31 times 
 --> ping -W 5 -c 31 facebook.com 

Re-enable password login for build_user 
 --> passwd -u build_user 

Traceroute to 8.8.8.8 setting type of service 16 
 --> traceroute -t 16 8.8.8.8 

Ping 1.1.1.1 with 1 second timeout and 5 times 
 --> ping -W 1 -c 5 1.1.1.1 

Synchronize current history with saved file 
 --> history -a && history -r 

Make a request with multiple headers 
 --> curl -H 'Accept: application/json' -H 'User-Agent: MyApp/1.0' http://example.com/api 

Run compile job with niceness +1 
 --> nice -n 1 make -j8 

Show all connections with numeric port numbers 
 --> netstat --numeric-ports 

Sync files and specify a custom daemon config 
 --> rsync -avz --daemon --config=/etc/rsyncd.conf source_dir/ destination_dir/ 

Restart SSH service 
 --> sudo systemctl restart ssh 

Delete a file called 'kern.log' in /var/log 
 --> rm /var/log/kern.log 

Sync files and transform symlinks to their referent files/dirs 
 --> rsync -avzL source_dir/ destination_dir/ 

Show all processes with wide output 
 --> ps auxww 

Traceroute to google.com with IPv6 source address 
 --> traceroute -S 2001:db8::1 google.com 

Get user sessions for current machine 
 --> who 

Make the terminal window blank 
 --> clear 

Display memory usage in megabytes, update every 30 seconds indefinitely 
 --> free -m -s 30 

Copy all .conf files from /etc to /backup/etc 
 --> cp /etc/*.conf /backup/etc/ 

Sync files and modify file permissions 
 --> rsync -avz --chmod=u+rwx,g+rx,o+rx source_dir/ destination_dir/ 

Make a group for designers 
 --> groupadd designers 

Run bash with root privileges 
 --> sudo bash 

Move 'db.sqlite3' to /srv/db 
 --> mv db.sqlite3 /srv/db/ 

Start partition manager on new HDD /dev/sdh 
 --> fdisk /dev/sdh 

Get label of sde6 
 --> blkid /dev/sde6 

Query the A record for github.com using DNS server 4.2.2.2 
 --> host github.com 4.2.2.2 

Run a backup every Sunday at midnight 
 --> crontab -e # 0 0 * * 0 /usr/local/bin/backup.sh 

Transfer file using SCP recursively 
 --> scp -r /local/dir user@hostname:/remote/path/ 

Install curl using sudo 
 --> sudo apt install curl 

List past commands in the current terminal session 
 --> history 

Remove all files in /var/log/auth 
 --> rm /var/log/auth/* 

Search for pdfs in Documents folder 
 --> locate /Documents/*.pdf 

Run mtr to google.com and display both hostnames and IPs 
 --> mtr -b google.com 

Forked command and wait 
 --> (command &) && wait 

Search for the pattern 'error code [0-9]+' in error.log 
 --> grep -E 'error code [0-9]+' error.log 

Give execute permission to the file script.sh 
 --> chmod +x script.sh 

Remove julie including her home folder 
 --> userdel -r julie 

Purge configs only 
 --> sudo apt purge --purge nginx 

Alias to list block devices 
 --> alias blk='lsblk' 

Create a directory called 'man' in your home 
 --> mkdir ~/man 

Print variable value 
 --> echo "$HOME" 

Run job monthly 
 --> crontab -e # @monthly /monthly_job.sh 

Send SIGHUP to PID 1213 
 --> kill -1 1213 

Query the A record for github.com with port 1053 
 --> nslookup -port=1053 github.com 

Create 50MB swap file 
 --> dd if=/dev/zero of=/swapfile bs=1M count=50 

Change to the /var/log/gpu-manager.log directory 
 --> cd /var/log/gpu-manager.log 

Display detailed low and high memory statistics 
 --> free -l 

Show logs from the current boot 
 --> journalctl -b 

Print the number of fields in each line 
 --> awk '{print NF}' file.txt 

Ping google.com with 3 second timeout and 27 times 
 --> ping -W 3 -c 27 google.com 

Run screen for Docker logs 
 --> screen -S dockerlogs docker logs -f mycontainer 

Read from device without output 
 --> dd if=/dev/sda of=/dev/null bs=1M 

Change to the /var/log/kern.log directory 
 --> cd /var/log/kern.log 

Sync files with a specific timeout 
 --> rsync -avz --timeout=60 source_dir/ destination_dir/ 

Configure a point-to-point interface 
 --> sudo ifconfig ppp0 192.168.1.1 pointopoint 192.168.1.2 up 

Save cookies to a file while downloading 
 --> wget --save-cookies cookies.txt http://example.com/file.zip 

List all log files in /var/log, with details and human sizes 
 --> ls -lh /var/log/*.log 

Align partitions optimally on /dev/sdg 
 --> parted /dev/sdg align-check optimal 1 

Download a file and skip SSL verification 
 --> wget --no-check-certificate https://example.com/file.zip 

Temporarily block temp_user 
 --> passwd -l temp_user 

Rename 'mail.err' to 'mail.err.old' in /var/log 
 --> mv /var/log/mail.err /var/log/mail.err.old 

Transfer file using SCP 
 --> scp file.txt user@hostname:/remote/path/ 

Save history to file 
 --> history -w 

List all active screen sessions 
 --> screen -ls 

Transfer file using SCP with progress meter 
 --> scp -p file.txt user@hostname:/remote/path/ 

Get fs type and label from /dev/sdc4 
 --> blkid /dev/sdc4 

Allow only group to execute audit.sh 
 --> chmod 010 audit.sh 

Show the configuration for interface enp0s3 
 --> ifconfig enp0s3 

Alias for javac 
 --> alias jc='javac' 

Create internal_tools group 
 --> groupadd internal_tools 

Show kernel messages with ISO-8601 timestamps 
 --> dmesg --time-format=iso 

Run mtr to 8.8.8.8 and set the number of pings per hop to 50 
 --> mtr -c 50 8.8.8.8 

Display kernel release, version, and hardware platform 
 --> uname -rvi 

Show logged in users sorted by idle time 
 --> w | sort -k5 

Show all connections for a specific program 
 --> sudo netstat -ap | grep firefox 

Display memory usage in gigabytes with old format, update every 20 seconds, 6 times 
 --> free -g -o -s 20 -c 6 

Sleep for 3.7 seconds 
 --> sleep 3.7 

Download a file and specify a certificate file 
 --> wget --ca-certificate=ca.pem https://example.com/file.zip 

Merge binary files 
 --> cat file1.bin file2.bin > combined.bin 

Display disk usage for all files and directories, using block size of 128K 
 --> du -B 128K 

Sync files and remove source files after transfer 
 --> rsync -avz --remove-source-files source_dir/ destination_dir/ 

Delete all files ending with .log in the current directory 
 --> rm *.log 

Traceroute to example.com without resolving IP addresses to hostnames 
 --> traceroute -n example.com 

Make request with HSTS database 
 --> curl --hsts hsts.txt https://example.com 

Display layout on NVMe disk 
 --> parted /dev/nvme0n1 print 

Run gem install with niceness +8 
 --> nice -n 8 gem install rails 

List all listening TCP sockets 
 --> ss -lt 

Run mtr to example.com and set maximum TTL to 10 
 --> mtr -m 10 example.com 

Unblock access to report_user 
 --> passwd -u report_user 

Create a file called 'Asia' in your home 
 --> touch ~/Asia 

Query the A record for google.com and display output in uppercase 
 --> host google.com | tr '[:lower:]' '[:upper:]' 

List all TCP sockets for port 443 
 --> ss -nt sport = :443 

Disable access for linux_dev 
 --> passwd -l linux_dev 

Change niceness of processes using specific TTY 
 --> sudo renice +6 -t pts/1 

Reset dev_admin password 
 --> passwd dev_admin 

Remove a file named 'backup.tar.gz' in the current folder 
 --> rm backup.tar.gz 

Set hr group for attendance.csv 
 --> chgrp hr attendance.csv 

Remove temporary_admin and clean up home 
 --> userdel -r temporary_admin 

Display a detailed list of files without the '.' and '..' entries 
 --> ls -lA 

Show kernel messages related to USB 
 --> dmesg | grep -i usb 

Sync files and specify a custom daemon port 
 --> rsync -avz --port=8730 rsync://user@host/module/path destination_dir/ 

Download a file and mirror a website with debug 
 --> wget --mirror --debug http://example.com/ 

Unmount all filesystems listed in fstab 
 --> umount -a 

Form a group called hr 
 --> groupadd hr 

Create a directory named 'My Files' with spaces in the name 
 --> mkdir 'My Files' 

Change to the /snap directory 
 --> cd /snap 

Switch to deployer 
 --> su deployer 

Compress slide.ppt with bzip2 
 --> bzip2 slide.ppt 

Mount network drive using NFSv4 
 --> mount -t nfs4 192.168.1.15:/export /mnt/nfs 

Create a directory called 'old' in /var/log 
 --> mkdir /var/log/old 

Show all FIN_WAIT1 connections 
 --> netstat | grep FIN_WAIT1 

List all TCP sockets in the SYN-RECV state 
 --> ss -t state syn-recv 

Copy all files in /var/log/hp to /backup/hp 
 --> cp /var/log/hp/* /backup/hp/ 

Add new user worker and comment as 'Manual Worker' 
 --> useradd -c 'Manual Worker' worker 

Run mtr to yahoo.com and use TCP instead of ICMP 
 --> mtr --tcp yahoo.com 

Ping yahoo.com with 2 second timeout and 125 times 
 --> ping -W 2 -c 125 yahoo.com 

Run top and display only processes of user with UID 1000 
 --> top -U 1000 

Search logs for timestamp 2023-06-10 
 --> grep '2023-06-10' *.log 

Print total and average of column 4 
 --> awk '{t+=$4} END {print t, t/NR}' file.txt 

Change to the directory /usr/share/python 
 --> cd /usr/share/python 

Connect with specific key exchange algorithms 
 --> ssh -o KexAlgorithms=diffie-hellman-group14-sha256 user@hostname 

Kill by signal number 15 to process name 
 --> killall -15 mysqld 

Use mount command to get mount point of a device 
 --> mount | grep /dev/sdn1 

Connect using IPv4 only 
 --> ssh -4 user@hostname 

Run curl in background and wait with echo 
 --> curl https://example.com & wait; echo 'fetched' 

Run htop and display CPU meters only 
 --> htop --only-cpu 

Show last 5 lines 
 --> tail -n 5 file.txt 

Find 'eth0' in system log 
 --> grep 'eth0' /var/log/syslog 

Replace the first word on each line with 'REPLACED' 
 --> sed 's/^\S\+/REPLACED/' file.txt 

Sync files and specify a custom numeric IDs 
 --> rsync -avz --numeric-ids source_dir/ destination_dir/ 

Display disk usage for files larger than 1GB in /var 
 --> du --threshold=1G /var 

Download a file with HTTP authentication 
 --> wget --user=USERNAME --password=PASSWORD http://example.com/file.zip 

Move all files in /var/log/messages to /backup/messages 
 --> mv /var/log/messages/* /backup/messages/ 

Check the status of the nginx service 
 --> systemctl status nginx 

Gzip info.txt 
 --> gzip info.txt 

Rename current window 
 --> Ctrl-b , 

Make a request with cookies 
 --> curl -b 'session=abc123' http://example.com 

Sync files and copy symlinks as symlinks 
 --> rsync -avzl source_dir/ destination_dir/ 

Query A record for google.com and display only answer section 
 --> dig google.com +noall +answer 

Find files in /home smaller than 1KB 
 --> find /home -size -1k 

Run atop and show only the top 5 network-consuming processes 
 --> atop | grep NET | head -n 5 

List screen sessions before reconnecting 
 --> screen -ls 

Zip bash and zsh config files 
 --> zip shell_configs.zip .bashrc .zshrc 

Move all files in the current directory to /tmp and keep ownership 
 --> mv --preserve=ownership * /tmp/ 

Query the CNAME record for www.google.com with verbose output 
 --> host -v -t CNAME www.google.com 

Ping amazon.com with 9 second timeout and 59 times 
 --> ping -W 9 -c 59 amazon.com 

Open file and start in visual mode 
 --> vim -c 'normal! V' file.txt 

Reattach to the most recent screen session 
 --> screen -r 

Copy all files in the current directory to /tmp and keep everything and do not overwrite existing files 
 --> cp -a -n * /tmp/ 

Create test_engineers group 
 --> groupadd test_engineers 

Move to pane on the bottom 
 --> Ctrl-b ↓ 

Unlock dev_assistant 
 --> passwd -u dev_assistant 

Remove all non-alphanumeric characters 
 --> sed 's/[^a-zA-Z0-9]//g' file.txt 

Make alias for listing directory with size 
 --> alias lsize='ls -lhS' 

Purge configs 
 --> sudo apt autoremove --purge 

Add user guest2025 with no shell access 
 --> useradd -s /usr/sbin/nologin guest2025 

Remove lock on account data_admin 
 --> passwd -u data_admin 

Add user newemployee and join them to hr group 
 --> useradd -G hr newemployee 

Download a file and specify a timeout for all operations 
 --> wget --timeout=10 http://example.com/file.zip 

Traceroute to example.com specifying destination port 33434 
 --> traceroute -p 33434 example.com 

Remove noise from terminal 
 --> clear 

Connect to SSH using a specific port 
 --> ssh -p 2222 user@hostname 

Create a file called 'future.txt' and set its timestamp to next month 
 --> touch -d 'next month' future.txt 

List details of /dev/xvda partitions 
 --> fdisk -l /dev/xvda 

Reset the credentials of mark 
 --> passwd mark 

Delete an empty directory called 'public_html' in your home 
 --> rmdir ~/public_html 

Ping 1.1.1.1 with 6 second timeout and 73 times 
 --> ping -W 6 -c 73 1.1.1.1 

Stop a failing service 'failtest' 
 --> systemctl stop failtest 

Start Jupyter server via nohup 
 --> nohup jupyter notebook & 

Show disk usage for all filesystems, filter for filesystems with less than 1G available 
 --> df -h | awk '$4 ~ /G/ && $4+0 < 1' 

Show all processes for user 'alice' 
 --> ps -u alice 

Connect with specific SSH protocol version 
 --> ssh -o Protocol=2 user@hostname 

Delete an empty directory called 'mail' in /var/spool 
 --> rmdir /var/spool/mail 

Test API with GET and check response time 
 --> curl -w 'Response time: %{time_total}s\n' -s -o /dev/null http://api.example.com/status 

Wait for 4 hours 
 --> sleep 14400 

Make a zip file called images.zip with photo1.jpg and photo2.jpg 
 --> zip images.zip photo1.jpg photo2.jpg 

Show last 5 processes 
 --> ps aux | tail -n 5 

Add entry to run script at 3 AM every Friday 
 --> crontab -e # 0 3 * * 5 /script.sh 

Traceroute to yahoo.com with destination port 53 and 5 probes per hop 
 --> traceroute -p 53 -q 5 yahoo.com 

Assign teamA to code.c 
 --> chgrp teamA code.c 

Make user29 the owner of folderA 
 --> chown user29 folderA 

Show all connections for a specific interface (e.g., wlp2s0) 
 --> netstat -I=wlp2s0 

Make request with TCP nodelay 
 --> curl --tcp-nodelay http://example.com 

Assign operations group to metrics.json 
 --> chgrp operations metrics.json 

Set permission to 711 for user access 
 --> chmod 711 run 

Show interface statistics 
 --> netstat -i 

Wait before next retry 
 --> sleep 8 

Sync files including only specific patterns 
 --> rsync -avz --include='*.txt' --exclude='*' source_dir/ destination_dir/ 

Create a file called 'file.txt' and set its timestamp to 12:00 on June 18, 2025 
 --> touch -t 202506181200 file.txt 

Display disk usage in blocks of 512 bytes 
 --> du -B 512 

Restart a failing service 'failtest' 
 --> service failtest restart 

Zip all XML files in current folder 
 --> zip xml_files.zip *.xml 

Remove dev_team_a 
 --> groupdel dev_team_a 

Remove all files in /var/log/Xorg.1.log 
 --> rm /var/log/Xorg.1.log/* 

Make request with TRACE method 
 --> curl -X TRACE http://example.com 

Show disk usage for all filesystems, filter for /home mount point 
 --> df -h | grep '/home' 

Create a directory called 'pixmaps' in your home 
 --> mkdir ~/pixmaps 

Kill GUI apps matching case-insensitive 'Chrome' 
 --> killall -i chrome 

What are the contents of my home directory and its parent? 
 --> ls ~ .. 

Run htop and show only the header 
 --> htop | head -n 5 

Create a file called 'ref.txt' and set its timestamp to match 'source.txt' 
 --> touch -r source.txt ref.txt 

Set the netmask for an interface 
 --> sudo ifconfig eth0 netmask 255.255.255.0 

Show kernel messages from a file 
 --> dmesg -F /path/to/file 

See if anyone is using top 
 --> w | grep top 

Search for 'TODO' in all files in /home 
 --> find /home -type f -exec grep "TODO" {} \; 

Unmount USB safely 
 --> umount /media/usb 

Show kernel messages with decoded facility and level numbers 
 --> dmesg -x 

Show the kernel routing table 
 --> netstat -r 

Change golang_team to go_dev 
 --> groupmod -n go_dev golang_team 

Show all interfaces with their status (PROMISC) 
 --> ifconfig -a | grep PROMISC 

Add a team slave connection 
 --> nmcli connection add type ethernet con-name team-slave-eth0 ifname eth0 master team0 

Remove george from operations group 
 --> gpasswd -d george operations 

Add a connection with a specific IPv4 DHCP route metric 
 --> nmcli connection add type ethernet con-name "My Ethernet" ifname eth0 ipv4.dhcp-route-metric 100 

Show the status of all units 
 --> systemctl list-units 

Delete legacy_team 
 --> groupdel legacy_team 

Open file and allow window resizing 
 --> less -S file.txt 

Sleep in background and wait on its PID 
 --> sleep 2 & pid=$!; wait $pid 

Add user simran to the admins group 
 --> useradd -G admins simran 

Show all UNIX domain sockets 
 --> netstat -x 

Run mtr to yahoo.com with IPv6, 75 cycles, interval 0.25s, and output in raw format 
 --> mtr -6 --raw -c 75 -i 0.25 yahoo.com 

Run log rotate daily at midnight 
 --> crontab -e # 0 0 * * * /usr/sbin/logrotate 

Create a directory called 'build' in the current directory 
 --> mkdir build 

Query ANY record for google.com and display only answer section 
 --> dig google.com ANY +noall +answer 

Assign user23 ownership of image folder 
 --> chown user23 image 

Paste last yanked buffer 
 --> tmux paste-buffer 

Run atop and show only the first 10 processes 
 --> atop | head -n 10 

Match by session ID 
 --> pkill -s 1234 myapp 

Skip 100MB of input file 
 --> dd if=input.img of=out.img bs=1M skip=100 

Kill all vlc processes 
 --> killall vlc 

Show all files, including hidden ones 
 --> ls -a 

Use nohup to run sleep 500 
 --> nohup sleep 500 & 

Remove user sam from the wheel group 
 --> gpasswd -d sam wheel 

Reverse file line order 
 --> tac file.txt 

Create new primary partition on /dev/sdb with ext3 format 
 --> parted /dev/sdb mkpart primary ext3 2GiB 6GiB 

Find files with 'hostname' keyword 
 --> grep -l 'hostname' * 

Show all connections with user and process information 
 --> sudo netstat -ep 

Grant read to others for changelog.txt 
 --> chmod o+r changelog.txt 

Display memory usage in bytes, update every 15 seconds indefinitely 
 --> free -b -s 15 

List all directories in /tmp with details 
 --> find /tmp -type d -exec ls -ld {} \; 

Compress the image.jpeg file with bzip2 
 --> bzip2 image.jpeg 

Change niceness of all systemd user services 
 --> for pid in $(systemctl show --property=MainPID --value --user); do sudo renice +10 $pid; done 

Delete a file called 'btmp' in /var/log 
 --> rm /var/log/btmp 

Move all files in /var/log/xrdp to /backup/xrdp 
 --> mv /var/log/xrdp/* /backup/xrdp/ 

Set up a new password for johnny 
 --> passwd johnny 

Use bzip2 to shrink backup.sql 
 --> bzip2 backup.sql 

Print the physical directory path, ignoring symlinks. 
 --> pwd -P 

Find all character devices in /srv 
 --> find /srv -type c 

Zip everything under public_html 
 --> zip -r website.zip public_html 

Identify all block devices with UUID 
 --> blkid 

Query the A record for example.com with search domain example.org 
 --> nslookup example.com example.org 

Screen session for machine learning training 
 --> screen -S training python train.py 

Find all files in /data but skip .bak directories 
 --> find /data -path "*/.bak" -prune -o -type f -print 

Run a command from position 57 in history 
 --> !57 

Remove docs_group 
 --> groupdel docs_group 

Find all logged in SSH users 
 --> who | grep ssh 

Unmount all file systems listed in /etc/mtab 
 --> umount -a 

Display memory usage in megabytes, update every 10 seconds indefinitely 
 --> free -m -s 10 

Check nginx status 
 --> service nginx status 

Show open files for network port 80 
 --> lsof -i :80 

Display kernel name, version, and machine hardware name 
 --> uname -svm 

Run top and show only zombie processes 
 --> top -b -n 1 | grep ' Z ' 

Change volunteers group to schedule.pdf 
 --> chgrp volunteers schedule.pdf 

Mount CIFS share to local folder 
 --> mount -t cifs //192.168.1.5/data /mnt/data -o user=admin 

Move all files in the current directory to /tmp and keep everything 
 --> mv --preserve=all * /tmp/ 

Display disk usage for all files and directories, using block size of 4T 
 --> du -B 4T 

Run ssh persistently 
 --> nohup ssh user@remotehost & 

Open file and show invisibles 
 --> vim -c 'set list' file.txt 

Ping google.com with 3 second timeout and 147 times 
 --> ping -W 3 -c 147 google.com 

Compress the file data.txt using bzip2 
 --> bzip2 data.txt 

List all tmux sessions 
 --> tmux ls 

Format partition 7 as xfs 
 --> mkfs.xfs /dev/sdf7 

Give john ownership of audio.mp3 
 --> chown john audio.mp3 

Enable WWAN radio 
 --> nmcli radio wwan on 

Create a directory called 'jobs' in /var/spool/cron 
 --> mkdir /var/spool/cron/jobs 

Compress the database.db 
 --> gzip database.db 

Change home directory of kiran to /users/kiran 
 --> usermod -d /users/kiran -m kiran 

Add system account botrunner with UID 500 
 --> useradd -r -u 500 botrunner 

Remove all punctuation 
 --> sed 's/[[:punct:]]//g' file.txt 

Reload the ssh service 
 --> service ssh reload 

Make admin group own authorized_keys 
 --> chgrp admin authorized_keys 

Create user backend with /bin/zsh shell 
 --> useradd -s /bin/zsh backend 

Ping facebook.com with 9 second timeout and 79 times 
 --> ping -W 9 -c 79 facebook.com 

Move the home directory of charlie to /users/charlie 
 --> usermod -d /users/charlie -m charlie 

Use wait in a bash trap handler 
 --> trap 'wait' EXIT 

Connect with update host keys 
 --> ssh -o UpdateHostKeys=yes user@hostname 

Lock dev_backup account 
 --> passwd -l dev_backup 

Create an empty file called 'newfile.txt' 
 --> touch newfile.txt 

Delete the interns group 
 --> groupdel interns 

Query the CNAME record for www.yahoo.com 
 --> nslookup -query=CNAME www.yahoo.com 

Unmount backup volume 
 --> umount /mnt/backup 

Find files in /tmp with permission 644 
 --> find /tmp -perm 644 

Run mtr to example.com and show output in XML format 
 --> mtr --xml example.com 

Enable promiscuous mode on enp0s3 
 --> sudo ifconfig enp0s3 promisc 

Remove worker_node account 
 --> userdel worker_node 

Scan for all block device identifiers 
 --> blkid 

Rename 'news.log' to 'news.log.old' in /var/log/news 
 --> mv /var/log/news/news.log /var/log/news/news.log.old 

Show NetworkManager status 
 --> nmcli general status 

Query the A record for github.com 
 --> nslookup github.com 

Query the A record for facebook.com and display output with line numbers 
 --> host facebook.com | nl 

Use bzip2 to compress music.wav 
 --> bzip2 music.wav 

Change /etc/passwd ownership to sysadmin 
 --> chown sysadmin /etc/passwd 

Change niceness of docker daemon 
 --> sudo renice +5 -p $(pgrep dockerd) 

Unmount analytics storage 
 --> umount /mnt/analytics 

Delete software_dev group 
 --> groupdel software_dev 

Move to the Documents folder 
 --> cd Documents 

Lock login access for user ryan 
 --> passwd -l ryan 

Create file system ext3 on /dev/sdj2 
 --> mkfs.ext3 /dev/sdj2 

Move all files in /var/log/Xorg.1.log to /backup/xorg1 
 --> mv /var/log/Xorg.1.log/* /backup/xorg1/ 

Sleep between two commands for 1 sec 
 --> sleep 1 

Change niceness of search engine processes 
 --> sudo renice +5 -p $(pgrep elasticsearch) 

Debug a failing script with minimal environment 
 --> env -i DEBUG=true ./script.sh 

Change to the directory /usr/share/texmf 
 --> cd /usr/share/texmf 

Copy all files in /etc to /backup/etc 
 --> cp /etc/* /backup/etc/ 

Display memory usage in human-readable format 
 --> free -h 

Show kernel messages and pipe to less for paging 
 --> dmesg | less 

Run mtr to amazon.com and set maximum TTL to 100 
 --> mtr -m 100 amazon.com 

Sync files and preserve extended attributes 
 --> rsync -avzX source_dir/ destination_dir/ 

List all sockets with numeric addresses 
 --> ss -n 

Download a file and specify a client private key 
 --> wget --private-key=key.pem https://example.com/file.zip 

Show errors on network interfaces 
 --> ifconfig | grep errors 

Display disk usage in megabytes for /var 
 --> du -m /var 

Install skipping triggers 
 --> sudo dpkg -i --skip-same-depends package.deb 

Display disk usage for all files and directories including hidden ones 
 --> du -a 

Zip all txt files in notes folder 
 --> zip notes.zip notes/*.txt 

Make filesystem on /dev/sdf2 using exfat 
 --> mkfs.exfat /dev/sdf2 

Gzip pdf_document.pdf 
 --> gzip pdf_document.pdf 

Add a connection with a specific IPv4 DHCP hostname source 
 --> nmcli connection add type ethernet con-name "My Ethernet" ifname eth0 ipv4.dhcp-hostname-source connection-id 

Look for temp files 
 --> locate '*.tmp' 

Change niceness of all cron jobs 
 --> sudo renice +10 -u root --whooping cpulimit 

Give me a detailed list of symbolic links in the current directory 
 --> ls -l | grep '^l' 

Add jeeva to internal group 
 --> gpasswd -a jeeva internal 

Write image to SD card 
 --> dd if=boot.img of=/dev/mmcblk0 bs=1M 

Detach using Ctrl command 
 --> Ctrl-a d 

Display all system information except operating system 
 --> uname -asrvmpi 

Switch to another user's home directory (alice) 
 --> cd ~alice 

Modify the credentials for devops_admin 
 --> passwd devops_admin 

Change niceness of processes younger than 1 minute 
 --> for pid in $(ps -eo pid,etimes | awk '$2<60{print $1}'); do sudo renice +12 $pid; done 

Download a file and specify a certificate 
 --> wget --certificate=client.pem --private-key=key.pem --ca-certificate=ca.pem https://example.com/file.zip 

Ping 1.1.1.1 with 1 second interval and 10 packets 
 --> ping -i 1 -c 10 1.1.1.1 

Give user30 access to manage firewall.conf 
 --> chown user30 firewall.conf 

Assign IP 10.0.0.2 and enable promiscuous mode on eth5 
 --> sudo ifconfig eth5 10.0.0.2 promisc 

Download only 
 --> sudo apt install --download-only nginx 

Traceroute to yahoo.com with max TTL 10 
 --> traceroute -m 10 yahoo.com 

Track package updates 
 --> watch apt list --upgradable 

Run mtr to yahoo.com and set interval to 0.25 seconds 
 --> mtr -i 0.25 yahoo.com 

Display kernel version, machine hardware name, and operating system 
 --> uname -vmo 

Grant all to group and user 
 --> chmod ug+rwx template.txt 

Open file and enable cursorline 
 --> vim -c 'set cursorline' file.txt 

Display memory usage in human-readable format, detailed low and high memory stats 
 --> free -h -l 

Download a file and specify a proxy 
 --> wget -e use_proxy=yes -e http_proxy=proxy.example.com:8080 http://example.com/file.zip 

Kill the current tmux window 
 --> Ctrl-b & 

Open file and enable cursorcolumn 
 --> vim -c 'set cursorcolumn' file.txt 

Apply bzip2 to linux.img 
 --> bzip2 linux.img 

Create exfat system on USB drive /dev/sdc7 
 --> mkfs.exfat /dev/sdc7 

Connect using configuration file 
 --> ssh -F /path/to/config user@hostname 

Rename 'draft.docx' to 'final.docx' in the parent directory 
 --> mv ../draft.docx ../final.docx 

List all cron timers 
 --> systemctl list-timers 

Traceroute to github.com using ICMP echo requests and max TTL 40 
 --> traceroute -I -m 40 github.com 

Delete metrics_ops 
 --> groupdel metrics_ops 

Traceroute to yahoo.com using only IPv4 addresses 
 --> traceroute -4 yahoo.com 

Create a file called 'pixmaps' in your home 
 --> touch ~/pixmaps 

Disable avahi-daemon service 
 --> systemctl disable avahi-daemon 

Change niceness of processes older than 1 hour 
 --> for pid in $(ps -eo pid,etimes | awk '$2>3600{print $1}'); do sudo renice +12 $pid; done 

Print who is using the system 
 --> who 

Traceroute to github.com using interface eth0 
 --> traceroute -i eth0 github.com 

Reattach to a screen session with ID 1234 
 --> screen -r 1234 

Reactivate login for integration_test 
 --> passwd -u integration_test 

Display memory usage in bytes, update every 1 second, 2 times 
 --> free -b -s 1 -c 2 

Traceroute to yahoo.com with max TTL 15 and 5 probes per hop 
 --> traceroute -m 15 -q 5 yahoo.com 

Remove prod_cluster 
 --> groupdel prod_cluster 

Copy all files and subdirectories from 'build' to 'release' 
 --> cp -r build/* release/ 

Show logs for a specific service and follow in real time 
 --> journalctl -u nginx -f 

Change to the /var/log/aptitude directory 
 --> cd /var/log/aptitude 

Display memory usage in pebibytes 
 --> free --pebi 

Change to the directory /usr/share/fonts 
 --> cd /usr/share/fonts 

Query A record for google.com and set +additional 
 --> dig google.com +additional 

Create a user navi with default configuration 
 --> useradd navi 

Copy a file 'btmp' to /var/log 
 --> cp btmp /var/log/ 

Create a user mark with /bin/bash shell 
 --> useradd -s /bin/bash mark 

Delete a file called 'samba.log' in /var/log/samba 
 --> rm /var/log/samba/samba.log 

Sync files and ignore existing files 
 --> rsync -avz --ignore-existing source_dir/ destination_dir/ 

Install multiple packages 
 --> sudo apt install git curl vim 

Copy all files in the current directory to /tmp and preserve all attributes 
 --> cp -a * /tmp/ 

Open file and expand tabs 
 --> vim -c 'set expandtab' file.txt 

Apply bzip2 to binary.bin 
 --> bzip2 binary.bin 

Create a zip named user_data.zip containing user.csv 
 --> zip user_data.zip user.csv 

Sync files and specify a custom daemon list 
 --> rsync -avz --daemon --list source_dir/ destination_dir/ 

Add a shell script to run daily 
 --> sudo cp dailyjob.sh /etc/cron.daily/ 

Start fdisk tool for /dev/sdn 
 --> fdisk /dev/sdn 

Display disk usage for all files and directories, using block size of 2P 
 --> du -B 2P 

Make request with local port binding 
 --> curl --local-port 12345 http://example.com 

Ping facebook.com with 5 second timeout and 91 times 
 --> ping -W 5 -c 91 facebook.com 

Allow ssh_admin to use password again 
 --> passwd -u ssh_admin 

Ping github.com with 6 second timeout and 33 times 
 --> ping -W 6 -c 33 github.com 

Traceroute to 8.8.8.8 
 --> traceroute 8.8.8.8 

Assign ankita to marketing group 
 --> gpasswd -a ankita marketing 

Add guest_access group 
 --> groupadd guest_access 

Create a file called 'output.txt' in the parent directory 
 --> touch ../output.txt 

Check layout of USB disk /dev/sds 
 --> fdisk -l /dev/sds 

Ping amazon.com with 3 second timeout and 47 times 
 --> ping -W 3 -c 47 amazon.com 

Change niceness of highest CPU processes 
 --> for pid in $(ps aux --sort=-%cpu | head -n 5 | awk '{print $2}'); do sudo renice +5 $pid; done 

Monitor NetworkManager activity 
 --> nmcli monitor 

Update access password for gui_dev 
 --> passwd gui_dev 

View details of the partition /dev/sdc2 
 --> fdisk -l /dev/sdc2 

Create a directory called 'mail' in /var/spool 
 --> mkdir /var/spool/mail 

Move all files in the current directory to /tmp 
 --> mv * /tmp/ 

Change creds for developer99 
 --> passwd developer99 

Execute cron task manually with nohup 
 --> nohup ./cronjob.sh & 

Use `pwd` in a script to ensure the user is in `/home/user` before proceeding. 
 --> if [ $(pwd) != "/home/user" ]; then echo "Please cd to /home/user"; exit 1; fi 

Start flask app and log output 
 --> nohup flask run > flask.log 2>&1 & 

Force kill all sshd processes 
 --> killall -9 sshd 

Change to the /var/log/syslog directory 
 --> cd /var/log/syslog 

Run Docker build with niceness +3 
 --> nice -n 3 docker build . 

Copy 'image.jpg' from the current directory to /tmp 
 --> cp image.jpg /tmp/ 

Download a file and use FTP active mode 
 --> wget --no-ftp-pasv ftp://example.com/file.zip 

Delete a directory called 'oldfolder' and all its contents recursively 
 --> rm -r oldfolder 

Change backup.sql owner to backupuser 
 --> chown backupuser backup.sql 

Download a file and mirror a website with output document 
 --> wget --mirror --output-document=output.html http://example.com/ 

Delete user helen and purge her data 
 --> userdel -r helen 

Rename training to training_dept 
 --> groupmod -n training_dept training 

Gzip error_log.txt 
 --> gzip error_log.txt 

Add shell_access group 
 --> groupadd shell_access 

View memory info 
 --> cat /proc/meminfo 

Show last 20 lines of syslog 
 --> tail -n 20 /var/log/syslog 

Start a command, get PID, and wait 
 --> sleep 3 & pid=$!; wait $pid 

Change to the /var/log/zypper.log directory 
 --> cd /var/log/zypper.log 

Ping github.com and use interface wlan1 
 --> ping -I wlan1 github.com 

Set expiry of user mike to 2025-12-31 
 --> usermod -e 2025-12-31 mike 

Show all interfaces with their status (UP/DOWN) 
 --> ifconfig -a | grep -E 'UP|DOWN' 

Get filesystem type of /dev/sdb1 
 --> blkid /dev/sdb1 

Add interns_2024 group 
 --> groupadd interns_2024 

Go to a directory named 'backup' in /var 
 --> cd /var/backup 

Query A record for github.com using DNS server 4.2.2.2 
 --> dig @4.2.2.2 github.com 

Enable WiFi radio 
 --> nmcli radio wifi on 

Add a connection with a specific IPv6 privacy setting 
 --> nmcli connection add type ethernet con-name "My Ethernet" ifname eth0 ipv6.ip6-privacy 2 

Set file.txt to 444 
 --> chmod 444 file.txt 

Create a file called 'history.log' in /var/log/apt 
 --> touch /var/log/apt/history.log 

Change onboarding_team to onboarding_unit 
 --> groupmod -n onboarding_unit onboarding_team 

Query A record for google.com and set +stats 
 --> dig google.com +stats 

Completely remove rob 
 --> userdel -r rob 

Find all directories in /tmp 
 --> find /tmp -type d 

Show all interfaces with their status (POINTTOPOINT) 
 --> ifconfig -a | grep POINTTOPOINT 

Move 'script.sh' to /usr/local/bin and keep the same name 
 --> mv script.sh /usr/local/bin/ 

Format usb partition /dev/sda8 to ext4 
 --> mkfs.ext4 /dev/sda8 

Run zypper update with niceness +5 
 --> sudo nice -n 5 zypper update 

Show load average from w output 
 --> w | head -1 

Show disk usage for all filesystems, filter for ext4 filesystems 
 --> df -hT | grep 'ext4' 

Add system user metricsd for metrics collection 
 --> useradd -r metricsd 

Ping google.com with 5 second timeout and 3 times 
 --> ping -W 5 -c 3 google.com 

Ping amazon.com and print only summary statistics 
 --> ping -q -c 10 amazon.com 

Reset access for client_service 
 --> passwd client_service 

Create a directory called 'test_output' in your home 
 --> mkdir ~/test_output 

Sync files and don't cross filesystem boundaries 
 --> rsync -avzx source_dir/ destination_dir/ 

Query A record for google.com and set +nocdflag 
 --> dig google.com +nocdflag 

Switch to test_dev account 
 --> su test_dev 

Remove reviewers_app group 
 --> groupdel reviewers_app 

Remove user bob from the system 
 --> userdel bob 

Make sure only user has read/write access to login.cfg 
 --> chmod 600 login.cfg 

Use gzip to compress textfile.txt 
 --> gzip textfile.txt 

Make a request and resume download 
 --> curl -C - -O http://example.com/largefile.zip 

Remove the first line of the file 
 --> sed '1d' file.txt 

Assign emily to marketing group 
 --> gpasswd -a emily marketing 

Add a connection with a specific IPv4 DHCP use NTP 
 --> nmcli connection add type ethernet con-name "My Ethernet" ifname eth0 ipv4.dhcp-use-ntp yes 

Change to the directory /usr/share/linda 
 --> cd /usr/share/linda 

Add semicolon at the end of each line 
 --> sed 's/$/;/' file.txt 

Remove an empty directory called 'python3' in /usr/bin 
 --> rmdir /usr/bin/python3 

Query the A record for yahoo.com and display statistics 
 --> nslookup -stats yahoo.com 

Run atop and update every 10 seconds 
 --> atop 10 

Fetch block device info of /dev/sdi6 
 --> blkid /dev/sdi6 

Wipe shell command history 
 --> history -c 

Assign production group to deploy.sh 
 --> chgrp production deploy.sh 

Add new user deploy with bash shell and home 
 --> useradd -m -s /bin/bash deploy 

Show collisions on network interfaces 
 --> ifconfig | grep collisions 

Copy a CD image to file 
 --> dd if=/dev/cdrom of=disc.iso bs=2048 

Display disk usage for all files and directories, using block size of 8M 
 --> du -B 8M 

Find files in /home modified in the last week 
 --> find /home -mtime -7 -a -type f 

Delete james from finance group 
 --> gpasswd -d james finance 

Make request and show version 
 --> curl --version 

Open file and go to last edit position 
 --> vim +lastfile file.txt 

Compress audio.mp3 with bzip2 
 --> bzip2 audio.mp3 

Change dev group to app_dev.py 
 --> chgrp dev app_dev.py 

Fill file with ones (converted) 
 --> yes | tr -d '\n' | dd of=ones.txt bs=1M count=1 

Make a request with proxy authentication 
 --> curl --proxy-user username:password --proxy http://proxy.example.com:8080 http://example.com 

Remove unused dependencies 
 --> sudo apt remove --auto-remove nginx 

Add bhavana to audit-log group 
 --> gpasswd -a bhavana audit-log 

Compress login.json with bzip2 
 --> bzip2 login.json 

Display all system information except kernel name and network node hostname 
 --> uname -arvmpi 

Open with screen compatibility 
 --> less -k file.txt 

Run process via sudo and nice 
 --> sudo nice -n 5 apt update 

Mount fuse-based filesystem 
 --> mount -t fuseblk /dev/sdw1 /mnt/fuse 

Show disk usage for all filesystems, display only the filesystem, size, and usage percentage 
 --> df -h --output=source,size,pcent 

Track ssh sessions 
 --> watch 'who | grep pts' 

Create a group named interns 
 --> groupadd interns 

Gzip the XML file config.xml 
 --> gzip config.xml 

See if anyone is using top 
 --> w | grep top 

Print column 3 in scientific notation 
 --> awk '{printf "%e\n", $3}' file.txt 

Print tab 
 --> echo -e "Column1\tColumn2" 

Follow file and show line numbers 
 --> tail -n +1 file.txt 

List usernames currently logged in 
 --> who | awk '{print $1}' 

Display disk usage for all files and directories, using block size of 256T 
 --> du -B 256T 

Create zip file bin.zip with all executables in /usr/bin 
 --> zip bin.zip /usr/bin/* 

Display memory usage in kilobytes, no buffers/cache line 
 --> free -k -o 

Query A record for google.com and set port 5353 
 --> dig google.com -p 5353 

Ping yahoo.com with 10 second timeout and 41 times 
 --> ping -W 10 -c 41 yahoo.com 

Add a new user named dev 
 --> sudo useradd dev 

Create a directory called 'test' in /home/dave 
 --> mkdir /home/dave/test 

Create a file called 'btmp' in /var/log 
 --> touch /var/log/btmp 

Schedule to clean temp every hour 
 --> crontab -e # 0 * * * * /bin/rm -rf /tmp/* 

Add frank to remote group 
 --> gpasswd -a frank remote 

Search forward for a pattern 
 --> /pattern 

Format partition on USB as fat32 
 --> mkfs.vfat /dev/sdj4 

Set a device to unmanaged mode 
 --> nmcli device set eth0 managed no 

Stop cron service using service command 
 --> sudo service cron stop 

Mount ramfs at /mnt/ramdisk 
 --> mount -t ramfs ramfs /mnt/ramdisk 

Start screen for text editor 
 --> screen -S editor nano file.txt 

Run mtr to google.com with TCP, 200 cycles, interval 0.1s, and output in JSON format 
 --> mtr --tcp --json -c 200 -i 0.1 google.com 

Use su to switch to analytics 
 --> su analytics 

Run atop and highlight running tasks 
 --> atop -h 

Show all interfaces with protocol family icmp6 
 --> ifconfig -a icmp6 

Show all processes for a group 'admin' 
 --> ps -G admin 

Disable developer99's authentication temporarily 
 --> passwd -l developer99 

Display memory usage in bytes, wide output 
 --> free -b -w 

Delete a file called 'history.log' in /var/log/apt 
 --> rm /var/log/apt/history.log 

Find all empty files in /srv 
 --> find /srv -type f -empty 

